const AddDependency = {"body":{"title":"AddDependencyrequest","type":"object","properties":{"depends_on":{"type":"string","examples":["9hw"]},"depedency_of":{"type":"string"}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"task_id":{"type":"string","examples":["9hv"],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"This is the task which is waiting on or blocking another task."}},"required":["task_id"]},{"type":"object","properties":{"custom_task_ids":{"type":"boolean","examples":[true],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"If you want to reference a task by it's custom task id, this value must be `true`."},"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n\\\nFor example: `custom_task_ids=true&team_id=123`."}},"required":[]}]},"response":{"200":{"type":"object","contentMediaType":"application/json","additionalProperties":true,"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const AddGuestToFolder = {"body":{"title":"AddGuestToFolderrequest","required":["permission_level"],"type":"object","properties":{"permission_level":{"description":"Can be `read` (view only), `comment`, `edit`, or `create` (full).","type":"string","examples":["read"]}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"folder_id":{"type":"number","contentEncoding":"double","examples":[1057],"$schema":"https://json-schema.org/draft/2020-12/schema"},"guest_id":{"type":"number","contentEncoding":"double","examples":[403],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["folder_id","guest_id"]},{"type":"object","properties":{"include_shared":{"type":"boolean","examples":[false],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Exclude details of items shared with the guest by setting this parameter to `false`. By default this parameter is set to `true`."}},"required":[]}]},"response":{"200":{"title":"AddGuestToFolderresponse","required":["guest"],"type":"object","properties":{"guest":{"title":"Guest5","required":["user","invited_by","can_see_time_spent","can_see_time_estimated","can_edit_tags","shared"],"type":"object","properties":{"user":{"title":"User7","required":["id","username","email","color","profilePicture","initials","role","last_active","date_joined","date_invited"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":["string","null"]},"email":{"type":"string"},"color":{"type":["string","null"]},"profilePicture":{"type":["string","null"]},"initials":{"type":"string"},"role":{"type":"integer","contentEncoding":"int32"},"last_active":{"type":["string","null"]},"date_joined":{"type":["string","null"]},"date_invited":{"type":"string"}}},"invited_by":{"title":"InvitedBy","type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"color":{"type":"string"},"username":{"type":"string"},"email":{"type":"string"},"initials":{"type":"string"},"profilePicture":{"type":"string"}}},"can_see_time_spent":{"type":"boolean"},"can_see_time_estimated":{"type":"boolean"},"can_edit_tags":{"type":"boolean"},"shared":{"title":"Shared5","required":["tasks","lists","folders"],"type":"object","properties":{"tasks":{"type":"array","items":{"type":"string"},"description":""},"lists":{"type":"array","items":{"type":"string"},"description":""},"folders":{"type":"array","items":{"title":"Folder4","required":["id","name","orderindex","override_statuses","hidden","task_count","archived","statuses","lists","permission_level"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"orderindex":{"type":"integer","contentEncoding":"int32"},"override_statuses":{"type":"boolean"},"hidden":{"type":"boolean"},"task_count":{"type":"string"},"archived":{"type":"boolean"},"statuses":{"type":"array","items":{"title":"Status","required":["status","color","orderindex","type"],"type":"object","properties":{"status":{"type":"string"},"color":{"type":"string"},"orderindex":{"type":"integer","contentEncoding":"int32"},"type":{"type":"string"}}},"description":""},"lists":{"type":"array","items":{"type":"string"},"description":""},"permission_level":{"type":"string"}}},"description":""}}}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const AddGuestToList = {"body":{"title":"AddGuestToListrequest","required":["permission_level"],"type":"object","properties":{"permission_level":{"description":"Can be `read` (view only), `comment`, `edit`, or `create` (full).","type":"string","examples":["read"]}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"list_id":{"type":"number","contentEncoding":"double","examples":[1427],"$schema":"https://json-schema.org/draft/2020-12/schema"},"guest_id":{"type":"number","contentEncoding":"double","examples":[403],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["list_id","guest_id"]},{"type":"object","properties":{"include_shared":{"type":"boolean","examples":[false],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Exclude details of items shared with the guest by setting this parameter to `false`. By default this parameter is set to `true`."}},"required":[]}]},"response":{"200":{"title":"AddGuestToListresponse","required":["guest"],"type":"object","properties":{"guest":{"title":"Guest3","required":["user","invited_by","can_see_time_spent","can_see_time_estimated","can_edit_tags","shared"],"type":"object","properties":{"user":{"title":"User7","required":["id","username","email","color","profilePicture","initials","role","last_active","date_joined","date_invited"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":["string","null"]},"email":{"type":"string"},"color":{"type":["string","null"]},"profilePicture":{"type":["string","null"]},"initials":{"type":"string"},"role":{"type":"integer","contentEncoding":"int32"},"last_active":{"type":["string","null"]},"date_joined":{"type":["string","null"]},"date_invited":{"type":"string"}}},"invited_by":{"title":"InvitedBy","type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"color":{"type":"string"},"username":{"type":"string"},"email":{"type":"string"},"initials":{"type":"string"},"profilePicture":{"type":"string"}}},"can_see_time_spent":{"type":"boolean"},"can_see_time_estimated":{"type":"boolean"},"can_edit_tags":{"type":"boolean"},"shared":{"title":"Shared3","required":["tasks","lists","folders"],"type":"object","properties":{"tasks":{"type":"array","items":{"type":"string"},"description":""},"lists":{"type":"array","items":{"title":"List3","required":["id","name","orderindex","status","priority","assignee","task_count","due_date","start_date","archived","override_statuses","statuses","permission_level"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"orderindex":{"type":"integer","contentEncoding":"int32"},"status":{"type":["string","null"]},"priority":{"type":["string","null"]},"assignee":{"type":["string","null"]},"task_count":{"type":"string"},"due_date":{"type":["string","null"]},"start_date":{"type":["string","null"]},"archived":{"type":"boolean"},"override_statuses":{"type":"boolean"},"statuses":{"type":"array","items":{"title":"Status","required":["status","color","orderindex","type"],"type":"object","properties":{"status":{"type":"string"},"color":{"type":"string"},"orderindex":{"type":"integer","contentEncoding":"int32"},"type":{"type":"string"}}},"description":""},"permission_level":{"type":"string"}}},"description":""},"folders":{"type":"array","items":{"type":"string"},"description":""}}}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const AddGuestToTask = {"body":{"title":"AddGuestToTaskrequest","required":["permission_level"],"type":"object","properties":{"permission_level":{"description":"Can be `read` (view only), `comment`, `edit`, or `create` (full).","type":"string","examples":["read"]}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"task_id":{"type":"string","examples":["c04"],"$schema":"https://json-schema.org/draft/2020-12/schema"},"guest_id":{"type":"number","contentEncoding":"double","examples":[403],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["task_id","guest_id"]},{"type":"object","properties":{"include_shared":{"type":"boolean","examples":[false],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Exclude details of items shared with the guest by setting this parameter to `false`. By default this parameter is set to `true`."},"custom_task_ids":{"type":"boolean","examples":[true],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"If you want to reference a task by it's custom task id, this value must be `true`."},"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."}},"required":[]}]},"response":{"200":{"title":"AddGuestToTaskresponse","required":["guest"],"type":"object","properties":{"guest":{"title":"Guest1","required":["user","invited_by","can_see_time_spent","can_see_time_estimated","can_edit_tags","shared"],"type":"object","properties":{"user":{"title":"User7","required":["id","username","email","color","profilePicture","initials","role","last_active","date_joined","date_invited"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":["string","null"]},"email":{"type":"string"},"color":{"type":["string","null"]},"profilePicture":{"type":["string","null"]},"initials":{"type":"string"},"role":{"type":"integer","contentEncoding":"int32"},"last_active":{"type":["string","null"]},"date_joined":{"type":["string","null"]},"date_invited":{"type":"string"}}},"invited_by":{"title":"InvitedBy","type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"color":{"type":"string"},"username":{"type":"string"},"email":{"type":"string"},"initials":{"type":"string"},"profilePicture":{"type":"string"}}},"can_see_time_spent":{"type":"boolean"},"can_see_time_estimated":{"type":"boolean"},"can_edit_tags":{"type":"boolean"},"shared":{"title":"Shared1","required":["tasks","lists","folders"],"type":"object","properties":{"tasks":{"type":"array","items":{"title":"Task2","required":["id","name","status","orderindex","date_created","date_updated","date_closed","archived","creator","assignees","checklists","tags","parent","priority","due_date","start_date","points","time_estimate","custom_fields","dependencies","team_id","url","permission_level","list","folder","space"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"status":{"title":"Status","required":["status","color","orderindex","type"],"type":"object","properties":{"status":{"type":"string"},"color":{"type":"string"},"orderindex":{"type":"integer","contentEncoding":"int32"},"type":{"type":"string"}}},"orderindex":{"type":"string"},"date_created":{"type":"string"},"date_updated":{"type":"string"},"date_closed":{"type":["string","null"]},"archived":{"type":"boolean"},"creator":{"title":"Creator","required":["id","username","color","profilePicture"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"color":{"type":"string"},"profilePicture":{"type":"string"}}},"assignees":{"type":"array","items":{"type":"string"},"description":""},"checklists":{"type":"array","items":{"type":"string"},"description":""},"tags":{"type":"array","items":{"type":"string"},"description":""},"parent":{"type":["string","null"]},"priority":{"title":"Priority","required":["id","priority","color","orderindex"],"type":"object","properties":{"id":{"type":"string"},"priority":{"type":"string"},"color":{"type":"string"},"orderindex":{"type":"string"}}},"due_date":{"type":"string"},"start_date":{"type":["string","null"]},"points":{"type":["string","null"]},"time_estimate":{"type":["string","null"]},"custom_fields":{"type":"array","items":{"type":"string"},"description":""},"dependencies":{"type":"array","items":{"type":"string"},"description":""},"team_id":{"type":"string"},"url":{"type":"string"},"permission_level":{"type":"string"},"list":{"title":"List2","required":["id","name","access"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"access":{"type":"boolean"}}},"folder":{"title":"Folder3","required":["id","name","hidden","access"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"hidden":{"type":"boolean"},"access":{"type":"boolean"}}},"space":{"title":"Space","required":["id"],"type":"object","properties":{"id":{"type":"string"}}}}},"description":""},"lists":{"type":"array","items":{"type":"string"},"description":""},"folders":{"type":"array","items":{"type":"string"},"description":""}}}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const AddTagToTask = {"metadata":{"allOf":[{"type":"object","properties":{"task_id":{"type":"string","examples":["abc"],"$schema":"https://json-schema.org/draft/2020-12/schema"},"tag_name":{"type":"string","examples":["name"],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["task_id","tag_name"]},{"type":"object","properties":{"custom_task_ids":{"type":"boolean","examples":[true],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"If you want to reference a task by it's custom task id, this value must be `true`."},"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."}},"required":[]},{"type":"object","properties":{"Content-Type":{"const":"application/json","type":"string","examples":["application/json"],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["Content-Type"]}]},"response":{"200":{"type":"object","contentMediaType":"application/json","additionalProperties":true,"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const AddTaskLink = {"metadata":{"allOf":[{"type":"object","properties":{"task_id":{"type":"string","examples":["9hv"],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"The task to initiate the link from."},"links_to":{"type":"string","examples":["9hz"],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"The task to link to."}},"required":["task_id","links_to"]},{"type":"object","properties":{"custom_task_ids":{"type":"boolean","examples":[true],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"If you want to reference a task by it's custom task id, this value must be `true`."},"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."}},"required":[]}]},"response":{"200":{"title":"AddTaskLinkresponse","required":["task"],"type":"object","properties":{"task":{"title":"Task","required":["id","name","status","orderindex","date_created","date_updated","date_closed","creator","assignees","checklists","tags","parent","priority","due_date","start_date","time_estimate","time_spent","list","folder","space","linked_tasks","url"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"status":{"title":"Status","required":["status","color","orderindex","type"],"type":"object","properties":{"status":{"type":"string"},"color":{"type":"string"},"orderindex":{"type":"integer","contentEncoding":"int32"},"type":{"type":"string"}}},"orderindex":{"type":"string"},"date_created":{"type":"string"},"date_updated":{"type":"string"},"date_closed":{"type":["string","null"]},"creator":{"title":"Creator","required":["id","username","color","profilePicture"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"color":{"type":"string"},"profilePicture":{"type":"string"}}},"assignees":{"type":"array","items":{"type":"string"},"description":""},"checklists":{"type":"array","items":{"type":"string"},"description":""},"tags":{"type":"array","items":{"type":"string"},"description":""},"parent":{"type":["string","null"]},"priority":{"type":["string","null"]},"due_date":{"type":["string","null"]},"start_date":{"type":["string","null"]},"time_estimate":{"type":["string","null"]},"time_spent":{"type":["string","null"]},"list":{"title":"List","required":["id"],"type":"object","properties":{"id":{"type":"string"}}},"folder":{"title":"Folder","required":["id"],"type":"object","properties":{"id":{"type":"string"}}},"space":{"title":"Space","required":["id"],"type":"object","properties":{"id":{"type":"string"}}},"linked_tasks":{"type":"array","items":{"title":"LinkedTask","required":["task_id","link_id","date_created","userid"],"type":"object","properties":{"task_id":{"type":"string"},"link_id":{"type":"string"},"date_created":{"type":"string"},"userid":{"type":"string"}}},"description":""},"url":{"type":"string"}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const AddTaskToList = {"metadata":{"allOf":[{"type":"object","properties":{"list_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema"},"task_id":{"type":"string","examples":["9hz"],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["list_id","task_id"]}]},"response":{"200":{"type":"object","contentMediaType":"application/json","additionalProperties":true,"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const Addtagsfromtimeentries = {"body":{"title":"Addtagsfromtimeentriesrequest","required":["time_entry_ids","tags"],"type":"object","properties":{"time_entry_ids":{"type":"array","items":{"type":"string","examples":["timer_id"]},"description":""},"tags":{"type":"array","items":{"title":"Tags6","required":["name","tag_fg","tag_bg"],"type":"object","properties":{"name":{"type":"string","examples":["name of tag"]},"tag_fg":{"type":"string","examples":["#FFFFFF"]},"tag_bg":{"type":"string","examples":["#BF55EC"]}}},"description":""}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Workspace ID"}},"required":["team_id"]}]},"response":{"200":{"type":"object","contentMediaType":"application/json","additionalProperties":true,"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const Changetagnamesfromtimeentries = {"body":{"title":"Changetagnamesfromtimeentriesrequest","required":["name","new_name","tag_bg","tag_fg"],"type":"object","properties":{"name":{"type":"string","examples":["old tag name"]},"new_name":{"type":"string","examples":["new tag name"]},"tag_bg":{"type":"string","examples":["#000000"]},"tag_fg":{"type":"string","examples":["#000000"]}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Workspace ID"}},"required":["team_id"]}]},"response":{"200":{"type":"object","contentMediaType":"application/json","additionalProperties":true,"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const CreateChatChannel = {"body":{"type":"object","properties":{"description":{"type":"string","description":"The description for the Channel being created."},"name":{"type":"string","description":"The name for the Channel being created."},"topic":{"type":"string","description":"The topic of the Channel being created."},"user_ids":{"type":"array","description":"Optionally specify unique user IDs, up to 100.","items":{"type":"string"},"maxItems":100,"uniqueItems":true},"visibility":{"type":"string","description":"The visibility of the Channel being created. If not specified, the Channel is PUBLIC.","enum":["PUBLIC","PRIVATE"]}},"required":["name"],"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"workspace_id":{"type":"integer","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of the Workspace."}},"required":["workspace_id"]}]},"response":{"200":{"type":"object","description":"The existing Channel that is matching the creation request.","properties":{"data":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"description":{"type":"string","description":"The full Description of the Channel.","format":"RichText"},"topic":{"type":"string"},"type":{"type":"string","description":"The type of the Channel\n\n`CHANNEL` `DM` `GROUP_DM`","enum":["CHANNEL","DM","GROUP_DM"]},"visibility":{"type":"string","description":"The visibility of the Channel\n\n`PUBLIC` `PRIVATE`","enum":["PUBLIC","PRIVATE"]},"parent":{"description":"Parent information","type":"object","required":["id","type"],"properties":{"id":{"type":"string"},"type":{"type":"number"}}},"creator":{"type":"string","description":"ID of the user who created this Channel"},"created_at":{"type":"string","description":"Timestamp of when this Channel was created"},"updated_at":{"type":"string","description":"Timestamp of the last update in this Channel - Deprecated in favor of latest_comment_at","deprecated":true},"workspace_id":{"type":"string","description":"Workspace ID of the Channel"},"archived":{"type":"boolean"},"latest_comment_at":{"type":"string","description":"Timestamp of the last comment in this Channel. Optional in the case of a new Channel with no comments yet"},"is_canonical_channel":{"type":"boolean","description":"Is this the canonical channel for the parent location?"},"is_hidden":{"type":"boolean","description":"Has the user hidden this Channel from their sidebar? Currently only an option for DM/Group DM."},"default_view":{"description":"Data about the default view that the Channel should open in","type":"object","required":["type","view_id","standard"],"properties":{"type":{"type":"number"},"view_id":{"type":"string"},"standard":{"type":"boolean"}}},"channel_type":{"type":"number","description":"Type of channel (chat, project, etc.) aka subcategory_type\n\n`1` `2` `3`","enum":[1,2,3]},"counts":{"description":"Counts relevant to the user requesting the Channel","type":"object","required":["parent_id","parent_type","root_parent_id","root_parent_type","date","_version_vector"],"properties":{"parent_id":{"type":"string"},"parent_type":{"type":"string","enum":["attachment","attachmentAccess","approval","banWorkspace","checklist","checklistItem","checklistTemplateAccess","comment","commentsLastReadAt","customField","customFieldAccess","customItem","dashboard","dashboardAccess","doc","docAccess","folder","folderDescendantsSet","folderTemplateAccess","form","formulaValue","foundationalJob","goal","goalAccess","goalFolder","goalFolderAccess","hierarchy","list","listDescendantsSet","listDescendantsPoints","listDescendantsTimeEstimates","listTemplateAccess","notepad","page","pageAccess","post","reminder","reminderAccess","rolledUpFieldValue","space","spaceDescendantsSet","spaceTemplateAccess","task","taskAccess","taskHistory","taskTemplateAccess","template","user","userAccess","userGroup","userHierarchy","view","viewAccess","viewTemplateAccess","whiteboard","whiteboardAccess","widget","workspace","workspaceDescendantsSet"],"description":"`attachment` `attachmentAccess` `approval` `banWorkspace` `checklist` `checklistItem` `checklistTemplateAccess` `comment` `commentsLastReadAt` `customField` `customFieldAccess` `customItem` `dashboard` `dashboardAccess` `doc` `docAccess` `folder` `folderDescendantsSet` `folderTemplateAccess` `form` `formulaValue` `foundationalJob` `goal` `goalAccess` `goalFolder` `goalFolderAccess` `hierarchy` `list` `listDescendantsSet` `listDescendantsPoints` `listDescendantsTimeEstimates` `listTemplateAccess` `notepad` `page` `pageAccess` `post` `reminder` `reminderAccess` `rolledUpFieldValue` `space` `spaceDescendantsSet` `spaceTemplateAccess` `task` `taskAccess` `taskHistory` `taskTemplateAccess` `template` `user` `userAccess` `userGroup` `userHierarchy` `view` `viewAccess` `viewTemplateAccess` `whiteboard` `whiteboardAccess` `widget` `workspace` `workspaceDescendantsSet`"},"root_parent_id":{"type":"string"},"root_parent_type":{"type":"string","enum":["attachment","attachmentAccess","approval","banWorkspace","checklist","checklistItem","checklistTemplateAccess","comment","commentsLastReadAt","customField","customFieldAccess","customItem","dashboard","dashboardAccess","doc","docAccess","folder","folderDescendantsSet","folderTemplateAccess","form","formulaValue","foundationalJob","goal","goalAccess","goalFolder","goalFolderAccess","hierarchy","list","listDescendantsSet","listDescendantsPoints","listDescendantsTimeEstimates","listTemplateAccess","notepad","page","pageAccess","post","reminder","reminderAccess","rolledUpFieldValue","space","spaceDescendantsSet","spaceTemplateAccess","task","taskAccess","taskHistory","taskTemplateAccess","template","user","userAccess","userGroup","userHierarchy","view","viewAccess","viewTemplateAccess","whiteboard","whiteboardAccess","widget","workspace","workspaceDescendantsSet"],"description":"`attachment` `attachmentAccess` `approval` `banWorkspace` `checklist` `checklistItem` `checklistTemplateAccess` `comment` `commentsLastReadAt` `customField` `customFieldAccess` `customItem` `dashboard` `dashboardAccess` `doc` `docAccess` `folder` `folderDescendantsSet` `folderTemplateAccess` `form` `formulaValue` `foundationalJob` `goal` `goalAccess` `goalFolder` `goalFolderAccess` `hierarchy` `list` `listDescendantsSet` `listDescendantsPoints` `listDescendantsTimeEstimates` `listTemplateAccess` `notepad` `page` `pageAccess` `post` `reminder` `reminderAccess` `rolledUpFieldValue` `space` `spaceDescendantsSet` `spaceTemplateAccess` `task` `taskAccess` `taskHistory` `taskTemplateAccess` `template` `user` `userAccess` `userGroup` `userHierarchy` `view` `viewAccess` `viewTemplateAccess` `whiteboard` `whiteboardAccess` `widget` `workspace` `workspaceDescendantsSet`"},"date":{"type":"number","description":"When the user last read comments to this object, set in the past to mark comments as unread. Should be a timestamp in milliseconds."},"_version_vector":{"deprecated":true,"type":"object","required":["object_id","object_type","vector","workspace_id"],"properties":{"object_id":{"type":"string"},"object_type":{"type":"string"},"vector":{"type":"array","items":{"type":"object","required":["master_id","version","deleted"],"properties":{"master_id":{"type":"number"},"version":{"type":"number"},"deleted":{"type":"boolean"}}}},"workspace_id":{"type":"number"}}},"version":{"type":"number","description":"The version of the object when the last read at object was last updated."},"has_unread":{"type":"boolean","description":"Whether the user has unread comments on this object. (Optional)"},"num_unread":{"type":"number","description":"How many unread comments there are on this object. (Optional)"},"latest_comment_at":{"type":"number","description":"The date of the latest comment on this object. (Optional)"},"badge_count":{"type":"number","description":"The badge count for this object. (Optional)"},"thread_count":{"type":"number","description":"The number of unread threads on this object. (Optional)"},"mention_count":{"type":"number","description":"The number of mentions on this object. (Optional)"}}},"chat_room_category":{"type":"string","description":"The category of the Channel, e.g. a welcome channel, (in the future, maybe) a ClickBot channel, etc.\n\n`WELCOME_CHANNEL`","enum":["WELCOME_CHANNEL"]},"links":{"description":"The links to elements of the Channel.","type":"object","required":["members","followers"],"properties":{"members":{"type":"string","description":"The link to the members of the Channel."},"followers":{"type":"string","description":"The link to the followers of the Channel."}}}},"required":["id","name","type","visibility","parent","creator","created_at","updated_at","workspace_id","archived","links"]}},"required":["data"],"$schema":"https://json-schema.org/draft/2020-12/schema"},"201":{"type":"object","description":"The new Channel.","properties":{"data":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"description":{"type":"string","description":"The full Description of the Channel.","format":"RichText"},"topic":{"type":"string"},"type":{"type":"string","description":"The type of the Channel\n\n`CHANNEL` `DM` `GROUP_DM`","enum":["CHANNEL","DM","GROUP_DM"]},"visibility":{"type":"string","description":"The visibility of the Channel\n\n`PUBLIC` `PRIVATE`","enum":["PUBLIC","PRIVATE"]},"parent":{"description":"Parent information","type":"object","required":["id","type"],"properties":{"id":{"type":"string"},"type":{"type":"number"}}},"creator":{"type":"string","description":"ID of the user who created this Channel"},"created_at":{"type":"string","description":"Timestamp of when this Channel was created"},"updated_at":{"type":"string","description":"Timestamp of the last update in this Channel - Deprecated in favor of latest_comment_at","deprecated":true},"workspace_id":{"type":"string","description":"Workspace ID of the Channel"},"archived":{"type":"boolean"},"latest_comment_at":{"type":"string","description":"Timestamp of the last comment in this Channel. Optional in the case of a new Channel with no comments yet"},"is_canonical_channel":{"type":"boolean","description":"Is this the canonical channel for the parent location?"},"is_hidden":{"type":"boolean","description":"Has the user hidden this Channel from their sidebar? Currently only an option for DM/Group DM."},"default_view":{"description":"Data about the default view that the Channel should open in","type":"object","required":["type","view_id","standard"],"properties":{"type":{"type":"number"},"view_id":{"type":"string"},"standard":{"type":"boolean"}}},"channel_type":{"type":"number","description":"Type of channel (chat, project, etc.) aka subcategory_type\n\n`1` `2` `3`","enum":[1,2,3]},"counts":{"description":"Counts relevant to the user requesting the Channel","type":"object","required":["parent_id","parent_type","root_parent_id","root_parent_type","date","_version_vector"],"properties":{"parent_id":{"type":"string"},"parent_type":{"type":"string","enum":["attachment","attachmentAccess","approval","banWorkspace","checklist","checklistItem","checklistTemplateAccess","comment","commentsLastReadAt","customField","customFieldAccess","customItem","dashboard","dashboardAccess","doc","docAccess","folder","folderDescendantsSet","folderTemplateAccess","form","formulaValue","foundationalJob","goal","goalAccess","goalFolder","goalFolderAccess","hierarchy","list","listDescendantsSet","listDescendantsPoints","listDescendantsTimeEstimates","listTemplateAccess","notepad","page","pageAccess","post","reminder","reminderAccess","rolledUpFieldValue","space","spaceDescendantsSet","spaceTemplateAccess","task","taskAccess","taskHistory","taskTemplateAccess","template","user","userAccess","userGroup","userHierarchy","view","viewAccess","viewTemplateAccess","whiteboard","whiteboardAccess","widget","workspace","workspaceDescendantsSet"],"description":"`attachment` `attachmentAccess` `approval` `banWorkspace` `checklist` `checklistItem` `checklistTemplateAccess` `comment` `commentsLastReadAt` `customField` `customFieldAccess` `customItem` `dashboard` `dashboardAccess` `doc` `docAccess` `folder` `folderDescendantsSet` `folderTemplateAccess` `form` `formulaValue` `foundationalJob` `goal` `goalAccess` `goalFolder` `goalFolderAccess` `hierarchy` `list` `listDescendantsSet` `listDescendantsPoints` `listDescendantsTimeEstimates` `listTemplateAccess` `notepad` `page` `pageAccess` `post` `reminder` `reminderAccess` `rolledUpFieldValue` `space` `spaceDescendantsSet` `spaceTemplateAccess` `task` `taskAccess` `taskHistory` `taskTemplateAccess` `template` `user` `userAccess` `userGroup` `userHierarchy` `view` `viewAccess` `viewTemplateAccess` `whiteboard` `whiteboardAccess` `widget` `workspace` `workspaceDescendantsSet`"},"root_parent_id":{"type":"string"},"root_parent_type":{"type":"string","enum":["attachment","attachmentAccess","approval","banWorkspace","checklist","checklistItem","checklistTemplateAccess","comment","commentsLastReadAt","customField","customFieldAccess","customItem","dashboard","dashboardAccess","doc","docAccess","folder","folderDescendantsSet","folderTemplateAccess","form","formulaValue","foundationalJob","goal","goalAccess","goalFolder","goalFolderAccess","hierarchy","list","listDescendantsSet","listDescendantsPoints","listDescendantsTimeEstimates","listTemplateAccess","notepad","page","pageAccess","post","reminder","reminderAccess","rolledUpFieldValue","space","spaceDescendantsSet","spaceTemplateAccess","task","taskAccess","taskHistory","taskTemplateAccess","template","user","userAccess","userGroup","userHierarchy","view","viewAccess","viewTemplateAccess","whiteboard","whiteboardAccess","widget","workspace","workspaceDescendantsSet"],"description":"`attachment` `attachmentAccess` `approval` `banWorkspace` `checklist` `checklistItem` `checklistTemplateAccess` `comment` `commentsLastReadAt` `customField` `customFieldAccess` `customItem` `dashboard` `dashboardAccess` `doc` `docAccess` `folder` `folderDescendantsSet` `folderTemplateAccess` `form` `formulaValue` `foundationalJob` `goal` `goalAccess` `goalFolder` `goalFolderAccess` `hierarchy` `list` `listDescendantsSet` `listDescendantsPoints` `listDescendantsTimeEstimates` `listTemplateAccess` `notepad` `page` `pageAccess` `post` `reminder` `reminderAccess` `rolledUpFieldValue` `space` `spaceDescendantsSet` `spaceTemplateAccess` `task` `taskAccess` `taskHistory` `taskTemplateAccess` `template` `user` `userAccess` `userGroup` `userHierarchy` `view` `viewAccess` `viewTemplateAccess` `whiteboard` `whiteboardAccess` `widget` `workspace` `workspaceDescendantsSet`"},"date":{"type":"number","description":"When the user last read comments to this object, set in the past to mark comments as unread. Should be a timestamp in milliseconds."},"_version_vector":{"deprecated":true,"type":"object","required":["object_id","object_type","vector","workspace_id"],"properties":{"object_id":{"type":"string"},"object_type":{"type":"string"},"vector":{"type":"array","items":{"type":"object","required":["master_id","version","deleted"],"properties":{"master_id":{"type":"number"},"version":{"type":"number"},"deleted":{"type":"boolean"}}}},"workspace_id":{"type":"number"}}},"version":{"type":"number","description":"The version of the object when the last read at object was last updated."},"has_unread":{"type":"boolean","description":"Whether the user has unread comments on this object. (Optional)"},"num_unread":{"type":"number","description":"How many unread comments there are on this object. (Optional)"},"latest_comment_at":{"type":"number","description":"The date of the latest comment on this object. (Optional)"},"badge_count":{"type":"number","description":"The badge count for this object. (Optional)"},"thread_count":{"type":"number","description":"The number of unread threads on this object. (Optional)"},"mention_count":{"type":"number","description":"The number of mentions on this object. (Optional)"}}},"chat_room_category":{"type":"string","description":"The category of the Channel, e.g. a welcome channel, (in the future, maybe) a ClickBot channel, etc.\n\n`WELCOME_CHANNEL`","enum":["WELCOME_CHANNEL"]},"links":{"description":"The links to elements of the Channel.","type":"object","required":["members","followers"],"properties":{"members":{"type":"string","description":"The link to the members of the Channel."},"followers":{"type":"string","description":"The link to the followers of the Channel."}}}},"required":["id","name","type","visibility","parent","creator","created_at","updated_at","workspace_id","archived","links"]}},"required":["data"],"$schema":"https://json-schema.org/draft/2020-12/schema"},"default":{"type":"object","properties":{"status":{"type":"integer","description":"The HTTP Status code for the error"},"message":{"type":"string","description":"The message describing the error","examples":["Generic error message"]},"trace_id":{"type":"integer","description":"Unique trace ID for tracking the request. Used for troubleshooting errors","examples":[123456789]},"timestamp":{"type":"integer","description":"The time of the error (Unix epoch milliseconds timestamp).","examples":[1671534256138]}},"required":["status","message","trace_id","timestamp"],"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const CreateChatMessage = {"body":{"type":"object","properties":{"assignee":{"type":"string","description":"The possible assignee of the message."},"group_assignee":{"type":"string","description":"The possible group assignee of the message."},"triaged_action":{"type":"number","description":"The triaged action applied to the message.","enum":[1,2]},"triaged_object_id":{"type":"string","description":"The message triaged action object id."},"triaged_object_type":{"type":"number","description":"The message triaged action object type."},"type":{"type":"string","description":"The type of message.","enum":["message","post"]},"content":{"type":"string","description":"The full content of the message to be created","format":"RichText","maxLength":980},"reactions":{"type":"array","description":"The reactions to the message that exist at creation time","items":{"type":"object","properties":{"date":{"type":"number","description":"The date & time the reaction was created (Unix epoch milliseconds timestamp)."},"reaction":{"type":"string","description":"The reaction to the message."},"user_id":{"type":"string","description":"The ID of the user who created the reaction."}},"required":["date","reaction","user_id"]},"maxItems":10},"followers":{"type":"array","description":"The ids of the followers of the message","items":{"type":"string"},"maxItems":10},"content_format":{"type":"string","description":"The format of the message content (Default: text/md)","default":"text/md","enum":["text/md","text/plain"]},"post_data":{"description":"The data of the post message.","type":"object","required":["title","subtype"],"properties":{"title":{"type":"string","description":"The title of the Chat Post.","maxLength":255},"subtype":{"description":"The subtype of the Chat Post.","type":"object","required":["id"],"properties":{"id":{"type":"string","description":"The subtype ID of the Chat Post."}}}}}},"required":["type","content"],"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"workspace_id":{"type":"integer","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of the Workspace."},"channel_id":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of the Channel or direct message."}},"required":["workspace_id","channel_id"]}]},"response":{"201":{"type":"object","properties":{"post_data":{"description":"The data of the post message.","type":"object","required":["title","subtype"],"properties":{"title":{"type":"string","description":"The title of the Chat Post.","maxLength":255},"subtype":{"description":"The subtype of the Chat Post.","type":"object","required":["id"],"properties":{"id":{"type":"string","description":"The subtype ID of the Chat Post."}}}}},"assignee":{"type":"string","description":"The possible assignee of the message."},"assigned_by":{"type":"string","description":"The user who assigned the message."},"content":{"type":"string","description":"The full content of the message.","format":"RichText"},"date":{"type":"number","description":"The date & time the message was created (Unix epoch milliseconds timestamp)."},"date_assigned":{"type":"number","description":"The date & time the message was assigned (Unix epoch milliseconds timestamp)."},"date_resolved":{"type":"number","description":"The date & time the message was resolved (Unix epoch milliseconds timestamp)."},"date_updated":{"type":"number","description":"The date & time the message was updated (Unix epoch milliseconds timestamp)."},"group_assignee":{"type":"string","description":"The possible group assignee of the message."},"id":{"type":"string","description":"The ID of the message."},"parent_channel":{"type":"string","description":"The ID of the chat this message belongs to."},"parent_message":{"type":"string","description":"The ID of the message this message is a reply to."},"resolved":{"type":"boolean","description":"The resolved status of the message."},"resolved_by":{"type":"string","description":"The user who resolved the message."},"triaged_action":{"type":"number","description":"The triaged action applied to the message.\n\n`1` `2`","enum":[1,2]},"triaged_object_id":{"type":"string","description":"The message triaged action object id."},"triaged_object_type":{"type":"number","description":"The message triaged action object type."},"type":{"type":"string","description":"The type of message.\n\n`message` `post`","enum":["message","post"]},"user_id":{"type":"string","description":"The ID of the user who created the message."},"links":{"description":"The links to elements of the message.","type":"object","required":["reactions","replies","tagged_users"],"properties":{"reactions":{"type":"string","description":"The link to the reactions of this message."},"replies":{"type":"string","description":"The link to the replies of this message."},"tagged_users":{"type":"string","description":"The link to the tagged users of this message."}}},"replies_count":{"type":"number","description":"The number of replies to the message."}},"required":["content","date","id","parent_channel","resolved","type","user_id","links","replies_count"],"$schema":"https://json-schema.org/draft/2020-12/schema"},"404":{"type":"object","properties":{"status":{"type":"integer","description":"The HTTP Status code for the error"},"message":{"type":"string","description":"The message describing the error","examples":["Generic error message"]},"trace_id":{"type":"integer","description":"Unique trace ID for tracking the request. Used for troubleshooting errors","examples":[123456789]},"timestamp":{"type":"integer","description":"The time of the error (Unix epoch milliseconds timestamp).","examples":[1671534256138]}},"required":["status","message","trace_id","timestamp"],"$schema":"https://json-schema.org/draft/2020-12/schema"},"default":{"type":"object","properties":{"status":{"type":"integer","description":"The HTTP Status code for the error"},"message":{"type":"string","description":"The message describing the error","examples":["Generic error message"]},"trace_id":{"type":"integer","description":"Unique trace ID for tracking the request. Used for troubleshooting errors","examples":[123456789]},"timestamp":{"type":"integer","description":"The time of the error (Unix epoch milliseconds timestamp).","examples":[1671534256138]}},"required":["status","message","trace_id","timestamp"],"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const CreateChatReaction = {"body":{"type":"object","properties":{"reaction":{"type":"string","description":"The name of the emoji to use for the reaction."}},"required":["reaction"],"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"workspace_id":{"type":"integer","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of the Workspace."},"message_id":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of the specified message"}},"required":["workspace_id","message_id"]}]},"response":{"201":{"type":"object","properties":{"date":{"type":"number","description":"The date & time the reaction was created (Unix epoch milliseconds timestamp)."},"reaction":{"type":"string","description":"The reaction to the message."},"user_id":{"type":"string","description":"The ID of the user who created the reaction."}},"required":["date","reaction","user_id"],"$schema":"https://json-schema.org/draft/2020-12/schema"},"400":{"type":"object","properties":{"status":{"type":"integer","description":"The HTTP Status code for the error"},"message":{"type":"string","description":"The message describing the error","examples":["Generic error message"]},"trace_id":{"type":"integer","description":"Unique trace ID for tracking the request. Used for troubleshooting errors","examples":[123456789]},"timestamp":{"type":"integer","description":"The time of the error (Unix epoch milliseconds timestamp).","examples":[1671534256138]}},"required":["status","message","trace_id","timestamp"],"$schema":"https://json-schema.org/draft/2020-12/schema"},"404":{"type":"object","properties":{"status":{"type":"integer","description":"The HTTP Status code for the error"},"message":{"type":"string","description":"The message describing the error","examples":["Generic error message"]},"trace_id":{"type":"integer","description":"Unique trace ID for tracking the request. Used for troubleshooting errors","examples":[123456789]},"timestamp":{"type":"integer","description":"The time of the error (Unix epoch milliseconds timestamp).","examples":[1671534256138]}},"required":["status","message","trace_id","timestamp"],"$schema":"https://json-schema.org/draft/2020-12/schema"},"default":{"type":"object","properties":{"status":{"type":"integer","description":"The HTTP Status code for the error"},"message":{"type":"string","description":"The message describing the error","examples":["Generic error message"]},"trace_id":{"type":"integer","description":"Unique trace ID for tracking the request. Used for troubleshooting errors","examples":[123456789]},"timestamp":{"type":"integer","description":"The time of the error (Unix epoch milliseconds timestamp).","examples":[1671534256138]}},"required":["status","message","trace_id","timestamp"],"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const CreateChatViewComment = {"body":{"title":"CreateChatViewCommentrequest","required":["comment_text","notify_all"],"type":"object","properties":{"comment_text":{"type":"string","examples":["View comment content"]},"notify_all":{"description":"If `notify_all` is true, notifications will be sent to everyone including the creator of the comment.","type":"boolean","examples":[true]}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"view_id":{"type":"string","examples":["3c"],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"105 (string)"}},"required":["view_id"]}]},"response":{"200":{"title":"CreateChatViewCommentresponse","required":["id","hist_id","date"],"type":"object","properties":{"id":{"type":"string"},"hist_id":{"type":"string"},"date":{"type":"integer","contentEncoding":"int64"}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const CreateChecklist = {"body":{"title":"CreateChecklistrequest","required":["name"],"type":"object","properties":{"name":{"type":"string","examples":["Checklist"]}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"task_id":{"type":"string","examples":["9hz"],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["task_id"]},{"type":"object","properties":{"custom_task_ids":{"type":"boolean","examples":[true],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"If you want to reference a task by it's custom task id, this value must be `true`."},"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."}},"required":[]}]},"response":{"200":{"title":"CreateChecklistresponse","required":["checklist"],"type":"object","properties":{"checklist":{"title":"Checklist","required":["id","task_id","name","orderindex","resolved","unresolved","items"],"type":"object","properties":{"id":{"type":"string"},"task_id":{"type":"string"},"name":{"type":"string"},"orderindex":{"type":"integer","contentEncoding":"int32"},"resolved":{"type":"integer","contentEncoding":"int32"},"unresolved":{"type":"integer","contentEncoding":"int32"},"items":{"type":"array","items":{"type":"string"},"description":""}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const CreateChecklistItem = {"body":{"title":"CreateChecklistItemrequest","type":"object","properties":{"name":{"type":"string","examples":["Checklist Item"]},"assignee":{"type":"integer","contentEncoding":"int32","examples":[183]}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"checklist_id":{"type":"string","examples":["b955c4dc"],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"b8a8-48d8-a0c6-b4200788a683 (uuid)"}},"required":["checklist_id"]}]},"response":{"200":{"title":"CreateChecklistItemresponse","required":["checklist"],"type":"object","properties":{"checklist":{"title":"Checklist1","required":["id","task_id","name","date_created","orderindex","resolved","unresolved","items"],"type":"object","properties":{"id":{"type":"string"},"task_id":{"type":"string"},"name":{"type":"string"},"date_created":{"type":"string"},"orderindex":{"type":"integer","contentEncoding":"int32"},"resolved":{"type":"integer","contentEncoding":"int32"},"unresolved":{"type":"integer","contentEncoding":"int32"},"items":{"type":"array","items":{"title":"Item","required":["id","name","orderindex","assignee","resolved","parent","date_created","children"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"orderindex":{"type":"integer","contentEncoding":"int32"},"assignee":{"title":"Assignee","required":["id","username","email","color","initials","profilePicture"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"email":{"type":"string"},"color":{"type":"string"},"initials":{"type":"string"},"profilePicture":{"type":"string"}}},"resolved":{"type":"boolean"},"parent":{"type":["string","null"]},"date_created":{"type":"string"},"children":{"type":"array","items":{"type":"string"},"description":""}}},"description":""}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const CreateDirectMessageChatChannel = {"body":{"type":"object","properties":{"user_ids":{"type":"array","description":"The unique user IDs of participants in the Direct Message, up to 10. A Self DM is created when no user IDs are provided","items":{"type":"string"},"maxItems":10,"uniqueItems":true}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"workspace_id":{"type":"integer","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of the Workspace."}},"required":["workspace_id"]}]},"response":{"200":{"type":"object","description":"The existing Direct Message that is matching the creation request.","properties":{"data":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"description":{"type":"string","description":"The full Description of the Channel.","format":"RichText"},"topic":{"type":"string"},"type":{"type":"string","description":"The type of the Channel\n\n`CHANNEL` `DM` `GROUP_DM`","enum":["CHANNEL","DM","GROUP_DM"]},"visibility":{"type":"string","description":"The visibility of the Channel\n\n`PUBLIC` `PRIVATE`","enum":["PUBLIC","PRIVATE"]},"parent":{"description":"Parent information","type":"object","required":["id","type"],"properties":{"id":{"type":"string"},"type":{"type":"number"}}},"creator":{"type":"string","description":"ID of the user who created this Channel"},"created_at":{"type":"string","description":"Timestamp of when this Channel was created"},"updated_at":{"type":"string","description":"Timestamp of the last update in this Channel - Deprecated in favor of latest_comment_at","deprecated":true},"workspace_id":{"type":"string","description":"Workspace ID of the Channel"},"archived":{"type":"boolean"},"latest_comment_at":{"type":"string","description":"Timestamp of the last comment in this Channel. Optional in the case of a new Channel with no comments yet"},"is_canonical_channel":{"type":"boolean","description":"Is this the canonical channel for the parent location?"},"is_hidden":{"type":"boolean","description":"Has the user hidden this Channel from their sidebar? Currently only an option for DM/Group DM."},"default_view":{"description":"Data about the default view that the Channel should open in","type":"object","required":["type","view_id","standard"],"properties":{"type":{"type":"number"},"view_id":{"type":"string"},"standard":{"type":"boolean"}}},"channel_type":{"type":"number","description":"Type of channel (chat, project, etc.) aka subcategory_type\n\n`1` `2` `3`","enum":[1,2,3]},"counts":{"description":"Counts relevant to the user requesting the Channel","type":"object","required":["parent_id","parent_type","root_parent_id","root_parent_type","date","_version_vector"],"properties":{"parent_id":{"type":"string"},"parent_type":{"type":"string","enum":["attachment","attachmentAccess","approval","banWorkspace","checklist","checklistItem","checklistTemplateAccess","comment","commentsLastReadAt","customField","customFieldAccess","customItem","dashboard","dashboardAccess","doc","docAccess","folder","folderDescendantsSet","folderTemplateAccess","form","formulaValue","foundationalJob","goal","goalAccess","goalFolder","goalFolderAccess","hierarchy","list","listDescendantsSet","listDescendantsPoints","listDescendantsTimeEstimates","listTemplateAccess","notepad","page","pageAccess","post","reminder","reminderAccess","rolledUpFieldValue","space","spaceDescendantsSet","spaceTemplateAccess","task","taskAccess","taskHistory","taskTemplateAccess","template","user","userAccess","userGroup","userHierarchy","view","viewAccess","viewTemplateAccess","whiteboard","whiteboardAccess","widget","workspace","workspaceDescendantsSet"],"description":"`attachment` `attachmentAccess` `approval` `banWorkspace` `checklist` `checklistItem` `checklistTemplateAccess` `comment` `commentsLastReadAt` `customField` `customFieldAccess` `customItem` `dashboard` `dashboardAccess` `doc` `docAccess` `folder` `folderDescendantsSet` `folderTemplateAccess` `form` `formulaValue` `foundationalJob` `goal` `goalAccess` `goalFolder` `goalFolderAccess` `hierarchy` `list` `listDescendantsSet` `listDescendantsPoints` `listDescendantsTimeEstimates` `listTemplateAccess` `notepad` `page` `pageAccess` `post` `reminder` `reminderAccess` `rolledUpFieldValue` `space` `spaceDescendantsSet` `spaceTemplateAccess` `task` `taskAccess` `taskHistory` `taskTemplateAccess` `template` `user` `userAccess` `userGroup` `userHierarchy` `view` `viewAccess` `viewTemplateAccess` `whiteboard` `whiteboardAccess` `widget` `workspace` `workspaceDescendantsSet`"},"root_parent_id":{"type":"string"},"root_parent_type":{"type":"string","enum":["attachment","attachmentAccess","approval","banWorkspace","checklist","checklistItem","checklistTemplateAccess","comment","commentsLastReadAt","customField","customFieldAccess","customItem","dashboard","dashboardAccess","doc","docAccess","folder","folderDescendantsSet","folderTemplateAccess","form","formulaValue","foundationalJob","goal","goalAccess","goalFolder","goalFolderAccess","hierarchy","list","listDescendantsSet","listDescendantsPoints","listDescendantsTimeEstimates","listTemplateAccess","notepad","page","pageAccess","post","reminder","reminderAccess","rolledUpFieldValue","space","spaceDescendantsSet","spaceTemplateAccess","task","taskAccess","taskHistory","taskTemplateAccess","template","user","userAccess","userGroup","userHierarchy","view","viewAccess","viewTemplateAccess","whiteboard","whiteboardAccess","widget","workspace","workspaceDescendantsSet"],"description":"`attachment` `attachmentAccess` `approval` `banWorkspace` `checklist` `checklistItem` `checklistTemplateAccess` `comment` `commentsLastReadAt` `customField` `customFieldAccess` `customItem` `dashboard` `dashboardAccess` `doc` `docAccess` `folder` `folderDescendantsSet` `folderTemplateAccess` `form` `formulaValue` `foundationalJob` `goal` `goalAccess` `goalFolder` `goalFolderAccess` `hierarchy` `list` `listDescendantsSet` `listDescendantsPoints` `listDescendantsTimeEstimates` `listTemplateAccess` `notepad` `page` `pageAccess` `post` `reminder` `reminderAccess` `rolledUpFieldValue` `space` `spaceDescendantsSet` `spaceTemplateAccess` `task` `taskAccess` `taskHistory` `taskTemplateAccess` `template` `user` `userAccess` `userGroup` `userHierarchy` `view` `viewAccess` `viewTemplateAccess` `whiteboard` `whiteboardAccess` `widget` `workspace` `workspaceDescendantsSet`"},"date":{"type":"number","description":"When the user last read comments to this object, set in the past to mark comments as unread. Should be a timestamp in milliseconds."},"_version_vector":{"deprecated":true,"type":"object","required":["object_id","object_type","vector","workspace_id"],"properties":{"object_id":{"type":"string"},"object_type":{"type":"string"},"vector":{"type":"array","items":{"type":"object","required":["master_id","version","deleted"],"properties":{"master_id":{"type":"number"},"version":{"type":"number"},"deleted":{"type":"boolean"}}}},"workspace_id":{"type":"number"}}},"version":{"type":"number","description":"The version of the object when the last read at object was last updated."},"has_unread":{"type":"boolean","description":"Whether the user has unread comments on this object. (Optional)"},"num_unread":{"type":"number","description":"How many unread comments there are on this object. (Optional)"},"latest_comment_at":{"type":"number","description":"The date of the latest comment on this object. (Optional)"},"badge_count":{"type":"number","description":"The badge count for this object. (Optional)"},"thread_count":{"type":"number","description":"The number of unread threads on this object. (Optional)"},"mention_count":{"type":"number","description":"The number of mentions on this object. (Optional)"}}},"chat_room_category":{"type":"string","description":"The category of the Channel, e.g. a welcome channel, (in the future, maybe) a ClickBot channel, etc.\n\n`WELCOME_CHANNEL`","enum":["WELCOME_CHANNEL"]},"links":{"description":"The links to elements of the Channel.","type":"object","required":["members","followers"],"properties":{"members":{"type":"string","description":"The link to the members of the Channel."},"followers":{"type":"string","description":"The link to the followers of the Channel."}}}},"required":["id","name","type","visibility","parent","creator","created_at","updated_at","workspace_id","archived","links"]}},"required":["data"],"$schema":"https://json-schema.org/draft/2020-12/schema"},"201":{"type":"object","description":"The new Direct Message.","properties":{"data":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"description":{"type":"string","description":"The full Description of the Channel.","format":"RichText"},"topic":{"type":"string"},"type":{"type":"string","description":"The type of the Channel\n\n`CHANNEL` `DM` `GROUP_DM`","enum":["CHANNEL","DM","GROUP_DM"]},"visibility":{"type":"string","description":"The visibility of the Channel\n\n`PUBLIC` `PRIVATE`","enum":["PUBLIC","PRIVATE"]},"parent":{"description":"Parent information","type":"object","required":["id","type"],"properties":{"id":{"type":"string"},"type":{"type":"number"}}},"creator":{"type":"string","description":"ID of the user who created this Channel"},"created_at":{"type":"string","description":"Timestamp of when this Channel was created"},"updated_at":{"type":"string","description":"Timestamp of the last update in this Channel - Deprecated in favor of latest_comment_at","deprecated":true},"workspace_id":{"type":"string","description":"Workspace ID of the Channel"},"archived":{"type":"boolean"},"latest_comment_at":{"type":"string","description":"Timestamp of the last comment in this Channel. Optional in the case of a new Channel with no comments yet"},"is_canonical_channel":{"type":"boolean","description":"Is this the canonical channel for the parent location?"},"is_hidden":{"type":"boolean","description":"Has the user hidden this Channel from their sidebar? Currently only an option for DM/Group DM."},"default_view":{"description":"Data about the default view that the Channel should open in","type":"object","required":["type","view_id","standard"],"properties":{"type":{"type":"number"},"view_id":{"type":"string"},"standard":{"type":"boolean"}}},"channel_type":{"type":"number","description":"Type of channel (chat, project, etc.) aka subcategory_type\n\n`1` `2` `3`","enum":[1,2,3]},"counts":{"description":"Counts relevant to the user requesting the Channel","type":"object","required":["parent_id","parent_type","root_parent_id","root_parent_type","date","_version_vector"],"properties":{"parent_id":{"type":"string"},"parent_type":{"type":"string","enum":["attachment","attachmentAccess","approval","banWorkspace","checklist","checklistItem","checklistTemplateAccess","comment","commentsLastReadAt","customField","customFieldAccess","customItem","dashboard","dashboardAccess","doc","docAccess","folder","folderDescendantsSet","folderTemplateAccess","form","formulaValue","foundationalJob","goal","goalAccess","goalFolder","goalFolderAccess","hierarchy","list","listDescendantsSet","listDescendantsPoints","listDescendantsTimeEstimates","listTemplateAccess","notepad","page","pageAccess","post","reminder","reminderAccess","rolledUpFieldValue","space","spaceDescendantsSet","spaceTemplateAccess","task","taskAccess","taskHistory","taskTemplateAccess","template","user","userAccess","userGroup","userHierarchy","view","viewAccess","viewTemplateAccess","whiteboard","whiteboardAccess","widget","workspace","workspaceDescendantsSet"],"description":"`attachment` `attachmentAccess` `approval` `banWorkspace` `checklist` `checklistItem` `checklistTemplateAccess` `comment` `commentsLastReadAt` `customField` `customFieldAccess` `customItem` `dashboard` `dashboardAccess` `doc` `docAccess` `folder` `folderDescendantsSet` `folderTemplateAccess` `form` `formulaValue` `foundationalJob` `goal` `goalAccess` `goalFolder` `goalFolderAccess` `hierarchy` `list` `listDescendantsSet` `listDescendantsPoints` `listDescendantsTimeEstimates` `listTemplateAccess` `notepad` `page` `pageAccess` `post` `reminder` `reminderAccess` `rolledUpFieldValue` `space` `spaceDescendantsSet` `spaceTemplateAccess` `task` `taskAccess` `taskHistory` `taskTemplateAccess` `template` `user` `userAccess` `userGroup` `userHierarchy` `view` `viewAccess` `viewTemplateAccess` `whiteboard` `whiteboardAccess` `widget` `workspace` `workspaceDescendantsSet`"},"root_parent_id":{"type":"string"},"root_parent_type":{"type":"string","enum":["attachment","attachmentAccess","approval","banWorkspace","checklist","checklistItem","checklistTemplateAccess","comment","commentsLastReadAt","customField","customFieldAccess","customItem","dashboard","dashboardAccess","doc","docAccess","folder","folderDescendantsSet","folderTemplateAccess","form","formulaValue","foundationalJob","goal","goalAccess","goalFolder","goalFolderAccess","hierarchy","list","listDescendantsSet","listDescendantsPoints","listDescendantsTimeEstimates","listTemplateAccess","notepad","page","pageAccess","post","reminder","reminderAccess","rolledUpFieldValue","space","spaceDescendantsSet","spaceTemplateAccess","task","taskAccess","taskHistory","taskTemplateAccess","template","user","userAccess","userGroup","userHierarchy","view","viewAccess","viewTemplateAccess","whiteboard","whiteboardAccess","widget","workspace","workspaceDescendantsSet"],"description":"`attachment` `attachmentAccess` `approval` `banWorkspace` `checklist` `checklistItem` `checklistTemplateAccess` `comment` `commentsLastReadAt` `customField` `customFieldAccess` `customItem` `dashboard` `dashboardAccess` `doc` `docAccess` `folder` `folderDescendantsSet` `folderTemplateAccess` `form` `formulaValue` `foundationalJob` `goal` `goalAccess` `goalFolder` `goalFolderAccess` `hierarchy` `list` `listDescendantsSet` `listDescendantsPoints` `listDescendantsTimeEstimates` `listTemplateAccess` `notepad` `page` `pageAccess` `post` `reminder` `reminderAccess` `rolledUpFieldValue` `space` `spaceDescendantsSet` `spaceTemplateAccess` `task` `taskAccess` `taskHistory` `taskTemplateAccess` `template` `user` `userAccess` `userGroup` `userHierarchy` `view` `viewAccess` `viewTemplateAccess` `whiteboard` `whiteboardAccess` `widget` `workspace` `workspaceDescendantsSet`"},"date":{"type":"number","description":"When the user last read comments to this object, set in the past to mark comments as unread. Should be a timestamp in milliseconds."},"_version_vector":{"deprecated":true,"type":"object","required":["object_id","object_type","vector","workspace_id"],"properties":{"object_id":{"type":"string"},"object_type":{"type":"string"},"vector":{"type":"array","items":{"type":"object","required":["master_id","version","deleted"],"properties":{"master_id":{"type":"number"},"version":{"type":"number"},"deleted":{"type":"boolean"}}}},"workspace_id":{"type":"number"}}},"version":{"type":"number","description":"The version of the object when the last read at object was last updated."},"has_unread":{"type":"boolean","description":"Whether the user has unread comments on this object. (Optional)"},"num_unread":{"type":"number","description":"How many unread comments there are on this object. (Optional)"},"latest_comment_at":{"type":"number","description":"The date of the latest comment on this object. (Optional)"},"badge_count":{"type":"number","description":"The badge count for this object. (Optional)"},"thread_count":{"type":"number","description":"The number of unread threads on this object. (Optional)"},"mention_count":{"type":"number","description":"The number of mentions on this object. (Optional)"}}},"chat_room_category":{"type":"string","description":"The category of the Channel, e.g. a welcome channel, (in the future, maybe) a ClickBot channel, etc.\n\n`WELCOME_CHANNEL`","enum":["WELCOME_CHANNEL"]},"links":{"description":"The links to elements of the Channel.","type":"object","required":["members","followers"],"properties":{"members":{"type":"string","description":"The link to the members of the Channel."},"followers":{"type":"string","description":"The link to the followers of the Channel."}}}},"required":["id","name","type","visibility","parent","creator","created_at","updated_at","workspace_id","archived","links"]}},"required":["data"],"$schema":"https://json-schema.org/draft/2020-12/schema"},"default":{"type":"object","properties":{"status":{"type":"integer","description":"The HTTP Status code for the error"},"message":{"type":"string","description":"The message describing the error","examples":["Generic error message"]},"trace_id":{"type":"integer","description":"Unique trace ID for tracking the request. Used for troubleshooting errors","examples":[123456789]},"timestamp":{"type":"integer","description":"The time of the error (Unix epoch milliseconds timestamp).","examples":[1671534256138]}},"required":["status","message","trace_id","timestamp"],"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const CreateDoc = {"body":{"type":"object","properties":{"name":{"type":"string","description":"The name of the new Doc."},"parent":{"description":"The parent of the new Doc.","type":"object","required":["id","type"],"properties":{"id":{"type":"string"},"type":{"type":"number","description":"The parent Doc type. Use `4` for Space, `5` for Folder, `6` for List, `7` for Everything, and `12` for Workspace."}}},"visibility":{"type":"string","description":"The visibility of the new Doc. For example, `PUBLIC` or `PRIVATE`."},"create_page":{"type":"boolean","description":"Create a new page when creating the Doc.","default":true}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"workspaceId":{"type":"number","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of the Workspace."}},"required":["workspaceId"]}]},"response":{"201":{"type":"object","properties":{"id":{"type":"string"},"date_created":{"type":"number"},"date_updated":{"type":"number"},"name":{"type":"string"},"type":{"type":"number","enum":[]},"parent":{"type":"object","properties":{"id":{"type":"string"},"type":{"type":"number","description":"The parent Doc type. Use `4` for Space, `5` for Folder, `6` for List, `7` for Everything, and `12` for Workspace."}},"required":["id","type"]},"public":{"type":"boolean"},"workspace_id":{"type":"number"},"archived":{"type":"boolean"},"archived_by":{"type":"number"},"creator":{"type":"number"},"date_archived":{"type":"number"},"date_deleted":{"type":"number"},"deleted":{"type":"boolean"},"deleted_by":{"type":"number"},"page_defaults":{"type":"object","properties":{"font":{"type":"string"},"font_size":{"type":"number"},"line_height":{"type":"number"},"page_width":{"type":"number"},"paragraph_spacing":{"type":"number"},"show_author_header":{"type":"boolean"},"show_contributor_header":{"type":"boolean"},"show_cover_header":{"type":"boolean"},"show_date_header":{"type":"boolean"},"show_page_outline":{"type":"boolean"},"show_sub_pages":{"type":"boolean"},"sub_page_size":{"type":"string"},"show_sub_title_header":{"type":"boolean"},"show_title_icon_header":{"type":"boolean"},"show_relationships":{"type":"boolean"},"show_relationships_compact":{"type":"boolean"},"show_sub_pages_author":{"type":"boolean"},"show_sub_pages_thumbnail":{"type":"boolean"},"show_sub_pages_compact":{"type":"boolean"},"sub_pages_style":{"type":"string"}}}},"required":["id","date_created","name","type","parent","public","workspace_id","creator"],"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const CreateFolder = {"body":{"title":"CreateFolderrequest","required":["name"],"type":"object","properties":{"name":{"type":"string","examples":["New Folder Name"]}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"space_id":{"type":"number","contentEncoding":"double","examples":[789],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["space_id"]}]},"response":{"200":{"title":"CreateFolderresponse","required":["id","name","orderindex","override_statuses","hidden","space","task_count"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"orderindex":{"type":"integer","contentEncoding":"int32"},"override_statuses":{"type":"boolean"},"hidden":{"type":"boolean"},"space":{"title":"Space2","required":["id","name","access"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"access":{"type":"boolean"}}},"task_count":{"type":"string"}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const CreateFolderFromTemplate = {"body":{"type":"object","required":["name"],"properties":{"name":{"type":"string","description":"Name of the new Folder"},"options":{"type":"object","description":"Options for creating the Folder","properties":{"return_immediately":{"type":"boolean","description":"Flag if newly created Object ID should be returned without waiting for the asset itself and all its nested assets to be applied. If set to true, access checks are performed before returning, but the object might not be fully created yet. In case of a timeout on syncronous requests, the of objects from the template will continue to be created past the timeout.\n","default":true},"content":{"type":"string","description":"List description"},"time_estimate":{"type":"boolean","description":"Include time (hours, minutes and seconds)"},"automation":{"type":"boolean","description":"Import automation options"},"include_views":{"type":"boolean","description":"Import views"},"old_due_date":{"type":"boolean","description":"Import tasks due dates"},"old_start_date":{"type":"boolean","description":"Import tasks start dates"},"old_followers":{"type":"boolean","description":"Import tasks watchers"},"comment_attachments":{"type":"boolean","description":"Import tasks comment attachments"},"recur_settings":{"type":"boolean","description":"Import tasks recurring settings"},"old_tags":{"type":"boolean","description":"Import tasks tags"},"old_statuses":{"type":"boolean","description":"Import tasks status settings"},"subtasks":{"type":"boolean","description":"Import tasks subtasks"},"custom_type":{"type":"boolean","description":"Import tasks types"},"old_assignees":{"type":"boolean","description":"Import tasks assignees"},"attachments":{"type":"boolean","description":"Import tasks attachments"},"comment":{"type":"boolean","description":"Import tasks comments"},"old_status":{"type":"boolean","description":"Import tasks current statuses"},"external_dependencies":{"type":"boolean","description":"Import tasks external dependencies"},"internal_dependencies":{"type":"boolean","description":"Import tasks internal dependencies"},"priority":{"type":"boolean","description":"Import tasks priority"},"custom_fields":{"type":"boolean","description":"Import tasks Custom Fields"},"old_checklists":{"type":"boolean","description":"Import tasks checklists"},"relationships":{"type":"boolean","description":"Import tasks relationships"},"old_subtask_assignees":{"type":"boolean","description":"Import tasks subtasks and assignees combination"},"start_date":{"type":"string","format":"date-time","description":"Project start date for remapping dates"},"due_date":{"type":"string","format":"date-time","description":"Project due date for remapping dates"},"remap_start_date":{"type":"boolean","description":"Remap start dates"},"skip_weekends":{"type":"boolean","description":"Skip weekends when remapping dates"},"archived":{"type":"integer","enum":[1,2,null],"description":"Include archived tasks (1 or 2 or null)"}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"space_id":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"ID of the Space where the Folder will be created"},"template_id":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"ID of the Folder template to use."}},"required":["space_id","template_id"]}]},"response":{"200":{"type":"object","properties":{"id":{"type":"integer","description":"ID of the created Folder","examples":[90114316773]},"folder":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier of the Folder","examples":[90114316773]},"name":{"type":"string","description":"Name of the Folder","examples":["Projects"]},"orderindex":{"type":"integer","description":"Order index of the Folder"},"override_statuses":{"type":"boolean","description":"Whether the Folder overrides default statuses","examples":[true]},"hidden":{"type":"boolean","description":"Whether the Folder is hidden"},"space":{"type":"object","properties":{"id":{"type":"string","description":"ID of the Space containing the Folder","examples":[90114316773]},"name":{"type":"string","description":"Name of the Space","examples":["Client Facing"]},"access":{"type":"boolean","description":"Whether the user has access to the Space","examples":[true]}}},"task_count":{"type":"string","description":"Number of tasks in the Folder","examples":["0"]},"archived":{"type":"boolean","description":"Whether the Folder is archived"},"statuses":{"type":"array","description":"List of statuses available in the Folder","items":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier of the status","examples":[90114316773]},"status":{"type":"string","description":"Name of the status","examples":["complete"]},"orderindex":{"type":"integer","description":"Order index of the status","examples":[2]},"color":{"type":"string","description":"Color code for the status","examples":["#008844"]},"type":{"type":"string","description":"Type of the status (closed, custom, open)","examples":["closed"]}}}},"lists":{"type":"array","description":"Lists contained in the Folder","items":{"type":"object","additionalProperties":true}},"permission_level":{"type":"string","description":"Permission level for the current user","examples":["create"]}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"400":{"type":"object","properties":{"error":{"type":"string","examples":["Name is required"]},"ECODE":{"type":"string","examples":["OAUTH_119"]}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const CreateFolderListFromTemplate = {"body":{"type":"object","required":["name"],"properties":{"name":{"type":"string","description":"Name of the new List"},"options":{"type":"object","description":"Options for creating the List","properties":{"return_immediately":{"type":"boolean","description":"Flag if newly created Object ID should be returned without waiting for the asset itself and all its nested assets to be applied. If set to true, access checks are performed before returning, but the object might not be fully created yet. In case of a timeout on syncronous requests, the of objects from the template will continue to be created past the timeout.\n","default":true},"content":{"type":"string","description":"List description"},"time_estimate":{"type":"number","description":"Include time (hours, minutes and seconds)"},"automation":{"type":"boolean","description":"Import automation settings"},"include_views":{"type":"boolean","description":"Import views"},"old_due_date":{"type":"boolean","description":"Import tasks' due dates"},"old_start_date":{"type":"boolean","description":"Import tasks' start dates"},"old_followers":{"type":"boolean","description":"Import tasks' watchers"},"comment_attachments":{"type":"boolean","description":"Import tasks' comment attachments"},"recur_settings":{"type":"boolean","description":"Import tasks' recurring settings"},"old_tags":{"type":"boolean","description":"Import tasks' tags"},"old_statuses":{"type":"boolean","description":"Import tasks' status settings"},"subtasks":{"type":"boolean","description":"Import tasks' subtasks"},"custom_type":{"type":"boolean","description":"Import tasks' task types"},"old_assignees":{"type":"boolean","description":"Import tasks' assignees"},"attachments":{"type":"boolean","description":"Import tasks' attachments"},"comment":{"type":"boolean","description":"Import tasks' comments"},"old_status":{"type":"boolean","description":"Import tasks' current statuses"},"external_dependencies":{"type":"boolean","description":"Import tasks' external dependencies"},"internal_dependencies":{"type":"boolean","description":"Import tasks' internal dependencies"},"priority":{"type":"boolean","description":"Import tasks' priorities"},"custom_fields":{"type":"boolean","description":"Import tasks' Custom Fields"},"old_checklists":{"type":"boolean","description":"Import tasks' checklists"},"relationships":{"type":"boolean","description":"Import tasks' relationships"},"old_subtask_assignees":{"type":"boolean","description":"Import tasks' subtask assignees"},"start_date":{"type":"string","format":"date-time","description":"Project start date for remapping dates"},"due_date":{"type":"string","format":"date-time","description":"Project due date for remapping dates"},"remap_start_date":{"type":"boolean","description":"Remap start dates"},"skip_weekends":{"type":"boolean","description":"Skip weekends when remapping dates"},"archived":{"type":"integer","enum":[1,2,null],"description":"Include archived tasks"}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"folder_id":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"ID of the Folder where the List will be created"},"template_id":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"ID of the template to use"}},"required":["folder_id","template_id"]}]},"response":{"200":{"type":"object","description":"Response object returned when a new List is created from a template in a Folder or Space.","properties":{"id":{"type":"string","description":"Unique identifier of the newly created List","examples":["901107394085"]},"list":{"type":"object","description":"Detailed information about the created List","properties":{"id":{"type":"string","description":"Unique identifier of the List (matches parent id)","examples":["901107394085"]},"name":{"type":"string","description":"Display name of the List","examples":["API Folder in Space"]},"deleted":{"type":"boolean","description":"Indicates if the List has been marked as deleted","examples":[true]},"orderindex":{"type":"integer","description":"Position of the List relative to other Lists in the same container","examples":[0]},"priority":{"type":"string","description":"Priority level of the List, if applicable"},"assignee":{"type":"string","description":"Default assignee for the List, if applicable"},"due_date":{"type":"string","format":"date-time","description":"Default due date for tasks in the List"},"start_date":{"type":"string","format":"date-time","description":"Default start date for tasks in the List"},"folder":{"type":"object","description":"Information about the parent Folder containing this List, if applicable","properties":{"id":{"type":"string","description":"Unique identifier of the parent Folder","examples":["90114317916"]},"name":{"type":"string","description":"Display name of the parent Folder","examples":["hidden"]},"hidden":{"type":"boolean","description":"Indicates if the Folder is hidden from standard views","examples":[true]},"access":{"type":"boolean","description":"Indicates if the current user has access to this Folder","examples":[true]}}},"space":{"type":"object","description":"Information about the Workspace Space containing this List","properties":{"id":{"type":"string","description":"Unique identifier of the Space","examples":["90112667046"]},"name":{"type":"string","description":"Display name of the Space","examples":["API Test Space"]},"access":{"type":"boolean","description":"Indicates if the current user has access to this Space","examples":[true]}}},"inbound_address":{"type":"string","description":"Email address that can be used to create tasks in this List via email","examples":["abc-list@tasks.clickup.com"]},"archived":{"type":"boolean","description":"Indicates if the List is archived","examples":[false]},"override_statuses":{"type":"boolean","description":"Indicates if this List uses custom statuses instead of Space default statuses","examples":[true]},"statuses":{"type":"array","description":"List of available statuses for tasks in this List","items":{"type":"object","description":"Status configuration object","properties":{"id":{"type":"string","description":"Unique identifier for the status","examples":["sc901107394085_DCnaeiSB"]},"status":{"type":"string","description":"Display name of the status","examples":["to do"]},"orderindex":{"type":"integer","description":"Position of this status in the status list","examples":[0]},"color":{"type":"string","description":"Color code associated with this status","examples":["#87909e"]},"type":{"type":"string","description":"Category of the status (e.g., open, closed, in progress)","examples":["open"]},"status_group":{"type":"string","description":"TODO - Identifier for grouping related statuses","examples":["subcat_901107394085"]}}}},"permission_level":{"type":"string","description":"Access level the current user has for this List (e.g., create, edit, view)","examples":["create"]}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"400":{"type":"object","properties":{"error":{"type":"string","examples":["Name is required"]},"ECODE":{"type":"string","examples":["OAUTH_117"]}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const CreateFolderView = {"body":{"title":"CreateFolderViewrequest","required":["name","type","grouping","divide","sorting","filters","columns","team_sidebar","settings"],"type":"object","properties":{"name":{"type":"string","examples":["New Folder View Name"]},"type":{"type":"string","description":"The type of view to create. Options include: `list`, `board`, `calendar`, `table`, `timeline`, `workload`, `activity`, `map`, `conversation`, or `gantt`.","examples":["list"]},"grouping":{"title":"Grouping","required":["field","dir","collapsed","ignore"],"type":"object","properties":{"field":{"type":"string","description":"Set the field to group by.\\\n \\\nOptions include: `none`, `status`, `priority`, `assignee`, `tag`, or `dueDate`.","examples":["status"]},"dir":{"description":"Set a group sort order using `1` or `-1`.\\\n \\\nFor example, use `1`show tasks with urgent priority at the top of your view, and tasks with no priority at the bottom.\\\n \\\nUse `-1` to reverse the order to show tasks with no priority at the top of your view.","type":"integer","contentEncoding":"int32","examples":[1]},"collapsed":{"type":"array","items":{"type":"string"},"description":""},"ignore":{"type":"boolean"}}},"divide":{"title":"Divide","required":["collapsed"],"type":"object","properties":{"field":{"type":["null"]},"dir":{"type":["null"]},"collapsed":{"type":["boolean"]}}},"sorting":{"title":"Sorting","required":["fields"],"type":"object","properties":{"fields":{"type":"array","items":{"type":"string"},"description":"Include an array of fields to sort by.\\\n \\\n You can sort by the same fields available when [filtering a view](doc:filter-views)."}}},"filters":{"title":"Filters","required":["op","fields","search","show_closed"],"type":"object","properties":{"op":{"type":"string","description":"The available operator (`op``) values are `AND`` and `OR``.","examples":["AND"]},"fields":{"type":"array","items":{"type":"string"},"description":"View the list of [fields available](doc:filter-views) to filter by."},"search":{"type":"string"},"show_closed":{"type":"boolean"}}},"columns":{"title":"Columns","description":"Custom Fields added to a view at the Everything level will be added to all tasks in your Workspace. Once Custom Fields are added to one of these views, you cannot move it to another level of the Hierarchy.","required":["fields"],"type":"object","properties":{"fields":{"description":"Custom Fields require the `_cf` prefix and must be formatted as a JSON object.","type":"array","items":{"type":"string"}}}},"team_sidebar":{"title":"TeamSidebar","required":["assignees","assigned_comments","unassigned_tasks"],"type":"object","properties":{"assignees":{"type":"array","items":{"type":"string"},"description":""},"assigned_comments":{"type":"boolean"},"unassigned_tasks":{"type":"boolean"}}},"settings":{"title":"Settings","required":["show_task_locations","show_subtasks","show_subtask_parent_names","show_closed_subtasks","show_assignees","show_images","collapse_empty_columns","me_comments","me_subtasks","me_checklists"],"type":"object","properties":{"show_task_locations":{"type":"boolean"},"show_subtasks":{"description":"Acceptable values are `1`, `2`, or `3`, which show subtasks separate, expanded, or collapsed.","type":"integer","contentEncoding":"int32","examples":[3]},"show_subtask_parent_names":{"type":"boolean"},"show_closed_subtasks":{"type":"boolean"},"show_assignees":{"type":"boolean","examples":[true]},"show_images":{"type":"boolean","examples":[true]},"collapse_empty_columns":{"type":["string","null"]},"me_comments":{"type":"boolean","examples":[true]},"me_subtasks":{"type":"boolean","examples":[true]},"me_checklists":{"type":"boolean","examples":[true]}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"folder_id":{"type":"number","contentEncoding":"double","examples":[457],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["folder_id"]}]},"response":{"200":{"title":"CreateFolderViewresponse","required":["view"],"type":"object","properties":{"view":{"title":"View","required":["id","name","type","parent","grouping","divide","sorting","filters","columns","team_sidebar","settings"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string"},"parent":{"title":"Parent","description":"The parent parameter specifies where the view is located in the ClickUp Hierarchy. Both `id` and `type` are required. \\\n \\\nThe `id` is the id of the Workspace, Space, Folder, or List where the view is located. \\\n \\\nThe `type` value indciates the level of the Hierarchy where the view is located.","required":["id","type"],"type":"object","properties":{"id":{"type":"string","description":"The id of the Workspace, Space, Folder, or List where the view is located."},"type":{"type":"integer","description":"The level of the Hierarchy where the view is created. \\\n \\\nOptions include: \\\n \\\nWorkspace (Everything Level): `7` \\\n \\\nSpace: `4` \\\n \\\nFolder: `5` \\\n \\\nList: `6`","contentEncoding":"int32"}}},"grouping":{"title":"Grouping","required":["field","dir","collapsed","ignore"],"type":"object","properties":{"field":{"type":"string","description":"Set the field to group by.\\\n \\\nOptions include: `none`, `status`, `priority`, `assignee`, `tag`, or `dueDate`."},"dir":{"description":"Set a group sort order using `1` or `-1`.\\\n \\\nFor example, use `1`show tasks with urgent priority at the top of your view, and tasks with no priority at the bottom.\\\n \\\nUse `-1` to reverse the order to show tasks with no priority at the top of your view.","type":"integer","contentEncoding":"int32"},"collapsed":{"type":"array","items":{"type":"string"},"description":""},"ignore":{"type":"boolean"}}},"divide":{"title":"Divide","required":["collapsed"],"type":"object","properties":{"field":{"type":["null"]},"dir":{"type":["null"]},"collapsed":{"type":["boolean"]}}},"sorting":{"title":"Sorting","required":["fields"],"type":"object","properties":{"fields":{"type":"array","items":{"type":"string"},"description":"Include an array of fields to sort by.\\\n \\\n You can sort by the same fields available when [filtering a view](doc:filter-views)."}}},"filters":{"title":"Filters","required":["op","fields","search","show_closed"],"type":"object","properties":{"op":{"type":"string","description":"The available operator (`op``) values are `AND`` and `OR``."},"fields":{"type":"array","items":{"type":"string"},"description":"View the list of [fields available](doc:filter-views) to filter by."},"search":{"type":"string"},"show_closed":{"type":"boolean"}}},"columns":{"title":"Columns","description":"Custom Fields added to a view at the Everything level will be added to all tasks in your Workspace. Once Custom Fields are added to one of these views, you cannot move it to another level of the Hierarchy.","required":["fields"],"type":"object","properties":{"fields":{"description":"Custom Fields require the `_cf` prefix and must be formatted as a JSON object.","type":"array","items":{"type":"string"}}}},"team_sidebar":{"title":"TeamSidebar","required":["assignees","assigned_comments","unassigned_tasks"],"type":"object","properties":{"assignees":{"type":"array","items":{"type":"string"},"description":""},"assigned_comments":{"type":"boolean"},"unassigned_tasks":{"type":"boolean"}}},"settings":{"title":"Settings","required":["show_task_locations","show_subtasks","show_subtask_parent_names","show_closed_subtasks","show_assignees","show_images","collapse_empty_columns","me_comments","me_subtasks","me_checklists"],"type":"object","properties":{"show_task_locations":{"type":"boolean"},"show_subtasks":{"description":"Acceptable values are `1`, `2`, or `3`, which show subtasks separate, expanded, or collapsed.","type":"integer","contentEncoding":"int32"},"show_subtask_parent_names":{"type":"boolean"},"show_closed_subtasks":{"type":"boolean"},"show_assignees":{"type":"boolean"},"show_images":{"type":"boolean"},"collapse_empty_columns":{"type":["string","null"]},"me_comments":{"type":"boolean"},"me_subtasks":{"type":"boolean"},"me_checklists":{"type":"boolean"}}}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const CreateFolderlessList = {"body":{"title":"CreateFolderlessListrequest","required":["name"],"type":"object","properties":{"name":{"type":"string","examples":["New List Name"]},"content":{"type":"string","examples":["New List Content"]},"due_date":{"type":"integer","contentEncoding":"int64","examples":[1567780450202]},"due_date_time":{"type":"boolean"},"priority":{"type":"integer","contentEncoding":"int32","examples":[1]},"assignee":{"description":"Include a `user_id` to add a List owner.","type":"integer","contentEncoding":"int32","examples":[183]},"status":{"description":"**Status** refers to the List color rather than the task Statuses available in the List.","type":"string","examples":["red"]}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"space_id":{"type":"number","contentEncoding":"double","examples":[789],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["space_id"]}]},"response":{"200":{"title":"CreateFolderlessListresponse","required":["id","name","orderindex","content","status","priority","assignee","task_count","due_date","due_date_time","start_date","start_date_time","folder","space","statuses","inbound_address"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"orderindex":{"type":"integer","contentEncoding":"int32"},"content":{"type":"string"},"status":{"title":"Status5","required":["status","color","hide_label"],"type":"object","properties":{"status":{"type":"string"},"color":{"type":"string"},"hide_label":{"type":"boolean"}}},"priority":{"title":"Priority1","required":["priority","color"],"type":"object","properties":{"priority":{"type":"string"},"color":{"type":"string"}}},"assignee":{"title":"Assignee3","required":["id","color","username","initials","profilePicture"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"color":{"type":"string"},"username":{"type":"string"},"initials":{"type":"string"},"profilePicture":{"type":"string"}}},"task_count":{"type":["string","null"]},"due_date":{"type":"string"},"due_date_time":{"type":"boolean"},"start_date":{"type":["string","null"]},"start_date_time":{"type":["string","null"]},"folder":{"title":"Folder3","required":["id","name","hidden","access"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"hidden":{"type":"boolean"},"access":{"type":"boolean"}}},"space":{"title":"Space2","required":["id","name","access"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"access":{"type":"boolean"}}},"statuses":{"type":"array","items":{"title":"Status","required":["status","color","orderindex","type"],"type":"object","properties":{"status":{"type":"string"},"color":{"type":"string"},"orderindex":{"type":"integer","contentEncoding":"int32"},"type":{"type":"string"}}},"description":""},"inbound_address":{"type":"string"}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const CreateGoal = {"body":{"title":"CreateGoalrequest","required":["name","due_date","description","multiple_owners","owners","color"],"type":"object","properties":{"name":{"type":"string","examples":["Goal Name"]},"due_date":{"type":"integer","contentEncoding":"int64","examples":[1568036964079]},"description":{"type":"string","examples":["Goal Description"]},"multiple_owners":{"type":"boolean","examples":[true]},"owners":{"type":"array","items":{"type":"integer","contentEncoding":"int32","examples":[183]},"description":"Array of user IDs."},"color":{"type":"string","examples":["#32a852"]}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Workspace ID"}},"required":["team_id"]}]},"response":{"200":{"title":"CreateGoalresponse","required":["goal"],"type":"object","properties":{"goal":{"title":"Goal","required":["id","name","team_id","date_created","start_date","due_date","description","private","archived","creator","color","pretty_id","multiple_owners","folder_id","members","owners","key_results","percent_completed","history","pretty_url"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"team_id":{"type":"string"},"date_created":{"type":"string"},"start_date":{"type":["string","null"]},"due_date":{"type":"string"},"description":{"type":"string"},"private":{"type":"boolean"},"archived":{"type":"boolean"},"creator":{"type":"integer","contentEncoding":"int32"},"color":{"type":"string"},"pretty_id":{"type":"string"},"multiple_owners":{"type":"boolean"},"folder_id":{"type":["string","null"]},"members":{"type":"array","items":{"type":"string"},"description":""},"owners":{"type":"array","items":{"title":"Owner","required":["id","username","initials","email","color","profilePicture"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"initials":{"type":"string"},"email":{"type":"string"},"color":{"type":"string"},"profilePicture":{"type":"string"}}},"description":""},"key_results":{"type":"array","items":{"type":"string"},"description":""},"percent_completed":{"type":"integer","contentEncoding":"int32"},"history":{"type":"array","items":{"type":"string"},"description":""},"pretty_url":{"type":"string"}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const CreateKeyResult = {"body":{"title":"CreateKeyResultrequest","required":["name","owners","type","steps_start","steps_end","unit","task_ids","list_ids"],"type":"object","properties":{"name":{"type":"string","examples":["New Key Result Name"]},"owners":{"type":"array","items":{"type":"integer","contentEncoding":"int32","examples":[183]},"description":""},"type":{"description":"Target (key result) types include: `number`, `currency`, `boolean`, `percentage`, or `automatic`.","type":"string","examples":["number"]},"steps_start":{"type":"integer","contentEncoding":"int32"},"steps_end":{"type":"integer","contentEncoding":"int32","examples":[10]},"unit":{"type":"string","examples":["km"]},"task_ids":{"description":"Enter an array of task IDs to link this target with one or more tasks.","type":"array","items":{"type":"string"}},"list_ids":{"type":"array","items":{"type":"string"},"description":"Enter an array of List IDs to link this target with one or more Lists."}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"goal_id":{"type":"string","examples":["e53a033c"],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"900e-462d-a849-4a216b06d930 (uuid)"}},"required":["goal_id"]}]},"response":{"200":{"title":"CreateKeyResultresponse","required":["key_result"],"type":"object","properties":{"key_result":{"title":"KeyResult","required":["id","goal_id","name","type","unit","creator","date_created","goal_pretty_id","percent_completed","completed","task_ids","subcategory_ids","owners","last_action"],"type":"object","properties":{"id":{"type":"string"},"goal_id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string"},"unit":{"type":"string"},"creator":{"type":"integer","contentEncoding":"int32"},"date_created":{"type":"string"},"goal_pretty_id":{"type":"string"},"percent_completed":{"type":["string","null"]},"completed":{"type":"boolean"},"task_ids":{"type":"array","items":{"type":"string"},"description":""},"subcategory_ids":{"type":"array","items":{"type":"string"},"description":""},"owners":{"type":"array","items":{"title":"Owner","required":["id","username","initials","email","color","profilePicture"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"initials":{"type":"string"},"email":{"type":"string"},"color":{"type":"string"},"profilePicture":{"type":"string"}}},"description":""},"last_action":{"title":"LastAction","required":["id","key_result_id","userid","date_modified","steps_taken","note","steps_before","steps_current"],"type":"object","properties":{"id":{"type":"string"},"key_result_id":{"type":"string"},"userid":{"type":"integer","contentEncoding":"int32"},"date_modified":{"type":"string"},"steps_taken":{"type":["string","null"]},"note":{"type":"string"},"steps_before":{"type":["string","null"]},"steps_current":{"type":["string","null"]}}}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const CreateList = {"body":{"title":"CreateListrequest","required":["name"],"type":"object","properties":{"name":{"type":"string","examples":["New List Name"]},"content":{"type":"string","examples":["New List Content"]},"due_date":{"type":"integer","contentEncoding":"int64","examples":[1567780450202]},"due_date_time":{"type":"boolean"},"priority":{"type":"integer","contentEncoding":"int32","examples":[1]},"assignee":{"description":"Include a `user_id` to assign this List.","type":"integer","contentEncoding":"int32","examples":[183]},"status":{"description":"**Status** refers to the List color rather than the task Statuses available in the List.","type":"string","examples":["red"]},"include_markdown_description":{"description":"To return List descriptions in Markdown format, use `?include_markdown_description=true`.","type":"boolean"}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"folder_id":{"type":"number","contentEncoding":"double","examples":[456],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["folder_id"]}]},"response":{"200":{"title":"CreateListresponse","required":["id","name","orderindex","content","status","priority","assignee","task_count","due_date","due_date_time","start_date","start_date_time","folder","space","statuses","inbound_address"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"orderindex":{"type":"integer","contentEncoding":"int32"},"content":{"type":"string"},"status":{"title":"Status5","required":["status","color","hide_label"],"type":"object","properties":{"status":{"type":"string"},"color":{"type":"string"},"hide_label":{"type":"boolean"}}},"priority":{"title":"Priority1","required":["priority","color"],"type":"object","properties":{"priority":{"type":"string"},"color":{"type":"string"}}},"assignee":{"title":"Assignee3","required":["id","color","username","initials","profilePicture"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"color":{"type":"string"},"username":{"type":"string"},"initials":{"type":"string"},"profilePicture":{"type":"string"}}},"task_count":{"type":["string","null"]},"due_date":{"type":"string"},"due_date_time":{"type":"boolean"},"start_date":{"type":["string","null"]},"start_date_time":{"type":["string","null"]},"folder":{"title":"Folder3","required":["id","name","hidden","access"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"hidden":{"type":"boolean"},"access":{"type":"boolean"}}},"space":{"title":"Space2","required":["id","name","access"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"access":{"type":"boolean"}}},"statuses":{"type":"array","items":{"title":"Status","required":["status","color","orderindex","type"],"type":"object","properties":{"status":{"type":"string"},"color":{"type":"string"},"orderindex":{"type":"integer","contentEncoding":"int32"},"type":{"type":"string"}}},"description":""},"inbound_address":{"type":"string"}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const CreateListComment = {"body":{"title":"CreateListCommentrequest","required":["comment_text","assignee","notify_all"],"type":"object","properties":{"comment_text":{"type":"string","examples":["List comment content"]},"assignee":{"type":"integer","contentEncoding":"int32","examples":[183]},"notify_all":{"description":"If `notify_all` is true, notifications will be sent to everyone including the creator of the comment.","type":"boolean","examples":[true]}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"list_id":{"type":"number","contentEncoding":"double","examples":[124],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["list_id"]}]},"response":{"200":{"title":"CreateListCommentresponse","required":["id","hist_id","date"],"type":"object","properties":{"id":{"type":"string"},"hist_id":{"type":"string"},"date":{"type":"integer","contentEncoding":"int64"}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const CreateListView = {"body":{"title":"CreateListViewrequest","required":["name","type","grouping","divide","sorting","filters","columns","team_sidebar","settings"],"type":"object","properties":{"name":{"type":"string","examples":["New List View Name"]},"type":{"type":"string","description":"The type of view to create. Options include: `list`, `board`, `calendar`, `table`, `timeline`, `workload`, `activity`, `map`, `conversation`, or `gantt`.","examples":["list"]},"grouping":{"title":"Grouping","required":["field","dir","collapsed","ignore"],"type":"object","properties":{"field":{"type":"string","description":"Set the field to group by.\\\n \\\nOptions include: `none`, `status`, `priority`, `assignee`, `tag`, or `dueDate`.","examples":["status"]},"dir":{"description":"Set a group sort order using `1` or `-1`.\\\n \\\nFor example, use `1`show tasks with urgent priority at the top of your view, and tasks with no priority at the bottom.\\\n \\\nUse `-1` to reverse the order to show tasks with no priority at the top of your view.","type":"integer","contentEncoding":"int32","examples":[1]},"collapsed":{"type":"array","items":{"type":"string"},"description":""},"ignore":{"type":"boolean"}}},"divide":{"title":"Divide","required":["collapsed"],"type":"object","properties":{"field":{"type":["null"]},"dir":{"type":["null"]},"collapsed":{"type":["boolean"]}}},"sorting":{"title":"Sorting","required":["fields"],"type":"object","properties":{"fields":{"type":"array","items":{"type":"string"},"description":"Include an array of fields to sort by.\\\n \\\n You can sort by the same fields available when [filtering a view](doc:filter-views)."}}},"filters":{"title":"Filters","required":["op","fields","search","show_closed"],"type":"object","properties":{"op":{"type":"string","description":"The available operator (`op``) values are `AND`` and `OR``.","examples":["AND"]},"fields":{"type":"array","items":{"type":"string"},"description":"View the list of [fields available](doc:filter-views) to filter by."},"search":{"type":"string"},"show_closed":{"type":"boolean"}}},"columns":{"title":"Columns","description":"Custom Fields added to a view at the Everything level will be added to all tasks in your Workspace. Once Custom Fields are added to one of these views, you cannot move it to another level of the Hierarchy.","required":["fields"],"type":"object","properties":{"fields":{"description":"Custom Fields require the `_cf` prefix and must be formatted as a JSON object.","type":"array","items":{"type":"string"}}}},"team_sidebar":{"title":"TeamSidebar","required":["assignees","assigned_comments","unassigned_tasks"],"type":"object","properties":{"assignees":{"type":"array","items":{"type":"string"},"description":""},"assigned_comments":{"type":"boolean"},"unassigned_tasks":{"type":"boolean"}}},"settings":{"title":"Settings","required":["show_task_locations","show_subtasks","show_subtask_parent_names","show_closed_subtasks","show_assignees","show_images","collapse_empty_columns","me_comments","me_subtasks","me_checklists"],"type":"object","properties":{"show_task_locations":{"type":"boolean"},"show_subtasks":{"description":"Acceptable values are `1`, `2`, or `3`, which show subtasks separate, expanded, or collapsed.","type":"integer","contentEncoding":"int32","examples":[3]},"show_subtask_parent_names":{"type":"boolean"},"show_closed_subtasks":{"type":"boolean"},"show_assignees":{"type":"boolean","examples":[true]},"show_images":{"type":"boolean","examples":[true]},"collapse_empty_columns":{"type":["string","null"]},"me_comments":{"type":"boolean","examples":[true]},"me_subtasks":{"type":"boolean","examples":[true]},"me_checklists":{"type":"boolean","examples":[true]}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"list_id":{"type":"number","contentEncoding":"double","examples":[124],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["list_id"]}]},"response":{"200":{"title":"CreateListViewresponse","required":["view"],"type":"object","properties":{"view":{"title":"View","required":["id","name","type","parent","grouping","divide","sorting","filters","columns","team_sidebar","settings"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string"},"parent":{"title":"Parent","description":"The parent parameter specifies where the view is located in the ClickUp Hierarchy. Both `id` and `type` are required. \\\n \\\nThe `id` is the id of the Workspace, Space, Folder, or List where the view is located. \\\n \\\nThe `type` value indciates the level of the Hierarchy where the view is located.","required":["id","type"],"type":"object","properties":{"id":{"type":"string","description":"The id of the Workspace, Space, Folder, or List where the view is located."},"type":{"type":"integer","description":"The level of the Hierarchy where the view is created. \\\n \\\nOptions include: \\\n \\\nWorkspace (Everything Level): `7` \\\n \\\nSpace: `4` \\\n \\\nFolder: `5` \\\n \\\nList: `6`","contentEncoding":"int32"}}},"grouping":{"title":"Grouping","required":["field","dir","collapsed","ignore"],"type":"object","properties":{"field":{"type":"string","description":"Set the field to group by.\\\n \\\nOptions include: `none`, `status`, `priority`, `assignee`, `tag`, or `dueDate`."},"dir":{"description":"Set a group sort order using `1` or `-1`.\\\n \\\nFor example, use `1`show tasks with urgent priority at the top of your view, and tasks with no priority at the bottom.\\\n \\\nUse `-1` to reverse the order to show tasks with no priority at the top of your view.","type":"integer","contentEncoding":"int32"},"collapsed":{"type":"array","items":{"type":"string"},"description":""},"ignore":{"type":"boolean"}}},"divide":{"title":"Divide","required":["collapsed"],"type":"object","properties":{"field":{"type":["null"]},"dir":{"type":["null"]},"collapsed":{"type":["boolean"]}}},"sorting":{"title":"Sorting","required":["fields"],"type":"object","properties":{"fields":{"type":"array","items":{"type":"string"},"description":"Include an array of fields to sort by.\\\n \\\n You can sort by the same fields available when [filtering a view](doc:filter-views)."}}},"filters":{"title":"Filters","required":["op","fields","search","show_closed"],"type":"object","properties":{"op":{"type":"string","description":"The available operator (`op``) values are `AND`` and `OR``."},"fields":{"type":"array","items":{"type":"string"},"description":"View the list of [fields available](doc:filter-views) to filter by."},"search":{"type":"string"},"show_closed":{"type":"boolean"}}},"columns":{"title":"Columns","description":"Custom Fields added to a view at the Everything level will be added to all tasks in your Workspace. Once Custom Fields are added to one of these views, you cannot move it to another level of the Hierarchy.","required":["fields"],"type":"object","properties":{"fields":{"description":"Custom Fields require the `_cf` prefix and must be formatted as a JSON object.","type":"array","items":{"type":"string"}}}},"team_sidebar":{"title":"TeamSidebar","required":["assignees","assigned_comments","unassigned_tasks"],"type":"object","properties":{"assignees":{"type":"array","items":{"type":"string"},"description":""},"assigned_comments":{"type":"boolean"},"unassigned_tasks":{"type":"boolean"}}},"settings":{"title":"Settings","required":["show_task_locations","show_subtasks","show_subtask_parent_names","show_closed_subtasks","show_assignees","show_images","collapse_empty_columns","me_comments","me_subtasks","me_checklists"],"type":"object","properties":{"show_task_locations":{"type":"boolean"},"show_subtasks":{"description":"Acceptable values are `1`, `2`, or `3`, which show subtasks separate, expanded, or collapsed.","type":"integer","contentEncoding":"int32"},"show_subtask_parent_names":{"type":"boolean"},"show_closed_subtasks":{"type":"boolean"},"show_assignees":{"type":"boolean"},"show_images":{"type":"boolean"},"collapse_empty_columns":{"type":["string","null"]},"me_comments":{"type":"boolean"},"me_subtasks":{"type":"boolean"},"me_checklists":{"type":"boolean"}}}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const CreateLocationChatChannel = {"body":{"type":"object","properties":{"description":{"type":"string","description":"The description for the Channel being created."},"topic":{"type":"string","description":"The topic of the Channel being created."},"user_ids":{"type":"array","description":"Optionally specify unique user IDs, up to 100.","items":{"type":"string"},"maxItems":100,"uniqueItems":true},"visibility":{"type":"string","description":"The visibility of the Channel being created. If not specified, the Channel is PUBLIC.","enum":["PUBLIC","PRIVATE"]},"location":{"description":"The location of the Channel: Space, Folder, or List","type":"object","required":["id","type"],"properties":{"id":{"type":"string","description":"The ID of the hierarchy entity where the Channel is to be located"},"type":{"type":"string","description":"The type of the location. Must be a Space, Folder, or List.","enum":["folder","list","space"]}}}},"required":["location"],"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"workspace_id":{"type":"integer","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of the Workspace."}},"required":["workspace_id"]}]},"response":{"200":{"type":"object","description":"The existing location Channel that is matching the creation request.","properties":{"data":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"description":{"type":"string","description":"The full Description of the Channel.","format":"RichText"},"topic":{"type":"string"},"type":{"type":"string","description":"The type of the Channel\n\n`CHANNEL` `DM` `GROUP_DM`","enum":["CHANNEL","DM","GROUP_DM"]},"visibility":{"type":"string","description":"The visibility of the Channel\n\n`PUBLIC` `PRIVATE`","enum":["PUBLIC","PRIVATE"]},"parent":{"description":"Parent information","type":"object","required":["id","type"],"properties":{"id":{"type":"string"},"type":{"type":"number"}}},"creator":{"type":"string","description":"ID of the user who created this Channel"},"created_at":{"type":"string","description":"Timestamp of when this Channel was created"},"updated_at":{"type":"string","description":"Timestamp of the last update in this Channel - Deprecated in favor of latest_comment_at","deprecated":true},"workspace_id":{"type":"string","description":"Workspace ID of the Channel"},"archived":{"type":"boolean"},"latest_comment_at":{"type":"string","description":"Timestamp of the last comment in this Channel. Optional in the case of a new Channel with no comments yet"},"is_canonical_channel":{"type":"boolean","description":"Is this the canonical channel for the parent location?"},"is_hidden":{"type":"boolean","description":"Has the user hidden this Channel from their sidebar? Currently only an option for DM/Group DM."},"default_view":{"description":"Data about the default view that the Channel should open in","type":"object","required":["type","view_id","standard"],"properties":{"type":{"type":"number"},"view_id":{"type":"string"},"standard":{"type":"boolean"}}},"channel_type":{"type":"number","description":"Type of channel (chat, project, etc.) aka subcategory_type\n\n`1` `2` `3`","enum":[1,2,3]},"counts":{"description":"Counts relevant to the user requesting the Channel","type":"object","required":["parent_id","parent_type","root_parent_id","root_parent_type","date","_version_vector"],"properties":{"parent_id":{"type":"string"},"parent_type":{"type":"string","enum":["attachment","attachmentAccess","approval","banWorkspace","checklist","checklistItem","checklistTemplateAccess","comment","commentsLastReadAt","customField","customFieldAccess","customItem","dashboard","dashboardAccess","doc","docAccess","folder","folderDescendantsSet","folderTemplateAccess","form","formulaValue","foundationalJob","goal","goalAccess","goalFolder","goalFolderAccess","hierarchy","list","listDescendantsSet","listDescendantsPoints","listDescendantsTimeEstimates","listTemplateAccess","notepad","page","pageAccess","post","reminder","reminderAccess","rolledUpFieldValue","space","spaceDescendantsSet","spaceTemplateAccess","task","taskAccess","taskHistory","taskTemplateAccess","template","user","userAccess","userGroup","userHierarchy","view","viewAccess","viewTemplateAccess","whiteboard","whiteboardAccess","widget","workspace","workspaceDescendantsSet"],"description":"`attachment` `attachmentAccess` `approval` `banWorkspace` `checklist` `checklistItem` `checklistTemplateAccess` `comment` `commentsLastReadAt` `customField` `customFieldAccess` `customItem` `dashboard` `dashboardAccess` `doc` `docAccess` `folder` `folderDescendantsSet` `folderTemplateAccess` `form` `formulaValue` `foundationalJob` `goal` `goalAccess` `goalFolder` `goalFolderAccess` `hierarchy` `list` `listDescendantsSet` `listDescendantsPoints` `listDescendantsTimeEstimates` `listTemplateAccess` `notepad` `page` `pageAccess` `post` `reminder` `reminderAccess` `rolledUpFieldValue` `space` `spaceDescendantsSet` `spaceTemplateAccess` `task` `taskAccess` `taskHistory` `taskTemplateAccess` `template` `user` `userAccess` `userGroup` `userHierarchy` `view` `viewAccess` `viewTemplateAccess` `whiteboard` `whiteboardAccess` `widget` `workspace` `workspaceDescendantsSet`"},"root_parent_id":{"type":"string"},"root_parent_type":{"type":"string","enum":["attachment","attachmentAccess","approval","banWorkspace","checklist","checklistItem","checklistTemplateAccess","comment","commentsLastReadAt","customField","customFieldAccess","customItem","dashboard","dashboardAccess","doc","docAccess","folder","folderDescendantsSet","folderTemplateAccess","form","formulaValue","foundationalJob","goal","goalAccess","goalFolder","goalFolderAccess","hierarchy","list","listDescendantsSet","listDescendantsPoints","listDescendantsTimeEstimates","listTemplateAccess","notepad","page","pageAccess","post","reminder","reminderAccess","rolledUpFieldValue","space","spaceDescendantsSet","spaceTemplateAccess","task","taskAccess","taskHistory","taskTemplateAccess","template","user","userAccess","userGroup","userHierarchy","view","viewAccess","viewTemplateAccess","whiteboard","whiteboardAccess","widget","workspace","workspaceDescendantsSet"],"description":"`attachment` `attachmentAccess` `approval` `banWorkspace` `checklist` `checklistItem` `checklistTemplateAccess` `comment` `commentsLastReadAt` `customField` `customFieldAccess` `customItem` `dashboard` `dashboardAccess` `doc` `docAccess` `folder` `folderDescendantsSet` `folderTemplateAccess` `form` `formulaValue` `foundationalJob` `goal` `goalAccess` `goalFolder` `goalFolderAccess` `hierarchy` `list` `listDescendantsSet` `listDescendantsPoints` `listDescendantsTimeEstimates` `listTemplateAccess` `notepad` `page` `pageAccess` `post` `reminder` `reminderAccess` `rolledUpFieldValue` `space` `spaceDescendantsSet` `spaceTemplateAccess` `task` `taskAccess` `taskHistory` `taskTemplateAccess` `template` `user` `userAccess` `userGroup` `userHierarchy` `view` `viewAccess` `viewTemplateAccess` `whiteboard` `whiteboardAccess` `widget` `workspace` `workspaceDescendantsSet`"},"date":{"type":"number","description":"When the user last read comments to this object, set in the past to mark comments as unread. Should be a timestamp in milliseconds."},"_version_vector":{"deprecated":true,"type":"object","required":["object_id","object_type","vector","workspace_id"],"properties":{"object_id":{"type":"string"},"object_type":{"type":"string"},"vector":{"type":"array","items":{"type":"object","required":["master_id","version","deleted"],"properties":{"master_id":{"type":"number"},"version":{"type":"number"},"deleted":{"type":"boolean"}}}},"workspace_id":{"type":"number"}}},"version":{"type":"number","description":"The version of the object when the last read at object was last updated."},"has_unread":{"type":"boolean","description":"Whether the user has unread comments on this object. (Optional)"},"num_unread":{"type":"number","description":"How many unread comments there are on this object. (Optional)"},"latest_comment_at":{"type":"number","description":"The date of the latest comment on this object. (Optional)"},"badge_count":{"type":"number","description":"The badge count for this object. (Optional)"},"thread_count":{"type":"number","description":"The number of unread threads on this object. (Optional)"},"mention_count":{"type":"number","description":"The number of mentions on this object. (Optional)"}}},"chat_room_category":{"type":"string","description":"The category of the Channel, e.g. a welcome channel, (in the future, maybe) a ClickBot channel, etc.\n\n`WELCOME_CHANNEL`","enum":["WELCOME_CHANNEL"]},"links":{"description":"The links to elements of the Channel.","type":"object","required":["members","followers"],"properties":{"members":{"type":"string","description":"The link to the members of the Channel."},"followers":{"type":"string","description":"The link to the followers of the Channel."}}}},"required":["id","name","type","visibility","parent","creator","created_at","updated_at","workspace_id","archived","links"]}},"required":["data"],"$schema":"https://json-schema.org/draft/2020-12/schema"},"201":{"type":"object","description":"The new location Channel.","properties":{"data":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"description":{"type":"string","description":"The full Description of the Channel.","format":"RichText"},"topic":{"type":"string"},"type":{"type":"string","description":"The type of the Channel\n\n`CHANNEL` `DM` `GROUP_DM`","enum":["CHANNEL","DM","GROUP_DM"]},"visibility":{"type":"string","description":"The visibility of the Channel\n\n`PUBLIC` `PRIVATE`","enum":["PUBLIC","PRIVATE"]},"parent":{"description":"Parent information","type":"object","required":["id","type"],"properties":{"id":{"type":"string"},"type":{"type":"number"}}},"creator":{"type":"string","description":"ID of the user who created this Channel"},"created_at":{"type":"string","description":"Timestamp of when this Channel was created"},"updated_at":{"type":"string","description":"Timestamp of the last update in this Channel - Deprecated in favor of latest_comment_at","deprecated":true},"workspace_id":{"type":"string","description":"Workspace ID of the Channel"},"archived":{"type":"boolean"},"latest_comment_at":{"type":"string","description":"Timestamp of the last comment in this Channel. Optional in the case of a new Channel with no comments yet"},"is_canonical_channel":{"type":"boolean","description":"Is this the canonical channel for the parent location?"},"is_hidden":{"type":"boolean","description":"Has the user hidden this Channel from their sidebar? Currently only an option for DM/Group DM."},"default_view":{"description":"Data about the default view that the Channel should open in","type":"object","required":["type","view_id","standard"],"properties":{"type":{"type":"number"},"view_id":{"type":"string"},"standard":{"type":"boolean"}}},"channel_type":{"type":"number","description":"Type of channel (chat, project, etc.) aka subcategory_type\n\n`1` `2` `3`","enum":[1,2,3]},"counts":{"description":"Counts relevant to the user requesting the Channel","type":"object","required":["parent_id","parent_type","root_parent_id","root_parent_type","date","_version_vector"],"properties":{"parent_id":{"type":"string"},"parent_type":{"type":"string","enum":["attachment","attachmentAccess","approval","banWorkspace","checklist","checklistItem","checklistTemplateAccess","comment","commentsLastReadAt","customField","customFieldAccess","customItem","dashboard","dashboardAccess","doc","docAccess","folder","folderDescendantsSet","folderTemplateAccess","form","formulaValue","foundationalJob","goal","goalAccess","goalFolder","goalFolderAccess","hierarchy","list","listDescendantsSet","listDescendantsPoints","listDescendantsTimeEstimates","listTemplateAccess","notepad","page","pageAccess","post","reminder","reminderAccess","rolledUpFieldValue","space","spaceDescendantsSet","spaceTemplateAccess","task","taskAccess","taskHistory","taskTemplateAccess","template","user","userAccess","userGroup","userHierarchy","view","viewAccess","viewTemplateAccess","whiteboard","whiteboardAccess","widget","workspace","workspaceDescendantsSet"],"description":"`attachment` `attachmentAccess` `approval` `banWorkspace` `checklist` `checklistItem` `checklistTemplateAccess` `comment` `commentsLastReadAt` `customField` `customFieldAccess` `customItem` `dashboard` `dashboardAccess` `doc` `docAccess` `folder` `folderDescendantsSet` `folderTemplateAccess` `form` `formulaValue` `foundationalJob` `goal` `goalAccess` `goalFolder` `goalFolderAccess` `hierarchy` `list` `listDescendantsSet` `listDescendantsPoints` `listDescendantsTimeEstimates` `listTemplateAccess` `notepad` `page` `pageAccess` `post` `reminder` `reminderAccess` `rolledUpFieldValue` `space` `spaceDescendantsSet` `spaceTemplateAccess` `task` `taskAccess` `taskHistory` `taskTemplateAccess` `template` `user` `userAccess` `userGroup` `userHierarchy` `view` `viewAccess` `viewTemplateAccess` `whiteboard` `whiteboardAccess` `widget` `workspace` `workspaceDescendantsSet`"},"root_parent_id":{"type":"string"},"root_parent_type":{"type":"string","enum":["attachment","attachmentAccess","approval","banWorkspace","checklist","checklistItem","checklistTemplateAccess","comment","commentsLastReadAt","customField","customFieldAccess","customItem","dashboard","dashboardAccess","doc","docAccess","folder","folderDescendantsSet","folderTemplateAccess","form","formulaValue","foundationalJob","goal","goalAccess","goalFolder","goalFolderAccess","hierarchy","list","listDescendantsSet","listDescendantsPoints","listDescendantsTimeEstimates","listTemplateAccess","notepad","page","pageAccess","post","reminder","reminderAccess","rolledUpFieldValue","space","spaceDescendantsSet","spaceTemplateAccess","task","taskAccess","taskHistory","taskTemplateAccess","template","user","userAccess","userGroup","userHierarchy","view","viewAccess","viewTemplateAccess","whiteboard","whiteboardAccess","widget","workspace","workspaceDescendantsSet"],"description":"`attachment` `attachmentAccess` `approval` `banWorkspace` `checklist` `checklistItem` `checklistTemplateAccess` `comment` `commentsLastReadAt` `customField` `customFieldAccess` `customItem` `dashboard` `dashboardAccess` `doc` `docAccess` `folder` `folderDescendantsSet` `folderTemplateAccess` `form` `formulaValue` `foundationalJob` `goal` `goalAccess` `goalFolder` `goalFolderAccess` `hierarchy` `list` `listDescendantsSet` `listDescendantsPoints` `listDescendantsTimeEstimates` `listTemplateAccess` `notepad` `page` `pageAccess` `post` `reminder` `reminderAccess` `rolledUpFieldValue` `space` `spaceDescendantsSet` `spaceTemplateAccess` `task` `taskAccess` `taskHistory` `taskTemplateAccess` `template` `user` `userAccess` `userGroup` `userHierarchy` `view` `viewAccess` `viewTemplateAccess` `whiteboard` `whiteboardAccess` `widget` `workspace` `workspaceDescendantsSet`"},"date":{"type":"number","description":"When the user last read comments to this object, set in the past to mark comments as unread. Should be a timestamp in milliseconds."},"_version_vector":{"deprecated":true,"type":"object","required":["object_id","object_type","vector","workspace_id"],"properties":{"object_id":{"type":"string"},"object_type":{"type":"string"},"vector":{"type":"array","items":{"type":"object","required":["master_id","version","deleted"],"properties":{"master_id":{"type":"number"},"version":{"type":"number"},"deleted":{"type":"boolean"}}}},"workspace_id":{"type":"number"}}},"version":{"type":"number","description":"The version of the object when the last read at object was last updated."},"has_unread":{"type":"boolean","description":"Whether the user has unread comments on this object. (Optional)"},"num_unread":{"type":"number","description":"How many unread comments there are on this object. (Optional)"},"latest_comment_at":{"type":"number","description":"The date of the latest comment on this object. (Optional)"},"badge_count":{"type":"number","description":"The badge count for this object. (Optional)"},"thread_count":{"type":"number","description":"The number of unread threads on this object. (Optional)"},"mention_count":{"type":"number","description":"The number of mentions on this object. (Optional)"}}},"chat_room_category":{"type":"string","description":"The category of the Channel, e.g. a welcome channel, (in the future, maybe) a ClickBot channel, etc.\n\n`WELCOME_CHANNEL`","enum":["WELCOME_CHANNEL"]},"links":{"description":"The links to elements of the Channel.","type":"object","required":["members","followers"],"properties":{"members":{"type":"string","description":"The link to the members of the Channel."},"followers":{"type":"string","description":"The link to the followers of the Channel."}}}},"required":["id","name","type","visibility","parent","creator","created_at","updated_at","workspace_id","archived","links"]}},"required":["data"],"$schema":"https://json-schema.org/draft/2020-12/schema"},"default":{"type":"object","properties":{"status":{"type":"integer","description":"The HTTP Status code for the error"},"message":{"type":"string","description":"The message describing the error","examples":["Generic error message"]},"trace_id":{"type":"integer","description":"Unique trace ID for tracking the request. Used for troubleshooting errors","examples":[123456789]},"timestamp":{"type":"integer","description":"The time of the error (Unix epoch milliseconds timestamp).","examples":[1671534256138]}},"required":["status","message","trace_id","timestamp"],"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const CreatePage = {"body":{"type":"object","properties":{"parent_page_id":{"type":"string","description":"The ID of the parent page. If this is a root page in the Doc, `parent_page_id` will not be returned.","default":null},"name":{"type":"string","description":"The name of the new page."},"sub_title":{"type":"string","description":"The subtitle of the new page.","default":null},"content":{"type":"string","description":"The content of the new page."},"content_format":{"type":"string","description":"The format the page content is in. For example, `text/md` for markdown or `text/plain` for plain.","default":"text/md"}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"workspaceId":{"type":"number","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of the Workspace."},"docId":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of the Doc."}},"required":["workspaceId","docId"]}]},"response":{"201":{"type":"object","properties":{"id":{"type":"string"},"doc_id":{"type":"string"},"parent_page_id":{"type":"string"},"workspace_id":{"type":"number"},"name":{"type":"string"},"pages":{"type":"array","description":"More nested documents with the same object structure.","items":{}},"sub_title":{"type":"string"},"date_created":{"type":"number"},"date_updated":{"type":"number"},"content":{"type":"string"},"avatar":{"type":"object","properties":{"color":{"type":"string"},"value":{"type":"string"},"source":{"type":"string"}}},"creator_id":{"type":"number"},"deleted":{"type":"boolean"},"deleted_by":{"type":"number"},"date_deleted":{"type":"number"},"date_edited":{"type":"number"},"edited_by":{"type":"number"},"archived":{"type":"boolean"},"archived_by":{"type":"number"},"date_archived":{"type":"number"},"authors":{"type":"array","items":{"type":"number"}},"contributors":{"type":"array","items":{"type":"number"}},"cover":{"type":"object","properties":{"color":{"type":"string"},"image_url":{"type":"string"},"position":{"type":"object","properties":{"x":{"type":"number"},"y":{"type":"number"}},"required":["x","y"]}}},"protected":{"type":"boolean"},"protected_by":{"type":"number"},"protected_note":{"type":"string"},"presentation_details":{"type":"object","properties":{"font":{"type":"string"},"font_size":{"type":"number"},"line_height":{"type":"number"},"page_width":{"type":"number"},"paragraph_spacing":{"type":"number"},"show_author_header":{"type":"boolean"},"show_contributor_header":{"type":"boolean"},"show_cover_header":{"type":"boolean"},"show_date_header":{"type":"boolean"},"show_page_outline":{"type":"boolean"},"show_sub_pages":{"type":"boolean"},"sub_page_size":{"type":"string"},"show_sub_title_header":{"type":"boolean"},"show_title_icon_header":{"type":"boolean"},"show_relationships":{"type":"boolean"},"show_relationships_compact":{"type":"boolean"},"show_sub_pages_author":{"type":"boolean"},"show_sub_pages_thumbnail":{"type":"boolean"},"show_sub_pages_compact":{"type":"boolean"},"sub_pages_style":{"type":"string"}}}},"required":["id","doc_id","workspace_id","name","date_created","content","creator_id","authors"],"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const CreateReplyMessage = {"body":{"type":"object","properties":{"assignee":{"type":"string","description":"The possible assignee of the message."},"group_assignee":{"type":"string","description":"The possible group assignee of the message."},"triaged_action":{"type":"number","description":"The triaged action applied to the message.","enum":[1,2]},"triaged_object_id":{"type":"string","description":"The message triaged action object id."},"triaged_object_type":{"type":"number","description":"The message triaged action object type."},"type":{"type":"string","description":"The type of message.","enum":["message","post"]},"content":{"type":"string","description":"The full content of the message to be created","format":"RichText","maxLength":980},"reactions":{"type":"array","description":"The reactions to the message that exist at creation time","items":{"type":"object","properties":{"date":{"type":"number","description":"The date & time the reaction was created (Unix epoch milliseconds timestamp)."},"reaction":{"type":"string","description":"The reaction to the message."},"user_id":{"type":"string","description":"The ID of the user who created the reaction."}},"required":["date","reaction","user_id"]},"maxItems":10},"followers":{"type":"array","description":"The ids of the followers of the message","items":{"type":"string"},"maxItems":10},"content_format":{"type":"string","description":"The format of the message content (Default: text/md)","default":"text/md","enum":["text/md","text/plain"]},"post_data":{"description":"The data of the post message.","type":"object","required":["title","subtype"],"properties":{"title":{"type":"string","description":"The title of the Chat Post.","maxLength":255},"subtype":{"description":"The subtype of the Chat Post.","type":"object","required":["id"],"properties":{"id":{"type":"string","description":"The subtype ID of the Chat Post."}}}}}},"required":["type","content"],"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"workspace_id":{"type":"integer","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of the Workspace."},"message_id":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of the specified message"}},"required":["workspace_id","message_id"]}]},"response":{"201":{"type":"object","properties":{"post_data":{"description":"The data of the post message.","type":"object","required":["title","subtype"],"properties":{"title":{"type":"string","description":"The title of the Chat Post.","maxLength":255},"subtype":{"description":"The subtype of the Chat Post.","type":"object","required":["id"],"properties":{"id":{"type":"string","description":"The subtype ID of the Chat Post."}}}}},"assignee":{"type":"string","description":"The possible assignee of the message."},"assigned_by":{"type":"string","description":"The user who assigned the message."},"content":{"type":"string","description":"The full content of the message.","format":"RichText"},"date":{"type":"number","description":"The date & time the message was created (Unix epoch milliseconds timestamp)."},"date_assigned":{"type":"number","description":"The date & time the message was assigned (Unix epoch milliseconds timestamp)."},"date_resolved":{"type":"number","description":"The date & time the message was resolved (Unix epoch milliseconds timestamp)."},"date_updated":{"type":"number","description":"The date & time the message was updated (Unix epoch milliseconds timestamp)."},"group_assignee":{"type":"string","description":"The possible group assignee of the message."},"id":{"type":"string","description":"The ID of the message."},"parent_channel":{"type":"string","description":"The ID of the chat this message belongs to."},"parent_message":{"type":"string","description":"The ID of the message this message is a reply to."},"resolved":{"type":"boolean","description":"The resolved status of the message."},"resolved_by":{"type":"string","description":"The user who resolved the message."},"triaged_action":{"type":"number","description":"The triaged action applied to the message.\n\n`1` `2`","enum":[1,2]},"triaged_object_id":{"type":"string","description":"The message triaged action object id."},"triaged_object_type":{"type":"number","description":"The message triaged action object type."},"type":{"type":"string","description":"The type of message.\n\n`message` `post`","enum":["message","post"]},"user_id":{"type":"string","description":"The ID of the user who created the message."},"links":{"description":"The links to elements of the message.","type":"object","required":["reactions","tagged_users"],"properties":{"reactions":{"type":"string","description":"The link to the reactions of this message."},"tagged_users":{"type":"string","description":"The link to the tagged users of this message."}}}},"required":["content","date","id","parent_channel","parent_message","resolved","type","user_id","links"],"$schema":"https://json-schema.org/draft/2020-12/schema"},"default":{"type":"object","properties":{"status":{"type":"integer","description":"The HTTP Status code for the error"},"message":{"type":"string","description":"The message describing the error","examples":["Generic error message"]},"trace_id":{"type":"integer","description":"Unique trace ID for tracking the request. Used for troubleshooting errors","examples":[123456789]},"timestamp":{"type":"integer","description":"The time of the error (Unix epoch milliseconds timestamp).","examples":[1671534256138]}},"required":["status","message","trace_id","timestamp"],"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const CreateSpace = {"body":{"title":"CreateSpacerequest","required":["name","multiple_assignees","features"],"type":"object","properties":{"name":{"type":"string","examples":["New Space Name"]},"multiple_assignees":{"type":"boolean","examples":[true]},"features":{"title":"Features","required":["due_dates","time_tracking","tags","time_estimates","checklists","custom_fields","remap_dependencies","dependency_warning","portfolios"],"type":"object","properties":{"due_dates":{"title":"DueDates","required":["enabled","start_date","remap_due_dates","remap_closed_due_date"],"type":"object","properties":{"enabled":{"type":"boolean","examples":[true]},"start_date":{"type":"boolean"},"remap_due_dates":{"type":"boolean","examples":[true]},"remap_closed_due_date":{"type":"boolean"}}},"time_tracking":{"title":"TimeTracking","required":["enabled"],"type":"object","properties":{"enabled":{"type":"boolean"}}},"tags":{"title":"Tags","required":["enabled"],"type":"object","properties":{"enabled":{"type":"boolean","examples":[true]}}},"time_estimates":{"title":"TimeEstimates","required":["enabled"],"type":"object","properties":{"enabled":{"type":"boolean","examples":[true]}}},"checklists":{"title":"Checklists","required":["enabled"],"type":"object","properties":{"enabled":{"type":"boolean","examples":[true]}}},"custom_fields":{"title":"CustomFields","required":["enabled"],"type":"object","properties":{"enabled":{"type":"boolean","examples":[true]}}},"remap_dependencies":{"title":"RemapDependencies","required":["enabled"],"type":"object","properties":{"enabled":{"type":"boolean","examples":[true]}}},"dependency_warning":{"title":"DependencyWarning","required":["enabled"],"type":"object","properties":{"enabled":{"type":"boolean","examples":[true]}}},"portfolios":{"title":"Portfolios","required":["enabled"],"type":"object","properties":{"enabled":{"type":"boolean","examples":[true]}}}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Workspace ID"}},"required":["team_id"]}]},"response":{"200":{"title":"CreateSpaceresponse","required":["id","name","private","statuses","multiple_assignees","features","archived"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"private":{"type":"boolean"},"statuses":{"type":"array","items":{"title":"Status15","required":["id","status","type","orderindex","color"],"type":"object","properties":{"id":{"type":"string"},"status":{"type":"string"},"type":{"type":"string"},"orderindex":{"type":"integer","contentEncoding":"int32"},"color":{"type":"string"}}},"description":""},"multiple_assignees":{"type":"boolean"},"features":{"title":"Features1","required":["due_dates","sprints","points","custom_items","tags","time_estimates","checklists","zoom","milestones","custom_fields","remap_dependencies","dependency_warning","multiple_assignees","portfolios","emails"],"type":"object","properties":{"due_dates":{"title":"DueDates","required":["enabled","start_date","remap_due_dates","remap_closed_due_date"],"type":"object","properties":{"enabled":{"type":"boolean"},"start_date":{"type":"boolean"},"remap_due_dates":{"type":"boolean"},"remap_closed_due_date":{"type":"boolean"}}},"sprints":{"title":"Sprints","required":["enabled"],"type":"object","properties":{"enabled":{"type":"boolean"}}},"points":{"title":"Points","required":["enabled"],"type":"object","properties":{"enabled":{"type":"boolean"}}},"custom_items":{"title":"CustomItems","required":["enabled"],"type":"object","properties":{"enabled":{"type":"boolean"}}},"tags":{"title":"Tags","required":["enabled"],"type":"object","properties":{"enabled":{"type":"boolean"}}},"time_estimates":{"title":"TimeEstimates","required":["enabled"],"type":"object","properties":{"enabled":{"type":"boolean"}}},"checklists":{"title":"Checklists","required":["enabled"],"type":"object","properties":{"enabled":{"type":"boolean"}}},"zoom":{"title":"Zoom","required":["enabled"],"type":"object","properties":{"enabled":{"type":"boolean"}}},"milestones":{"title":"Milestones","required":["enabled"],"type":"object","properties":{"enabled":{"type":"boolean"}}},"custom_fields":{"title":"CustomFields","required":["enabled"],"type":"object","properties":{"enabled":{"type":"boolean"}}},"remap_dependencies":{"title":"RemapDependencies","required":["enabled"],"type":"object","properties":{"enabled":{"type":"boolean"}}},"dependency_warning":{"title":"DependencyWarning","required":["enabled"],"type":"object","properties":{"enabled":{"type":"boolean"}}},"multiple_assignees":{"title":"MultipleAssignees","required":["enabled"],"type":"object","properties":{"enabled":{"type":"boolean"}}},"portfolios":{"title":"Portfolios","required":["enabled"],"type":"object","properties":{"enabled":{"type":"boolean"}}},"emails":{"title":"Emails","required":["enabled"],"type":"object","properties":{"enabled":{"type":"boolean"}}}}},"archived":{"type":"boolean"}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const CreateSpaceListFromTemplate = {"body":{"type":"object","required":["name"],"properties":{"name":{"type":"string","description":"Name of the new List"},"options":{"type":"object","description":"Options for creating the List","properties":{"return_immediately":{"type":"boolean","description":"Flag if newly created Object ID should be returned without waiting for the asset itself and all its nested assets to be applied. If set to true, access checks are performed before returning, but the object might not be fully created yet. In case of a timeout on syncronous requests, the of objects from the template will continue to be created past the timeout.\n","default":true},"content":{"type":"string","description":"List description"},"time_estimate":{"type":"number","description":"Include time (hours, minutes and seconds)"},"automation":{"type":"boolean","description":"Import automation settings"},"include_views":{"type":"boolean","description":"Import views"},"old_due_date":{"type":"boolean","description":"Import tasks' due dates"},"old_start_date":{"type":"boolean","description":"Import tasks' start dates"},"old_followers":{"type":"boolean","description":"Import tasks' watchers"},"comment_attachments":{"type":"boolean","description":"Import tasks' comment attachments"},"recur_settings":{"type":"boolean","description":"Import tasks' recurring settings"},"old_tags":{"type":"boolean","description":"Import tasks' tags"},"old_statuses":{"type":"boolean","description":"Import tasks' status settings"},"subtasks":{"type":"boolean","description":"Import tasks' subtasks"},"custom_type":{"type":"boolean","description":"Import tasks' task types"},"old_assignees":{"type":"boolean","description":"Import tasks' assignees"},"attachments":{"type":"boolean","description":"Import tasks' attachments"},"comment":{"type":"boolean","description":"Import tasks' comments"},"old_status":{"type":"boolean","description":"Import tasks' current statuses"},"external_dependencies":{"type":"boolean","description":"Import tasks' external dependencies"},"internal_dependencies":{"type":"boolean","description":"Import tasks' internal dependencies"},"priority":{"type":"boolean","description":"Import tasks' priorities"},"custom_fields":{"type":"boolean","description":"Import tasks' Custom Fields"},"old_checklists":{"type":"boolean","description":"Import tasks' checklists"},"relationships":{"type":"boolean","description":"Import tasks' relationships"},"old_subtask_assignees":{"type":"boolean","description":"Import tasks' subtask assignees"},"start_date":{"type":"string","format":"date-time","description":"Project start date for remapping dates"},"due_date":{"type":"string","format":"date-time","description":"Project due date for remapping dates"},"remap_start_date":{"type":"boolean","description":"Remap start dates"},"skip_weekends":{"type":"boolean","description":"Skip weekends when remapping dates"},"archived":{"type":"integer","enum":[1,2,null],"description":"Include archived tasks"}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"space_id":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"ID of the Space where the List will be created"},"template_id":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"ID of the template to use"}},"required":["space_id","template_id"]}]},"response":{"200":{"type":"object","description":"Response object returned when a new List is created from a template in a Folder or Space.","properties":{"id":{"type":"string","description":"Unique identifier of the newly created List","examples":["901107394085"]},"list":{"type":"object","description":"Detailed information about the created List","properties":{"id":{"type":"string","description":"Unique identifier of the List (matches parent id)","examples":["901107394085"]},"name":{"type":"string","description":"Display name of the List","examples":["API Folder in Space"]},"deleted":{"type":"boolean","description":"Indicates if the List has been marked as deleted","examples":[true]},"orderindex":{"type":"integer","description":"Position of the List relative to other Lists in the same container","examples":[0]},"priority":{"type":"string","description":"Priority level of the List, if applicable"},"assignee":{"type":"string","description":"Default assignee for the List, if applicable"},"due_date":{"type":"string","format":"date-time","description":"Default due date for tasks in the List"},"start_date":{"type":"string","format":"date-time","description":"Default start date for tasks in the List"},"folder":{"type":"object","description":"Information about the parent Folder containing this List, if applicable","properties":{"id":{"type":"string","description":"Unique identifier of the parent Folder","examples":["90114317916"]},"name":{"type":"string","description":"Display name of the parent Folder","examples":["hidden"]},"hidden":{"type":"boolean","description":"Indicates if the Folder is hidden from standard views","examples":[true]},"access":{"type":"boolean","description":"Indicates if the current user has access to this Folder","examples":[true]}}},"space":{"type":"object","description":"Information about the Workspace Space containing this List","properties":{"id":{"type":"string","description":"Unique identifier of the Space","examples":["90112667046"]},"name":{"type":"string","description":"Display name of the Space","examples":["API Test Space"]},"access":{"type":"boolean","description":"Indicates if the current user has access to this Space","examples":[true]}}},"inbound_address":{"type":"string","description":"Email address that can be used to create tasks in this List via email","examples":["abc-list@tasks.clickup.com"]},"archived":{"type":"boolean","description":"Indicates if the List is archived","examples":[false]},"override_statuses":{"type":"boolean","description":"Indicates if this List uses custom statuses instead of Space default statuses","examples":[true]},"statuses":{"type":"array","description":"List of available statuses for tasks in this List","items":{"type":"object","description":"Status configuration object","properties":{"id":{"type":"string","description":"Unique identifier for the status","examples":["sc901107394085_DCnaeiSB"]},"status":{"type":"string","description":"Display name of the status","examples":["to do"]},"orderindex":{"type":"integer","description":"Position of this status in the status list","examples":[0]},"color":{"type":"string","description":"Color code associated with this status","examples":["#87909e"]},"type":{"type":"string","description":"Category of the status (e.g., open, closed, in progress)","examples":["open"]},"status_group":{"type":"string","description":"TODO - Identifier for grouping related statuses","examples":["subcat_901107394085"]}}}},"permission_level":{"type":"string","description":"Access level the current user has for this List (e.g., create, edit, view)","examples":["create"]}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"400":{"type":"object","properties":{"error":{"type":"string","examples":["Name is required"]},"ECODE":{"type":"string","examples":["OAUTH_117"]}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const CreateSpaceTag = {"body":{"title":"CreateSpaceTagrequest","required":["tag"],"type":"object","properties":{"tag":{"title":"Tag","required":["name","tag_fg","tag_bg"],"type":"object","properties":{"name":{"type":"string","examples":["Tag Name"]},"tag_fg":{"type":"string","examples":["#000000"]},"tag_bg":{"type":"string","examples":["#000000"]}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"space_id":{"type":"number","contentEncoding":"double","examples":[512],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["space_id"]}]},"response":{"200":{"type":"object","contentMediaType":"application/json","additionalProperties":true,"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const CreateSpaceView = {"body":{"title":"CreateSpaceViewrequest","required":["name","type","grouping","divide","sorting","filters","columns","team_sidebar","settings"],"type":"object","properties":{"name":{"type":"string","examples":["New Space View Name"]},"type":{"type":"string","description":"The type of view to create. Options include: `list`, `board`, `calendar`, `table`, `timeline`, `workload`, `activity`, `map`, `conversation`, or `gantt`.","examples":["list"]},"grouping":{"title":"Grouping","required":["field","dir","collapsed","ignore"],"type":"object","properties":{"field":{"type":"string","description":"Set the field to group by.\\\n \\\nOptions include: `none`, `status`, `priority`, `assignee`, `tag`, or `dueDate`.","examples":["status"]},"dir":{"description":"Set a group sort order using `1` or `-1`.\\\n \\\nFor example, use `1`show tasks with urgent priority at the top of your view, and tasks with no priority at the bottom.\\\n \\\nUse `-1` to reverse the order to show tasks with no priority at the top of your view.","type":"integer","contentEncoding":"int32","examples":[1]},"collapsed":{"type":"array","items":{"type":"string"},"description":""},"ignore":{"type":"boolean"}}},"divide":{"title":"Divide","required":["collapsed"],"type":"object","properties":{"field":{"type":["null"]},"dir":{"type":["null"]},"collapsed":{"type":["boolean"]}}},"sorting":{"title":"Sorting","required":["fields"],"type":"object","properties":{"fields":{"type":"array","items":{"type":"string"},"description":"Include an array of fields to sort by.\\\n \\\n You can sort by the same fields available when [filtering a view](doc:filter-views)."}}},"filters":{"title":"Filters","required":["op","fields","search","show_closed"],"type":"object","properties":{"op":{"type":"string","description":"The available operator (`op``) values are `AND`` and `OR``.","examples":["AND"]},"fields":{"type":"array","items":{"type":"string"},"description":"View the list of [fields available](doc:filter-views) to filter by."},"search":{"type":"string"},"show_closed":{"type":"boolean"}}},"columns":{"title":"Columns","description":"Custom Fields added to a view at the Everything level will be added to all tasks in your Workspace. Once Custom Fields are added to one of these views, you cannot move it to another level of the Hierarchy.","required":["fields"],"type":"object","properties":{"fields":{"description":"Custom Fields require the `_cf` prefix and must be formatted as a JSON object.","type":"array","items":{"type":"string"}}}},"team_sidebar":{"title":"TeamSidebar","required":["assignees","assigned_comments","unassigned_tasks"],"type":"object","properties":{"assignees":{"type":"array","items":{"type":"string"},"description":""},"assigned_comments":{"type":"boolean"},"unassigned_tasks":{"type":"boolean"}}},"settings":{"title":"Settings","required":["show_task_locations","show_subtasks","show_subtask_parent_names","show_closed_subtasks","show_assignees","show_images","collapse_empty_columns","me_comments","me_subtasks","me_checklists"],"type":"object","properties":{"show_task_locations":{"type":"boolean"},"show_subtasks":{"description":"Acceptable values are `1`, `2`, or `3`, which show subtasks separate, expanded, or collapsed.","type":"integer","contentEncoding":"int32","examples":[3]},"show_subtask_parent_names":{"type":"boolean"},"show_closed_subtasks":{"type":"boolean"},"show_assignees":{"type":"boolean","examples":[true]},"show_images":{"type":"boolean","examples":[true]},"collapse_empty_columns":{"type":["string","null"]},"me_comments":{"type":"boolean","examples":[true]},"me_subtasks":{"type":"boolean","examples":[true]},"me_checklists":{"type":"boolean","examples":[true]}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"space_id":{"type":"number","contentEncoding":"double","examples":[790],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["space_id"]}]},"response":{"200":{"title":"CreateSpaceViewresponse","required":["view"],"type":"object","properties":{"view":{"title":"View","required":["id","name","type","parent","grouping","divide","sorting","filters","columns","team_sidebar","settings"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string"},"parent":{"title":"Parent","description":"The parent parameter specifies where the view is located in the ClickUp Hierarchy. Both `id` and `type` are required. \\\n \\\nThe `id` is the id of the Workspace, Space, Folder, or List where the view is located. \\\n \\\nThe `type` value indciates the level of the Hierarchy where the view is located.","required":["id","type"],"type":"object","properties":{"id":{"type":"string","description":"The id of the Workspace, Space, Folder, or List where the view is located."},"type":{"type":"integer","description":"The level of the Hierarchy where the view is created. \\\n \\\nOptions include: \\\n \\\nWorkspace (Everything Level): `7` \\\n \\\nSpace: `4` \\\n \\\nFolder: `5` \\\n \\\nList: `6`","contentEncoding":"int32"}}},"grouping":{"title":"Grouping","required":["field","dir","collapsed","ignore"],"type":"object","properties":{"field":{"type":"string","description":"Set the field to group by.\\\n \\\nOptions include: `none`, `status`, `priority`, `assignee`, `tag`, or `dueDate`."},"dir":{"description":"Set a group sort order using `1` or `-1`.\\\n \\\nFor example, use `1`show tasks with urgent priority at the top of your view, and tasks with no priority at the bottom.\\\n \\\nUse `-1` to reverse the order to show tasks with no priority at the top of your view.","type":"integer","contentEncoding":"int32"},"collapsed":{"type":"array","items":{"type":"string"},"description":""},"ignore":{"type":"boolean"}}},"divide":{"title":"Divide","required":["collapsed"],"type":"object","properties":{"field":{"type":["null"]},"dir":{"type":["null"]},"collapsed":{"type":["boolean"]}}},"sorting":{"title":"Sorting","required":["fields"],"type":"object","properties":{"fields":{"type":"array","items":{"type":"string"},"description":"Include an array of fields to sort by.\\\n \\\n You can sort by the same fields available when [filtering a view](doc:filter-views)."}}},"filters":{"title":"Filters","required":["op","fields","search","show_closed"],"type":"object","properties":{"op":{"type":"string","description":"The available operator (`op``) values are `AND`` and `OR``."},"fields":{"type":"array","items":{"type":"string"},"description":"View the list of [fields available](doc:filter-views) to filter by."},"search":{"type":"string"},"show_closed":{"type":"boolean"}}},"columns":{"title":"Columns","description":"Custom Fields added to a view at the Everything level will be added to all tasks in your Workspace. Once Custom Fields are added to one of these views, you cannot move it to another level of the Hierarchy.","required":["fields"],"type":"object","properties":{"fields":{"description":"Custom Fields require the `_cf` prefix and must be formatted as a JSON object.","type":"array","items":{"type":"string"}}}},"team_sidebar":{"title":"TeamSidebar","required":["assignees","assigned_comments","unassigned_tasks"],"type":"object","properties":{"assignees":{"type":"array","items":{"type":"string"},"description":""},"assigned_comments":{"type":"boolean"},"unassigned_tasks":{"type":"boolean"}}},"settings":{"title":"Settings","required":["show_task_locations","show_subtasks","show_subtask_parent_names","show_closed_subtasks","show_assignees","show_images","collapse_empty_columns","me_comments","me_subtasks","me_checklists"],"type":"object","properties":{"show_task_locations":{"type":"boolean"},"show_subtasks":{"description":"Acceptable values are `1`, `2`, or `3`, which show subtasks separate, expanded, or collapsed.","type":"integer","contentEncoding":"int32"},"show_subtask_parent_names":{"type":"boolean"},"show_closed_subtasks":{"type":"boolean"},"show_assignees":{"type":"boolean"},"show_images":{"type":"boolean"},"collapse_empty_columns":{"type":["string","null"]},"me_comments":{"type":"boolean"},"me_subtasks":{"type":"boolean"},"me_checklists":{"type":"boolean"}}}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const CreateTask = {"body":{"title":"CreateTaskrequest","required":["name"],"type":"object","properties":{"name":{"type":"string","examples":["New Task Name"]},"description":{"type":"string","examples":["New Task Description"]},"assignees":{"type":"array","items":{"type":"integer","contentEncoding":"int32","examples":[183]},"description":""},"archived":{"type":"boolean"},"group_assignees":{"type":"array","items":{"type":"string","examples":["dd01f92f-48ca-446d-88a1-0beb0e8f5f14"]},"description":"Assign multiple user groups to the task."},"tags":{"type":"array","items":{"type":"string","examples":["tag name 1"]},"description":""},"status":{"type":"string","examples":["Open"]},"priority":{"type":["integer","null"],"contentEncoding":"int32","examples":[3]},"due_date":{"type":"integer","contentEncoding":"int64","examples":[1508369194377]},"due_date_time":{"type":"boolean"},"time_estimate":{"type":"integer","contentEncoding":"int32","examples":[8640000]},"start_date":{"type":"integer","contentEncoding":"int64","examples":[1567780450202]},"start_date_time":{"type":"boolean"},"points":{"type":"number","description":"Add Sprint Points to the task.","examples":[3]},"notify_all":{"type":"boolean","description":"If `notify_all` is true, notifications will be sent to everyone including the creator of the comment.","examples":[true]},"parent":{"description":"You can create a subtask by including an existing task ID.\\\n \\\nThe `parent` task ID you include can be a subtask, but must be in the same List specified in the path parameter.","type":["string","null"]},"markdown_content":{"type":"string","description":"Markdown formatted description for the task. If both `markdown_content` and `description` are provided, `markdown_content` will be used instead of `description`."},"links_to":{"description":"Include a task ID to create a linked dependency with your new task.","type":["string","null"]},"check_required_custom_fields":{"description":"When creating a task via API any required Custom Fields are ignored by default (`false`).\\\n \\\nYou can enforce required Custom Fields by including `check_required_custom_fields: true`.","type":"boolean","examples":[true]},"custom_fields":{"type":"array","items":{"title":"CustomFields6","required":["id","value"],"type":"object","properties":{"id":{"type":"string","examples":["0a52c486-5f05-403b-b4fd-c512ff05131c"]},"value":{"oneOf":[{"type":"integer","contentEncoding":"int32"},{"type":"string"}],"examples":["This is a string of text added to a Custom Field."]}}},"description":"[Filter by Custom Fields.](doc:filtertasks)"},"custom_item_id":{"type":"number","description":"The custom task type ID for this task. A value of `null` (default) creates a standard task type \"Task\".\\\n \\\nTo get a list of available custom task type IDs for your Workspace, use the [Get Custom Task Types endpoint](ref:getcustomitems)."}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"list_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["list_id"]},{"type":"object","properties":{"custom_task_ids":{"type":"boolean","examples":[true],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"If you want to reference a task by its custom task id, this value must be `true`."},"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."}},"required":[]}]},"response":{"200":{"title":"CreateTaskresponse.yaml","type":"object","properties":{"id":{"type":"string"},"custom_id":{"type":["string","null"]},"custom_item_id":{"type":["number","null"],"description":"The custom task type ID for this task. A value of `null` (default) creates a standard task type \"Task\".\\\n \\\nTo get a list of available custom task type IDs for your Workspace, use the [Get Custom Task Types endpoint](ref:getcustomitems)."},"name":{"type":"string"},"text_content":{"type":"string"},"description":{"type":"string"},"status":{"title":"Status","required":["status","color","orderindex","type"],"type":"object","properties":{"status":{"type":"string"},"color":{"type":"string"},"orderindex":{"type":"integer","contentEncoding":"int32"},"type":{"type":"string"}}},"orderindex":{"type":"string"},"date_created":{"type":"string"},"date_updated":{"type":"string"},"date_closed":{"type":["string","null"]},"creator":{"title":"Creator","required":["id","username","color","profilePicture"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"color":{"type":"string"},"profilePicture":{"type":"string"}}},"assignees":{"type":"array","items":{"type":"string"},"description":""},"archived":{"type":"boolean"},"group_assignees":{"type":"array","items":{"type":"string"},"description":""},"email_assignees":{"type":"string"},"checklists":{"type":"array","items":{"type":"string"},"description":""},"tags":{"type":"array","items":{"type":"string"},"description":""},"parent":{"type":["string","null"]},"priority":{"type":["string","null"]},"due_date":{"type":["string","null"]},"start_date":{"type":["string","null"]},"points":{"type":["number"]},"time_estimate":{"type":["string","null"]},"time_spent":{"type":["string","null"]},"custom_fields":{"type":"array","items":{"title":"CustomFields8","type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string"},"type_config":{"title":"TypeConfig1","type":"object","properties":{"single_user":{"type":"boolean"},"include_groups":{"type":"boolean"},"include_guests":{"type":"boolean"},"include_team_members":{"type":"boolean"}}},"date_created":{"type":"string"},"hide_from_guests":{"type":"boolean"},"value":{"oneOf":[{"title":"Value","type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"email":{"type":"string"},"color":{"type":"string"},"initials":{"type":"string"},"profilePicture":{"type":["string","null"]}}},{"title":"Value1","required":["id","username","email","color","initials","profilePicture"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"email":{"type":"string"},"color":{"type":"string"},"initials":{"type":"string"},"profilePicture":{"type":["string","null"]}}},{"title":"Value2","required":["value"],"type":"object","properties":{"value":{"type":"string"}},"examples":["This is a text CF"]}]},"value_richtext":{"type":"string"},"value_markdown":{"type":"string"},"required":{"type":"boolean"}}},"description":""},"list":{"title":"List","required":["id"],"type":"object","properties":{"id":{"type":"string"}}},"folder":{"title":"Folder","required":["id"],"type":"object","properties":{"id":{"type":"string"}}},"space":{"title":"Space","required":["id"],"type":"object","properties":{"id":{"type":"string"}}},"url":{"type":"string"}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const CreateTaskAttachment = {"body":{"properties":{"attachment":{"type":"array","items":{}}},"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"task_id":{"type":"string","examples":["9hv"],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["task_id"]},{"type":"object","properties":{"custom_task_ids":{"type":"boolean","examples":[true],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"If you want to reference a task by its custom task id, this value must be `true`."},"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."}},"required":[]}]},"response":{"200":{"title":"CreateTaskAttachmentresponse","required":["id","version","date","title","extension","thumbnail_small","thumbnail_large","url"],"type":"object","properties":{"id":{"type":"string"},"version":{"type":"string"},"date":{"type":"integer","contentEncoding":"int64"},"title":{"type":"string"},"extension":{"type":"string"},"thumbnail_small":{"type":"string"},"thumbnail_large":{"type":"string"},"url":{"type":"string"}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const CreateTaskComment = {"body":{"title":"CreateTaskCommentrequest","required":["comment_text","notify_all"],"type":"object","properties":{"comment_text":{"type":"string","examples":["Task comment content"]},"assignee":{"type":"integer","contentEncoding":"int32","examples":[183]},"group_assignee":{"type":"string","contentEncoding":"int32","description":"","examples":["dd01f92f-48ca-446d-88a1-0beb0e8f5f14"]},"notify_all":{"description":"If `notify_all` is true, notifications will be sent to everyone including the creator of the comment.","type":"boolean","examples":[true]}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"task_id":{"type":"string","examples":["9hz"],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["task_id"]},{"type":"object","properties":{"custom_task_ids":{"type":"boolean","examples":[true],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"If you want to reference a task by it's custom task id, this value must be `true`."},"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."}},"required":[]}]},"response":{"200":{"title":"CreateTaskCommentresponse","required":["id","hist_id","date"],"type":"object","properties":{"id":{"type":"string"},"hist_id":{"type":"string"},"date":{"type":"integer","contentEncoding":"int64"}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const CreateTaskFromTemplate = {"body":{"title":"CreateTaskFromTemplaterequest","required":["name"],"type":"object","properties":{"name":{"type":"string","examples":["New task name"]}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"list_id":{"type":"number","contentEncoding":"double","examples":[512],"$schema":"https://json-schema.org/draft/2020-12/schema"},"template_id":{"type":"string","examples":["9hz"],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["list_id","template_id"]}]},"response":{"200":{"type":"object","contentMediaType":"application/json","additionalProperties":true,"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const CreateTeamView = {"body":{"title":"CreateTeamViewrequest","required":["name","type","grouping","divide","sorting","filters","columns","team_sidebar","settings"],"type":"object","properties":{"name":{"type":"string","examples":["New Everything level View"]},"type":{"type":"string","description":"The type of view to create. Options include: `list`, `board`, `calendar`, `table`, `timeline`, `workload`, `activity`, `map`, `conversation`, or `gantt`.","examples":["list"]},"grouping":{"title":"Grouping","required":["field","dir","collapsed","ignore"],"type":"object","properties":{"field":{"type":"string","description":"Set the field to group by.\\\n \\\nOptions include: `none`, `status`, `priority`, `assignee`, `tag`, or `dueDate`.","examples":["status"]},"dir":{"description":"Set a group sort order using `1` or `-1`.\\\n \\\nFor example, use `1`show tasks with urgent priority at the top of your view, and tasks with no priority at the bottom.\\\n \\\nUse `-1` to reverse the order to show tasks with no priority at the top of your view.","type":"integer","contentEncoding":"int32","examples":[1]},"collapsed":{"type":"array","items":{"type":"string"},"description":""},"ignore":{"type":"boolean"}}},"divide":{"title":"Divide","required":["collapsed"],"type":"object","properties":{"field":{"type":["null"]},"dir":{"type":["null"]},"collapsed":{"type":["boolean"]}}},"sorting":{"title":"Sorting","required":["fields"],"type":"object","properties":{"fields":{"type":"array","items":{"type":"string"},"description":"Include an array of fields to sort by.\\\n \\\n You can sort by the same fields available when [filtering a view](doc:filter-views)."}}},"filters":{"title":"Filters","required":["op","fields","search","show_closed"],"type":"object","properties":{"op":{"type":"string","description":"The available operator (`op``) values are `AND`` and `OR``.","examples":["AND"]},"fields":{"type":"array","items":{"type":"string"},"description":"View the list of [fields available](doc:filter-views) to filter by."},"search":{"type":"string"},"show_closed":{"type":"boolean"}}},"columns":{"title":"Columns","description":"Custom Fields added to a view at the Everything level will be added to all tasks in your Workspace. Once Custom Fields are added to one of these views, you cannot move it to another level of the Hierarchy.","required":["fields"],"type":"object","properties":{"fields":{"description":"Custom Fields require the `_cf` prefix and must be formatted as a JSON object.","type":"array","items":{"type":"string"}}}},"team_sidebar":{"title":"TeamSidebar","required":["assignees","assigned_comments","unassigned_tasks"],"type":"object","properties":{"assignees":{"type":"array","items":{"type":"string"},"description":""},"assigned_comments":{"type":"boolean"},"unassigned_tasks":{"type":"boolean"}}},"settings":{"title":"Settings","required":["show_task_locations","show_subtasks","show_subtask_parent_names","show_closed_subtasks","show_assignees","show_images","collapse_empty_columns","me_comments","me_subtasks","me_checklists"],"type":"object","properties":{"show_task_locations":{"type":"boolean"},"show_subtasks":{"description":"Acceptable values are `1`, `2`, or `3`, which show subtasks separate, expanded, or collapsed.","type":"integer","contentEncoding":"int32","examples":[3]},"show_subtask_parent_names":{"type":"boolean"},"show_closed_subtasks":{"type":"boolean"},"show_assignees":{"type":"boolean","examples":[true]},"show_images":{"type":"boolean","examples":[true]},"collapse_empty_columns":{"type":["string","null"]},"me_comments":{"type":"boolean","examples":[true]},"me_subtasks":{"type":"boolean","examples":[true]},"me_checklists":{"type":"boolean","examples":[true]}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Workspace ID"}},"required":["team_id"]}]},"response":{"200":{"title":"CreateTeamViewresponse","required":["view"],"type":"object","properties":{"view":{"title":"View","required":["id","name","type","parent","grouping","divide","sorting","filters","columns","team_sidebar","settings"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string"},"parent":{"title":"Parent","description":"The parent parameter specifies where the view is located in the ClickUp Hierarchy. Both `id` and `type` are required. \\\n \\\nThe `id` is the id of the Workspace, Space, Folder, or List where the view is located. \\\n \\\nThe `type` value indciates the level of the Hierarchy where the view is located.","required":["id","type"],"type":"object","properties":{"id":{"type":"string","description":"The id of the Workspace, Space, Folder, or List where the view is located."},"type":{"type":"integer","description":"The level of the Hierarchy where the view is created. \\\n \\\nOptions include: \\\n \\\nWorkspace (Everything Level): `7` \\\n \\\nSpace: `4` \\\n \\\nFolder: `5` \\\n \\\nList: `6`","contentEncoding":"int32"}}},"grouping":{"title":"Grouping","required":["field","dir","collapsed","ignore"],"type":"object","properties":{"field":{"type":"string","description":"Set the field to group by.\\\n \\\nOptions include: `none`, `status`, `priority`, `assignee`, `tag`, or `dueDate`."},"dir":{"description":"Set a group sort order using `1` or `-1`.\\\n \\\nFor example, use `1`show tasks with urgent priority at the top of your view, and tasks with no priority at the bottom.\\\n \\\nUse `-1` to reverse the order to show tasks with no priority at the top of your view.","type":"integer","contentEncoding":"int32"},"collapsed":{"type":"array","items":{"type":"string"},"description":""},"ignore":{"type":"boolean"}}},"divide":{"title":"Divide","required":["collapsed"],"type":"object","properties":{"field":{"type":["null"]},"dir":{"type":["null"]},"collapsed":{"type":["boolean"]}}},"sorting":{"title":"Sorting","required":["fields"],"type":"object","properties":{"fields":{"type":"array","items":{"type":"string"},"description":"Include an array of fields to sort by.\\\n \\\n You can sort by the same fields available when [filtering a view](doc:filter-views)."}}},"filters":{"title":"Filters","required":["op","fields","search","show_closed"],"type":"object","properties":{"op":{"type":"string","description":"The available operator (`op``) values are `AND`` and `OR``."},"fields":{"type":"array","items":{"type":"string"},"description":"View the list of [fields available](doc:filter-views) to filter by."},"search":{"type":"string"},"show_closed":{"type":"boolean"}}},"columns":{"title":"Columns","description":"Custom Fields added to a view at the Everything level will be added to all tasks in your Workspace. Once Custom Fields are added to one of these views, you cannot move it to another level of the Hierarchy.","required":["fields"],"type":"object","properties":{"fields":{"description":"Custom Fields require the `_cf` prefix and must be formatted as a JSON object.","type":"array","items":{"type":"string"}}}},"team_sidebar":{"title":"TeamSidebar","required":["assignees","assigned_comments","unassigned_tasks"],"type":"object","properties":{"assignees":{"type":"array","items":{"type":"string"},"description":""},"assigned_comments":{"type":"boolean"},"unassigned_tasks":{"type":"boolean"}}},"settings":{"title":"Settings","required":["show_task_locations","show_subtasks","show_subtask_parent_names","show_closed_subtasks","show_assignees","show_images","collapse_empty_columns","me_comments","me_subtasks","me_checklists"],"type":"object","properties":{"show_task_locations":{"type":"boolean"},"show_subtasks":{"description":"Acceptable values are `1`, `2`, or `3`, which show subtasks separate, expanded, or collapsed.","type":"integer","contentEncoding":"int32"},"show_subtask_parent_names":{"type":"boolean"},"show_closed_subtasks":{"type":"boolean"},"show_assignees":{"type":"boolean"},"show_images":{"type":"boolean"},"collapse_empty_columns":{"type":["string","null"]},"me_comments":{"type":"boolean"},"me_subtasks":{"type":"boolean"},"me_checklists":{"type":"boolean"}}}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const CreateThreadedComment = {"body":{"title":"CreateTaskCommentrequest","required":["comment_text","notify_all"],"type":"object","properties":{"comment_text":{"type":"string","examples":["Task comment content"]},"assignee":{"type":"integer","contentEncoding":"int32","examples":[183]},"group_assignee":{"type":"string","contentEncoding":"int32","description":"","examples":["d01f92f-48ca-446d-88a1-0beb0e8f5f14"]},"notify_all":{"description":"If `notify_all` is true, notifications will be sent to everyone including the creator of the comment.","type":"boolean","examples":[true]}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"comment_id":{"type":"number","contentEncoding":"double","examples":[456],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["comment_id"]}]},"response":{"200":{"type":"object","contentMediaType":"application/json","additionalProperties":true,"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const CreateUserGroup = {"body":{"title":"CreateTeamrequest","required":["name","members"],"type":"object","properties":{"name":{"type":"string","examples":["New User Group name"]},"handle":{"type":"string","examples":["newusergroupname"]},"members":{"type":"array","items":{"type":"integer","contentEncoding":"int32","examples":[123456]},"description":""}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Workspace ID"}},"required":["team_id"]}]},"response":{"200":{"title":"CreateTeamresponse","required":["id","team_id","userid","name","handle","date_created","initials","members","avatar"],"type":"object","properties":{"id":{"type":"string"},"team_id":{"type":"string"},"userid":{"type":"integer","contentEncoding":"int32"},"name":{"type":"string"},"handle":{"type":"string"},"date_created":{"type":"string"},"initials":{"type":"string"},"members":{"type":"array","items":{"title":"Members1","required":["id","username","email","color","initials","profilePicture"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"email":{"type":"string"},"color":{"type":"string"},"initials":{"type":"string"},"profilePicture":{"type":"string"}}},"description":""},"avatar":{"title":"Avatar","required":["attachment_id","color","source","icon"],"type":"object","properties":{"attachment_id":{"type":["string","null"]},"color":{"type":["string","null"]},"source":{"type":["string","null"]},"icon":{"type":["string","null"]}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const CreateWebhook = {"body":{"title":"CreateWebhookrequest","required":["endpoint","events"],"type":"object","properties":{"endpoint":{"type":"string","examples":["https://yourdomain.com/webhook"]},"events":{"type":"array","description":"See [documeentation](doc:webhooks#task-webhooks) for available event options. User `*` to subscribe to all events.","items":{"type":"string","examples":["taskCreated"]}},"space_id":{"type":"integer","examples":[1234]},"folder_id":{"type":"integer","examples":[5678]},"list_id":{"type":"integer","examples":[9876]},"task_id":{"type":"string","examples":["abc1234"]}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Workspace ID"}},"required":["team_id"]}]},"response":{"200":{"title":"CreateWebhookresponse","required":["id","webhook"],"type":"object","properties":{"id":{"type":"string"},"webhook":{"title":"Webhook","required":["id","userid","team_id","endpoint","client_id","events","task_id","list_id","folder_id","space_id","health","secret"],"type":"object","properties":{"id":{"type":"string"},"userid":{"type":"integer","contentEncoding":"int32"},"team_id":{"type":"integer","contentEncoding":"int32"},"endpoint":{"type":"string"},"client_id":{"type":"string"},"events":{"type":"array","items":{"type":"string"},"description":""},"task_id":{"type":["string","null"]},"list_id":{"type":["string","null"]},"folder_id":{"type":["string","null"]},"space_id":{"type":["string","null"]},"health":{"title":"Health","required":["status","fail_count"],"type":"object","properties":{"status":{"type":"string"},"fail_count":{"type":"integer","contentEncoding":"int32"}}},"secret":{"type":"string"}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const CreateWorkspaceAuditLog = {"body":{"type":"object","required":["applicability"],"properties":{"filter":{"description":"A filter containing the criteria to filter logs by.","type":"object","properties":{"workspaceId":{"type":"string","description":"The ID of the Workspace.","required":true,"examples":["123456"]},"userId":{"description":"The user ID. This can be a single user or multiple.","type":"array","items":{"type":"string"}},"userEmail":{"description":"User emails. This can be a single email or multiple.","type":"array","items":{"type":"string"}},"eventType":{"description":"Types of events to filter by. Options include `USER_LOGIN`, `USER_LOGOUT`, `CHANGE_2FA`, `CHANGE_PASSWORD`, `CHANGE_EMAIL`, `JOIN_WORKSPACE`, `LEAVE_WORKSPACE`, `REMOVE_FROM_WORKSPACE`, `RESET_PASSWORD`, `ROLE_CHANGE`, `SCIM_PROVISION`, `SCIM_DEPROVISION`, `SCIM_UPDATE`, `ADVANCED_SETTINGS_UPDATED`, `CHANGE_ROLE_PERMISSIONS`, `INVITE_TO_WORKSPACE`, `CHANGE_USER_ROLE`, `CHANGE_SSO_POLICY`, `CHANGE_2FA_POLICY`, `CUSTOM_ROLE_CREATED`, `CUSTOM_ROLE_UPDATED`, `CUSTOM_ROLE_DELETED`, `SCIM_GROUP_CREATED`, `SCIM_GROUP_UPDATED`, `SCIM_GROUP_DELETED`, `GROUP_CREATED`, `GROUP_DELETED`, `GROUP_EDITED`, `GROUP_MEMBER_ADDED`, `GROUP_MEMBER_REMOVED`, `SSO_CONFIG_UPDATED`, `TASK_CREATED`, `TASK_ARCHIVED`, `TASK_DELETED`, `TASK_RESTORED`, `TASK_UNARCHIVED`, `TASK_STATUS_CHANGED`, `TASK_PRIORITY_CHANGED`, `TASK_ASSIGNEES_CHANGED`, and `TASK_CUSTOM_FIELD_VALUES_CHANGED`.","type":"array","items":{"type":"string"}},"eventStatus":{"type":"string","description":"Status of events you're filtering by. Options include `success`, `failed`, `started`, `completed`, `error`, `system_error`."},"startTime":{"type":"number","description":"The start time to begin paginating your logs."},"endTime":{"type":"number","description":"The end time to begin paginating your logs."}}},"applicability":{"type":"string","description":"Type of logs to filter by. Options include `auth-and-security` and `user-activity`. Most use cases will use `auth-and-security`."},"pagination":{"description":"The pagination request determines where logs should start and how many to return.","type":"object","properties":{"pageRows":{"type":"number","description":"The number of rows to return."},"pageTimestamp":{"type":"number","description":"The timestamp to index on. This should be the timestamp of the last row on the previous page. If you are requesting the first page, this should be the current timestamp."},"pageDirection":{"type":"string","description":"Pagination direction. This should be set to `before` for most use cases. Options include `before` and `after`."}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"workspace_id":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of the Workspace."}},"required":["workspace_id"]}]},"response":{"200":{"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const Createatimeentry = {"body":{"title":"Createatimeentryrequest","required":["start","duration"],"type":"object","properties":{"description":{"type":"string","examples":["from api"]},"tags":{"description":"Users on the Business Plan and above can include a time tracking label.","type":"array","items":{"title":"Tags6","required":["name","tag_fg","tag_bg"],"type":"object","properties":{"name":{"type":"string","examples":["name of tag"]},"tag_fg":{"type":"string","examples":["#FFFFFF"]},"tag_bg":{"type":"string","examples":["#BF55EC"]}}}},"start":{"type":"integer","contentEncoding":"int64","examples":[1595282645000]},"stop":{"type":"integer","contentEncoding":"int64","description":"The `duration` parameter can be used instead of the `stop` parameter. "},"end":{"type":"integer","contentEncoding":"int64"},"billable":{"type":"boolean","examples":[true]},"duration":{"description":"When there are values for both `start` and `end`, `duration` is ignored. The `stop` parameter can be used instead of the `duration` parameter.","type":"integer","contentEncoding":"int32","examples":[50000]},"assignee":{"description":"Workspace owners and admins can include any user id. Workspace members can only include their own user id.","type":"integer","contentEncoding":"int32","examples":[1]},"tid":{"type":"string","examples":["task_id"]}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"team_Id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Workspace ID"}},"required":["team_Id"]},{"type":"object","properties":{"custom_task_ids":{"type":"boolean","examples":[true],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"If you want to reference a task by it's custom task id, this value must be `true`."},"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."}},"required":[]}]},"response":{"200":{"title":"Createatimeentryresponse","required":["description","tags","start","billable","duration","assignee","tid"],"type":"object","properties":{"description":{"type":"string"},"tags":{"type":"array","items":{"title":"Tags6","required":["name","tag_fg","tag_bg"],"type":"object","properties":{"name":{"type":"string"},"tag_fg":{"type":"string"},"tag_bg":{"type":"string"}}},"description":""},"start":{"type":"integer","contentEncoding":"int64"},"billable":{"type":"boolean"},"duration":{"type":"integer","contentEncoding":"int32"},"assignee":{"type":"integer","contentEncoding":"int32"},"tid":{"type":"string"}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const DeleteChatChannel = {"metadata":{"allOf":[{"type":"object","properties":{"workspace_id":{"type":"integer","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of the Workspace."},"channel_id":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of the specified Channel."}},"required":["workspace_id","channel_id"]}]},"response":{"204":{"$schema":"https://json-schema.org/draft/2020-12/schema"},"404":{"type":"object","properties":{"status":{"type":"integer","description":"The HTTP Status code for the error"},"message":{"type":"string","description":"The message describing the error","examples":["Generic error message"]},"trace_id":{"type":"integer","description":"Unique trace ID for tracking the request. Used for troubleshooting errors","examples":[123456789]},"timestamp":{"type":"integer","description":"The time of the error (Unix epoch milliseconds timestamp).","examples":[1671534256138]}},"required":["status","message","trace_id","timestamp"],"$schema":"https://json-schema.org/draft/2020-12/schema"},"default":{"type":"object","properties":{"status":{"type":"integer","description":"The HTTP Status code for the error"},"message":{"type":"string","description":"The message describing the error","examples":["Generic error message"]},"trace_id":{"type":"integer","description":"Unique trace ID for tracking the request. Used for troubleshooting errors","examples":[123456789]},"timestamp":{"type":"integer","description":"The time of the error (Unix epoch milliseconds timestamp).","examples":[1671534256138]}},"required":["status","message","trace_id","timestamp"],"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const DeleteChatMessage = {"metadata":{"allOf":[{"type":"object","properties":{"workspace_id":{"type":"integer","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of the Workspace."},"message_id":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of the specified message"}},"required":["workspace_id","message_id"]}]},"response":{"204":{"$schema":"https://json-schema.org/draft/2020-12/schema"},"default":{"type":"object","properties":{"status":{"type":"integer","description":"The HTTP Status code for the error"},"message":{"type":"string","description":"The message describing the error","examples":["Generic error message"]},"trace_id":{"type":"integer","description":"Unique trace ID for tracking the request. Used for troubleshooting errors","examples":[123456789]},"timestamp":{"type":"integer","description":"The time of the error (Unix epoch milliseconds timestamp).","examples":[1671534256138]}},"required":["status","message","trace_id","timestamp"],"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const DeleteChatReaction = {"metadata":{"allOf":[{"type":"object","properties":{"workspace_id":{"type":"integer","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of the Workspace."},"message_id":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of the specified message"},"reaction":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The name of the reaction to be deleted."}},"required":["workspace_id","message_id","reaction"]}]},"response":{"204":{"$schema":"https://json-schema.org/draft/2020-12/schema"},"400":{"type":"object","properties":{"status":{"type":"integer","description":"The HTTP Status code for the error"},"message":{"type":"string","description":"The message describing the error","examples":["Generic error message"]},"trace_id":{"type":"integer","description":"Unique trace ID for tracking the request. Used for troubleshooting errors","examples":[123456789]},"timestamp":{"type":"integer","description":"The time of the error (Unix epoch milliseconds timestamp).","examples":[1671534256138]}},"required":["status","message","trace_id","timestamp"],"$schema":"https://json-schema.org/draft/2020-12/schema"},"404":{"type":"object","properties":{"status":{"type":"integer","description":"The HTTP Status code for the error"},"message":{"type":"string","description":"The message describing the error","examples":["Generic error message"]},"trace_id":{"type":"integer","description":"Unique trace ID for tracking the request. Used for troubleshooting errors","examples":[123456789]},"timestamp":{"type":"integer","description":"The time of the error (Unix epoch milliseconds timestamp).","examples":[1671534256138]}},"required":["status","message","trace_id","timestamp"],"$schema":"https://json-schema.org/draft/2020-12/schema"},"default":{"type":"object","properties":{"status":{"type":"integer","description":"The HTTP Status code for the error"},"message":{"type":"string","description":"The message describing the error","examples":["Generic error message"]},"trace_id":{"type":"integer","description":"Unique trace ID for tracking the request. Used for troubleshooting errors","examples":[123456789]},"timestamp":{"type":"integer","description":"The time of the error (Unix epoch milliseconds timestamp).","examples":[1671534256138]}},"required":["status","message","trace_id","timestamp"],"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const DeleteChecklist = {"metadata":{"allOf":[{"type":"object","properties":{"checklist_id":{"type":"string","examples":["b955c4dc"],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"b8a8-48d8-a0c6-b4200788a683 (uuid)"}},"required":["checklist_id"]}]},"response":{"200":{"type":"object","contentMediaType":"application/json","additionalProperties":true,"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const DeleteChecklistItem = {"metadata":{"allOf":[{"type":"object","properties":{"checklist_id":{"type":"string","examples":["b955c4dc"],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"b8a8-48d8-a0c6-b4200788a683 (uuid)"},"checklist_item_id":{"type":"string","examples":["21e08dc8"],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"e491-47f5-9fd8-d1dc4cedcc6f (uuid)"}},"required":["checklist_id","checklist_item_id"]}]},"response":{"200":{"type":"object","contentMediaType":"application/json","additionalProperties":true,"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const DeleteComment = {"metadata":{"allOf":[{"type":"object","properties":{"comment_id":{"type":"number","contentEncoding":"double","examples":[456],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["comment_id"]}]},"response":{"200":{"type":"object","contentMediaType":"application/json","additionalProperties":true,"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const DeleteDependency = {"metadata":{"allOf":[{"type":"object","properties":{"task_id":{"type":"string","examples":["9hv"],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["task_id"]},{"type":"object","properties":{"depends_on":{"type":"string","examples":["9hz"],"$schema":"https://json-schema.org/draft/2020-12/schema"},"dependency_of":{"type":"string","examples":["9hz"],"$schema":"https://json-schema.org/draft/2020-12/schema"},"custom_task_ids":{"type":"boolean","examples":[true],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"If you want to reference a task by it's custom task id, this value must be `true`."},"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."}},"required":["depends_on","dependency_of"]}]},"response":{"200":{"type":"object","contentMediaType":"application/json","additionalProperties":true,"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const DeleteFolder = {"metadata":{"allOf":[{"type":"object","properties":{"folder_id":{"type":"number","contentEncoding":"double","examples":[457],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["folder_id"]}]},"response":{"200":{"type":"object","contentMediaType":"application/json","additionalProperties":true,"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const DeleteGoal = {"metadata":{"allOf":[{"type":"object","properties":{"goal_id":{"type":"string","examples":["e53a033c"],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"900e-462d-a849-4a216b06d930 (uuid)"}},"required":["goal_id"]},{"type":"object","properties":{"Content-Type":{"const":"application/json","type":"string","examples":["application/json"],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["Content-Type"]}]},"response":{"200":{"type":"object","contentMediaType":"application/json","additionalProperties":true,"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const DeleteKeyResult = {"metadata":{"allOf":[{"type":"object","properties":{"key_result_id":{"type":"string","examples":["947d46ed"],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"8480-49bc-8c57-e569747efe93 (uuid)"}},"required":["key_result_id"]}]},"response":{"200":{"type":"object","contentMediaType":"application/json","additionalProperties":true,"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const DeleteList = {"metadata":{"allOf":[{"type":"object","properties":{"list_id":{"type":"number","contentEncoding":"double","examples":[124],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["list_id"]},{"type":"object","properties":{"Content-Type":{"const":"application/json","type":"string","examples":["application/json"],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["Content-Type"]}]},"response":{"200":{"type":"object","contentMediaType":"application/json","additionalProperties":true,"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const DeleteSpace = {"metadata":{"allOf":[{"type":"object","properties":{"space_id":{"type":"number","contentEncoding":"double","examples":[790],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["space_id"]}]},"response":{"200":{"type":"object","contentMediaType":"application/json","additionalProperties":true,"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const DeleteSpaceTag = {"body":{"title":"DeleteSpaceTagrequest","required":["tag"],"type":"object","properties":{"tag":{"title":"Tag","required":["name","tag_fg","tag_bg"],"type":"object","properties":{"name":{"type":"string","examples":["Tag name"]},"tag_fg":{"type":"string","examples":["#000000"]},"tag_bg":{"type":"string","examples":["#000000"]}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"space_id":{"type":"number","contentEncoding":"double","examples":[512],"$schema":"https://json-schema.org/draft/2020-12/schema"},"tag_name":{"type":"string","examples":["name"],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["space_id","tag_name"]}]},"response":{"200":{"type":"object","contentMediaType":"application/json","additionalProperties":true,"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const DeleteTask = {"metadata":{"allOf":[{"type":"object","properties":{"task_id":{"type":"string","examples":["9xh"],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["task_id"]},{"type":"object","properties":{"custom_task_ids":{"type":"boolean","examples":[true],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"If you want to reference a task by its custom task id, this value must be `true`."},"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."}},"required":[]},{"type":"object","properties":{"Content-Type":{"const":"application/json","type":"string","examples":["application/json"],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["Content-Type"]}]},"response":{"200":{"type":"object","contentMediaType":"application/json","additionalProperties":true,"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const DeleteTaskLink = {"metadata":{"allOf":[{"type":"object","properties":{"task_id":{"type":"string","examples":["9hv"],"$schema":"https://json-schema.org/draft/2020-12/schema"},"links_to":{"type":"string","examples":["9hz"],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["task_id","links_to"]},{"type":"object","properties":{"custom_task_ids":{"type":"boolean","examples":[true],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"If you want to reference a task by it's custom task id, this value must be `true`."},"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."}},"required":[]}]},"response":{"200":{"title":"DeleteTaskLinkresponse","required":["task"],"type":"object","properties":{"task":{"title":"Task1","required":["id","name","status","orderindex","date_created","date_updated","date_closed","creator","assignees","checklists","tags","parent","priority","due_date","start_date","time_estimate","time_spent","list","folder","space","linked_tasks","url"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"status":{"title":"Status","required":["status","color","orderindex","type"],"type":"object","properties":{"status":{"type":"string"},"color":{"type":"string"},"orderindex":{"type":"integer","contentEncoding":"int32"},"type":{"type":"string"}}},"orderindex":{"type":"string"},"date_created":{"type":"string"},"date_updated":{"type":"string"},"date_closed":{"type":["string","null"]},"creator":{"title":"Creator","required":["id","username","color","profilePicture"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"color":{"type":"string"},"profilePicture":{"type":"string"}}},"assignees":{"type":"array","items":{"type":"string"},"description":""},"checklists":{"type":"array","items":{"type":"string"},"description":""},"tags":{"type":"array","items":{"type":"string"},"description":""},"parent":{"type":["string","null"]},"priority":{"type":["string","null"]},"due_date":{"type":["string","null"]},"start_date":{"type":["string","null"]},"time_estimate":{"type":["string","null"]},"time_spent":{"type":["string","null"]},"list":{"title":"List","required":["id"],"type":"object","properties":{"id":{"type":"string"}}},"folder":{"title":"Folder","required":["id"],"type":"object","properties":{"id":{"type":"string"}}},"space":{"title":"Space","required":["id"],"type":"object","properties":{"id":{"type":"string"}}},"linked_tasks":{"type":"array","items":{"type":"string"},"description":""},"url":{"type":"string"}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const DeleteTeam = {"metadata":{"allOf":[{"type":"object","properties":{"group_id":{"type":"string","examples":["C9C58BE9"],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"User Group ID"}},"required":["group_id"]}]},"response":{"200":{"type":"object","contentMediaType":"application/json","additionalProperties":true,"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const DeleteView = {"metadata":{"allOf":[{"type":"object","properties":{"view_id":{"type":"string","examples":["3c"],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"105 (string)"}},"required":["view_id"]}]},"response":{"200":{"type":"object","contentMediaType":"application/json","additionalProperties":true,"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const DeleteWebhook = {"metadata":{"allOf":[{"type":"object","properties":{"webhook_id":{"type":"string","examples":["4b67ac88"],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"e506-4a29-9d42-26e504e3435e (uuid)"}},"required":["webhook_id"]}]},"response":{"200":{"type":"object","contentMediaType":"application/json","additionalProperties":true,"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const DeleteatimeEntry = {"metadata":{"allOf":[{"type":"object","properties":{"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Workspace ID"},"timer_id":{"type":"number","contentEncoding":"double","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Array of timer ids to delete separated by commas"}},"required":["team_id","timer_id"]},{"type":"object","properties":{"Content-Type":{"const":"application/json","type":"string","examples":["application/json"],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["Content-Type"]}]},"response":{"200":{"title":"DeleteatimeEntryresponse","required":["data"],"type":"object","properties":{"data":{"title":"Data3","required":["id","task","wid","user","billable","start","end","duration","description","tags","source","at"],"type":"object","properties":{"id":{"type":"string"},"task":{"title":"Task6","required":["id","name","status","custom_type"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"status":{"title":"Status","required":["status","color","orderindex","type"],"type":"object","properties":{"status":{"type":"string"},"color":{"type":"string"},"orderindex":{"type":"integer","contentEncoding":"int32"},"type":{"type":"string"}}},"custom_type":{"type":["string","null"]}}},"wid":{"type":"string"},"user":{"title":"User2","required":["id","username","initials","email","color","profilePicture"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"initials":{"type":"string"},"email":{"type":"string"},"color":{"type":"string"},"profilePicture":{"type":"string"}}},"billable":{"type":"boolean"},"start":{"type":"string"},"end":{"type":"integer","contentEncoding":"int64"},"duration":{"type":"integer","contentEncoding":"int32"},"description":{"type":"string"},"tags":{"type":"array","items":{"type":"string"},"description":""},"source":{"type":"string"},"at":{"type":"integer","contentEncoding":"int64"}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const Deletetimetracked = {"metadata":{"allOf":[{"type":"object","properties":{"task_id":{"type":"string","examples":["9hv"],"$schema":"https://json-schema.org/draft/2020-12/schema"},"interval_id":{"type":"string","examples":["123"],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["task_id","interval_id"]},{"type":"object","properties":{"custom_task_ids":{"type":"boolean","examples":[true],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"If you want to reference a task by it's custom task id, this value must be `true`."},"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."}},"required":[]},{"type":"object","properties":{"Content-Type":{"const":"application/json","type":"string","examples":["application/json"],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["Content-Type"]}]},"response":{"200":{"type":"object","contentMediaType":"application/json","additionalProperties":true,"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const EditChecklist = {"body":{"title":"EditChecklistrequest","type":"object","properties":{"name":{"type":"string","examples":["Updated Checklist"]},"position":{"description":"Position refers to the order of appearance of checklists on a task.\\\n \\\nTo set a checklist to appear at the top of the checklists section of a task, use `\"position\": 0`.","type":"integer","contentEncoding":"int32","examples":[1]}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"checklist_id":{"type":"string","examples":["b955c4dc"],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"b8a8-48d8-a0c6-b4200788a683 (uuid)"}},"required":["checklist_id"]}]},"response":{"200":{"type":"object","contentMediaType":"application/json","additionalProperties":true,"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const EditChecklistItem = {"body":{"title":"EditChecklistItemrequest","type":"object","properties":{"name":{"type":"string","examples":["Updated Checklist Item"]},"assignee":{"type":["string","null"]},"resolved":{"type":"boolean","examples":[true]},"parent":{"description":"To nest a checklist item under another checklist item, include the other item's `checklist_item_id`.","type":["string","null"]}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"checklist_id":{"type":"string","examples":["b955c4dc"],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"b8a8-48d8-a0c6-b4200788a683 (uuid)"},"checklist_item_id":{"type":"string","examples":["21e08dc8"],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"e491-47f5-9fd8-d1dc4cedcc6f (uuid)"}},"required":["checklist_id","checklist_item_id"]}]},"response":{"200":{"title":"EditChecklistItemresponse","required":["checklist"],"type":"object","properties":{"checklist":{"title":"Checklist2","required":["id","task_id","name","date_created","orderindex","resolved","unresolved","items"],"type":"object","properties":{"id":{"type":"string"},"task_id":{"type":"string"},"name":{"type":"string"},"date_created":{"type":"string"},"orderindex":{"type":"integer","contentEncoding":"int32"},"resolved":{"type":"integer","contentEncoding":"int32"},"unresolved":{"type":"integer","contentEncoding":"int32"},"items":{"type":"array","items":{"title":"Item1","required":["id","name","orderindex","assignee","resolved","parent","date_created","children"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"orderindex":{"type":"integer","contentEncoding":"int32"},"assignee":{"type":["string","null"]},"resolved":{"type":"boolean"},"parent":{"type":["string","null"]},"date_created":{"type":"string"},"children":{"type":"array","items":{"type":"string"},"description":""}}},"description":""}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const EditGuestOnWorkspace = {"body":{"title":"EditGuestOnWorkspacerequest","required":["username","can_edit_tags","can_see_time_spent","can_see_time_estimated","can_create_views","custom_role_id"],"type":"object","properties":{"username":{"type":"string","examples":["Guest User"]},"can_edit_tags":{"type":"boolean","examples":[true]},"can_see_time_spent":{"type":"boolean","examples":[true]},"can_see_time_estimated":{"type":"boolean","examples":[true]},"can_create_views":{"type":"boolean","examples":[true]},"custom_role_id":{"type":"integer","contentEncoding":"int32","examples":[12345]}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Workspace ID"},"guest_id":{"type":"number","contentEncoding":"double","examples":[403],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["team_id","guest_id"]}]},"response":{"200":{"title":"EditGuestOnWorkspaceresponse","required":["guest"],"type":"object","properties":{"guest":{"title":"Guest","required":["user","invited_by","can_see_time_spent","can_see_time_estimated","can_edit_tags","can_create_views","shared"],"type":"object","properties":{"user":{"title":"User5","required":["id","username","email","color","profilePicture","initials","role","custom_role","last_active","date_joined","date_invited"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":["string","null"]},"email":{"type":"string"},"color":{"type":["string","null"]},"profilePicture":{"type":["string","null"]},"initials":{"type":"string"},"role":{"type":"integer","contentEncoding":"int32"},"custom_role":{"title":"CustomRole","required":["id","name"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"name":{"type":"string"}}},"last_active":{"type":["string","null"]},"date_joined":{"type":["string","null"]},"date_invited":{"type":"string"}}},"invited_by":{"title":"InvitedBy","type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"color":{"type":"string"},"username":{"type":"string"},"email":{"type":"string"},"initials":{"type":"string"},"profilePicture":{"type":"string"}}},"can_see_time_spent":{"type":"boolean"},"can_see_time_estimated":{"type":"boolean"},"can_edit_tags":{"type":"boolean"},"can_create_views":{"type":"boolean"},"shared":{"title":"Shared","type":"object","properties":{"tasks":{"type":"array","items":{"type":"string"},"description":""},"lists":{"type":"array","items":{"type":"string"},"description":""},"folders":{"type":"array","items":{"type":"string"},"description":""}}}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const EditKeyResult = {"body":{"title":"EditKeyResultrequest","required":["steps_current","note"],"type":"object","properties":{"steps_current":{"type":"integer","contentEncoding":"int32","examples":[5]},"note":{"type":"string","examples":["Target achieved"]}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"key_result_id":{"type":"string","examples":["947d46ed"],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"8480-49bc-8c57-e569747efe93 (uuid)"}},"required":["key_result_id"]}]},"response":{"200":{"title":"EditKeyResultresponse","required":["key_result"],"type":"object","properties":{"key_result":{"title":"KeyResult1","required":["id","goal_id","name","type","unit","creator","date_created","goal_pretty_id","percent_completed","completed","task_ids","subcategory_ids","owners","last_action"],"type":"object","properties":{"id":{"type":"string"},"goal_id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string"},"unit":{"type":"string"},"creator":{"type":"integer","contentEncoding":"int32"},"date_created":{"type":"string"},"goal_pretty_id":{"type":"string"},"percent_completed":{"type":["string","null"]},"completed":{"type":"boolean"},"task_ids":{"type":"array","items":{"type":"string"},"description":""},"subcategory_ids":{"type":"array","items":{"type":"string"},"description":""},"owners":{"type":"array","items":{"title":"Owner","required":["id","username","initials","email","color","profilePicture"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"initials":{"type":"string"},"email":{"type":"string"},"color":{"type":"string"},"profilePicture":{"type":"string"}}},"description":""},"last_action":{"title":"LastAction1","required":["id","key_result_id","userid","date_modified","steps_taken","note","steps_before","steps_current","steps_before_float","steps_taken_float","steps_current_float"],"type":"object","properties":{"id":{"type":"string"},"key_result_id":{"type":"string"},"userid":{"type":"integer","contentEncoding":"int32"},"date_modified":{"type":"string"},"steps_taken":{"type":["string","null"]},"note":{"type":"string"},"steps_before":{"type":["string","null"]},"steps_current":{"type":["string","null"]},"steps_before_float":{"type":"integer","contentEncoding":"int32"},"steps_taken_float":{"type":"integer","contentEncoding":"int32"},"steps_current_float":{"type":["string","null"]}}}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const EditPage = {"body":{"type":"object","properties":{"name":{"type":"string","description":"The updated name of the page."},"sub_title":{"type":"string","description":"The updated subtitle of the page."},"content":{"type":"string","description":"The updated content of the page."},"content_edit_mode":{"type":"string","description":"The strategy for updating content on the page. For example, `replace`, `append`, or `prepend`.","default":"replace"},"content_format":{"type":"string","description":"The format the page content is in. For example, `text/md` for markdown and `text/plain` for plain.","default":"text/md"}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"workspaceId":{"type":"number","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of the Workspace."},"docId":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of the Doc."},"pageId":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of the page."}},"required":["workspaceId","docId","pageId"]}]},"response":{"200":{"type":"object","contentMediaType":"application/json","additionalProperties":true,"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const EditSpaceTag = {"body":{"title":"EditSpaceTagrequest","required":["tag"],"type":"object","properties":{"tag":{"title":"Tag1","required":["name","fg_color","bg_color"],"type":"object","properties":{"name":{"type":"string","examples":["Tag name"]},"fg_color":{"type":"string"},"bg_color":{"type":"string"}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"space_id":{"type":"number","contentEncoding":"double","examples":[512],"$schema":"https://json-schema.org/draft/2020-12/schema"},"tag_name":{"type":"string","examples":["name"],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["space_id","tag_name"]}]},"response":{"200":{"title":"EditSpaceTagresponse","required":["tag"],"type":"object","properties":{"tag":{"title":"Tag1","required":["name","fg_color","bg_color"],"type":"object","properties":{"name":{"type":"string"},"fg_color":{"type":"string"},"bg_color":{"type":"string"}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const EditUserOnWorkspace = {"body":{"title":"EditUserOnWorkspacerequest","required":["username","admin","custom_role_id"],"type":"object","properties":{"username":{"type":"string","examples":["User Name"]},"admin":{"type":"boolean"},"custom_role_id":{"type":"integer","contentEncoding":"int32","examples":[998877]}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Workspace ID"},"user_id":{"type":"number","contentEncoding":"double","examples":[403],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["team_id","user_id"]}]},"response":{"200":{"title":"EditUserOnWorkspaceresponse","required":["member"],"type":"object","properties":{"member":{"title":"Member7","type":"object","properties":{"user":{"title":"User21","type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"email":{"type":"string"},"color":{"type":["string","null"]},"profilePicture":{"type":["string","null"]},"initials":{"type":"string"},"role":{"description":"Owner = 1, Admin = 2, Member = 3, Guest = 4","type":"integer","contentEncoding":"int32"},"custom_role":{"title":"CustomRole","required":["id","name"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"name":{"type":"string"}}},"last_active":{"type":["string","null"]},"date_joined":{"type":["string","null"]},"date_invited":{"type":"string"}}},"invited_by":{"title":"InvitedBy","type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"color":{"type":"string"},"username":{"type":"string"},"email":{"type":"string"},"initials":{"type":"string"},"profilePicture":{"type":"string"}}},"shared":{"title":"Shared","type":"object","properties":{"tasks":{"type":"array","items":{"type":"string"},"description":""},"lists":{"type":"array","items":{"type":"string"},"description":""},"folders":{"type":"array","items":{"type":"string"},"description":""}}}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const Edittimetracked = {"body":{"title":"Edittimetrackedrequest","required":["start","end","time"],"type":"object","properties":{"start":{"type":"integer","contentEncoding":"int64","examples":[1567780450202]},"end":{"type":"integer","contentEncoding":"int64","examples":[1508369194377]},"time":{"type":"integer","contentEncoding":"int32","examples":[8640000]}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"task_id":{"type":"string","examples":["9hv"],"$schema":"https://json-schema.org/draft/2020-12/schema"},"interval_id":{"type":"string","examples":["123"],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["task_id","interval_id"]},{"type":"object","properties":{"custom_task_ids":{"type":"boolean","examples":[true],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"If you want to reference a task by it's custom task id, this value must be `true`."},"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."}},"required":[]}]},"response":{"200":{"type":"object","contentMediaType":"application/json","additionalProperties":true,"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetAccessToken = {"metadata":{"allOf":[{"type":"object","properties":{"client_id":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Oauth app client id"},"client_secret":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Oauth app client secret"},"code":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Code given in redirect url"}},"required":["client_id","client_secret","code"]}]},"response":{"200":{"title":"GetAccessTokenresponse","required":["access_token"],"type":"object","properties":{"access_token":{"type":"string"}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetAccessibleCustomFields = {"metadata":{"allOf":[{"type":"object","properties":{"list_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["list_id"]},{"type":"object","properties":{"Content-Type":{"const":"application/json","type":"string","examples":["application/json"],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["Content-Type"]}]},"response":{"200":{"title":"GetAccessibleCustomFieldsresponse","required":["fields"],"type":"object","properties":{"fields":{"type":"array","items":{"title":"Field","required":["id","name","type","type_config","date_created","hide_from_guests"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string"},"type_config":{"title":"TypeConfig","type":"object","properties":{"options":{"type":"array","items":{"title":"Option","required":["id","color"],"type":"object","properties":{"id":{"type":"string"},"label":{"type":"string"},"color":{"type":["string","null"]},"name":{"type":"string"},"value":{"type":"integer","contentEncoding":"int32"},"type":{"type":"string"},"orderindex":{"type":"integer","contentEncoding":"int32"}}},"description":""},"default":{"oneOf":[{"type":["string","null"]},{"type":"integer","contentEncoding":"int32"},{}]},"precision":{"type":"integer","contentEncoding":"int32"},"currency_type":{"type":"string"},"placeholder":{"type":["string","null"]},"end":{"type":"integer","contentEncoding":"int32"},"start":{"type":"integer","contentEncoding":"int32"},"count":{"type":"integer","contentEncoding":"int32"},"code_point":{"type":"string"},"tracking":{"title":"Tracking","required":["subtasks","checklists","assigned_comments"],"type":"object","properties":{"subtasks":{"type":"boolean"},"checklists":{"type":"boolean"},"assigned_comments":{"type":"boolean"}}},"complete_on":{"type":"integer","contentEncoding":"int32"}}},"date_created":{"type":"string"},"hide_from_guests":{"type":"boolean"}}},"description":""}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetAuthorizedTeams = {"response":{"200":{"title":"GetAuthorizedTeamsresponse","required":["teams"],"type":"object","properties":{"teams":{"type":"array","items":{"title":"Team","required":["id","name","color","avatar","members"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"color":{"type":"string"},"avatar":{"type":"string"},"members":{"type":"array","items":{"title":"Member","required":["user"],"type":"object","properties":{"user":{"title":"User","required":["id","username","color","profilePicture"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"color":{"type":"string"},"profilePicture":{"type":"string"}}}}},"description":""}}},"description":""}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetAuthorizedUser = {"response":{"200":{"title":"GetAuthorizedUserresponse","required":["user"],"type":"object","properties":{"user":{"title":"User","required":["id","username","color","profilePicture"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"color":{"type":"string"},"profilePicture":{"type":"string"}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetBulkTasksTimeinStatus = {"metadata":{"allOf":[{"type":"object","properties":{"task_ids":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Include this paramater once per `task_id`.\nYou can include up to 100 task ids per request.\nFor example: `task_ids=3cuh&task_ids=g4fs`"},"custom_task_ids":{"type":"boolean","examples":[true],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"If you want to reference a task by it's custom task id, this value must be `true`."},"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."}},"required":["task_ids"]},{"type":"object","properties":{"Content-Type":{"const":"application/json","type":"string","examples":["application/json"],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["Content-Type"]}]},"response":{"200":{"title":"GetBulkTasksTimeinStatusresponse","required":["27075wz","20bbn28"],"type":"object","properties":{"27075wz":{"title":"27075wz","required":["current_status","status_history"],"type":"object","properties":{"current_status":{"title":"CurrentStatus","required":["status","color","total_time"],"type":"object","properties":{"status":{"type":"string"},"color":{"type":"string"},"total_time":{"title":"TotalTime","required":["by_minute","since"],"type":"object","properties":{"by_minute":{"type":"integer","contentEncoding":"int32"},"since":{"type":"string"}}}}},"status_history":{"type":"array","items":{"title":"StatusHistory","required":["status","color","type","total_time","orderindex"],"type":"object","properties":{"status":{"type":"string"},"color":{"type":"string"},"type":{"type":"string"},"total_time":{"title":"TotalTime","required":["by_minute","since"],"type":"object","properties":{"by_minute":{"type":"integer","contentEncoding":"int32"},"since":{"type":"string"}}},"orderindex":{"type":"integer","contentEncoding":"int32"}}},"description":""}}},"20bbn28":{"title":"20bbn28","required":["current_status","status_history"],"type":"object","properties":{"current_status":{"title":"CurrentStatus","required":["status","color","total_time"],"type":"object","properties":{"status":{"type":"string"},"color":{"type":"string"},"total_time":{"title":"TotalTime","required":["by_minute","since"],"type":"object","properties":{"by_minute":{"type":"integer","contentEncoding":"int32"},"since":{"type":"string"}}}}},"status_history":{"type":"array","items":{"title":"StatusHistory","required":["status","color","type","total_time","orderindex"],"type":"object","properties":{"status":{"type":"string"},"color":{"type":"string"},"type":{"type":"string"},"total_time":{"title":"TotalTime","required":["by_minute","since"],"type":"object","properties":{"by_minute":{"type":"integer","contentEncoding":"int32"},"since":{"type":"string"}}},"orderindex":{"type":"integer","contentEncoding":"int32"}}},"description":""}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetChatChannel = {"metadata":{"allOf":[{"type":"object","properties":{"workspace_id":{"type":"integer","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of the Workspace."},"channel_id":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of the specified Channel."}},"required":["workspace_id","channel_id"]},{"type":"object","properties":{"description_format":{"type":"string","enum":["text/md","text/plain"],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Format of the Channel Description (Default: text/md)"}},"required":[]}]},"response":{"200":{"type":"object","description":"The requested Channel.","properties":{"data":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"description":{"type":"string","description":"The full Description of the Channel.","format":"RichText"},"topic":{"type":"string"},"type":{"type":"string","description":"The type of the Channel\n\n`CHANNEL` `DM` `GROUP_DM`","enum":["CHANNEL","DM","GROUP_DM"]},"visibility":{"type":"string","description":"The visibility of the Channel\n\n`PUBLIC` `PRIVATE`","enum":["PUBLIC","PRIVATE"]},"parent":{"description":"Parent information","type":"object","required":["id","type"],"properties":{"id":{"type":"string"},"type":{"type":"number"}}},"creator":{"type":"string","description":"ID of the user who created this Channel"},"created_at":{"type":"string","description":"Timestamp of when this Channel was created"},"updated_at":{"type":"string","description":"Timestamp of the last update in this Channel - Deprecated in favor of latest_comment_at","deprecated":true},"workspace_id":{"type":"string","description":"Workspace ID of the Channel"},"archived":{"type":"boolean"},"latest_comment_at":{"type":"string","description":"Timestamp of the last comment in this Channel. Optional in the case of a new Channel with no comments yet"},"is_canonical_channel":{"type":"boolean","description":"Is this the canonical channel for the parent location?"},"is_hidden":{"type":"boolean","description":"Has the user hidden this Channel from their sidebar? Currently only an option for DM/Group DM."},"default_view":{"description":"Data about the default view that the Channel should open in","type":"object","required":["type","view_id","standard"],"properties":{"type":{"type":"number"},"view_id":{"type":"string"},"standard":{"type":"boolean"}}},"channel_type":{"type":"number","description":"Type of channel (chat, project, etc.) aka subcategory_type\n\n`1` `2` `3`","enum":[1,2,3]},"counts":{"description":"Counts relevant to the user requesting the Channel","type":"object","required":["parent_id","parent_type","root_parent_id","root_parent_type","date","_version_vector"],"properties":{"parent_id":{"type":"string"},"parent_type":{"type":"string","enum":["attachment","attachmentAccess","approval","banWorkspace","checklist","checklistItem","checklistTemplateAccess","comment","commentsLastReadAt","customField","customFieldAccess","customItem","dashboard","dashboardAccess","doc","docAccess","folder","folderDescendantsSet","folderTemplateAccess","form","formulaValue","foundationalJob","goal","goalAccess","goalFolder","goalFolderAccess","hierarchy","list","listDescendantsSet","listDescendantsPoints","listDescendantsTimeEstimates","listTemplateAccess","notepad","page","pageAccess","post","reminder","reminderAccess","rolledUpFieldValue","space","spaceDescendantsSet","spaceTemplateAccess","task","taskAccess","taskHistory","taskTemplateAccess","template","user","userAccess","userGroup","userHierarchy","view","viewAccess","viewTemplateAccess","whiteboard","whiteboardAccess","widget","workspace","workspaceDescendantsSet"],"description":"`attachment` `attachmentAccess` `approval` `banWorkspace` `checklist` `checklistItem` `checklistTemplateAccess` `comment` `commentsLastReadAt` `customField` `customFieldAccess` `customItem` `dashboard` `dashboardAccess` `doc` `docAccess` `folder` `folderDescendantsSet` `folderTemplateAccess` `form` `formulaValue` `foundationalJob` `goal` `goalAccess` `goalFolder` `goalFolderAccess` `hierarchy` `list` `listDescendantsSet` `listDescendantsPoints` `listDescendantsTimeEstimates` `listTemplateAccess` `notepad` `page` `pageAccess` `post` `reminder` `reminderAccess` `rolledUpFieldValue` `space` `spaceDescendantsSet` `spaceTemplateAccess` `task` `taskAccess` `taskHistory` `taskTemplateAccess` `template` `user` `userAccess` `userGroup` `userHierarchy` `view` `viewAccess` `viewTemplateAccess` `whiteboard` `whiteboardAccess` `widget` `workspace` `workspaceDescendantsSet`"},"root_parent_id":{"type":"string"},"root_parent_type":{"type":"string","enum":["attachment","attachmentAccess","approval","banWorkspace","checklist","checklistItem","checklistTemplateAccess","comment","commentsLastReadAt","customField","customFieldAccess","customItem","dashboard","dashboardAccess","doc","docAccess","folder","folderDescendantsSet","folderTemplateAccess","form","formulaValue","foundationalJob","goal","goalAccess","goalFolder","goalFolderAccess","hierarchy","list","listDescendantsSet","listDescendantsPoints","listDescendantsTimeEstimates","listTemplateAccess","notepad","page","pageAccess","post","reminder","reminderAccess","rolledUpFieldValue","space","spaceDescendantsSet","spaceTemplateAccess","task","taskAccess","taskHistory","taskTemplateAccess","template","user","userAccess","userGroup","userHierarchy","view","viewAccess","viewTemplateAccess","whiteboard","whiteboardAccess","widget","workspace","workspaceDescendantsSet"],"description":"`attachment` `attachmentAccess` `approval` `banWorkspace` `checklist` `checklistItem` `checklistTemplateAccess` `comment` `commentsLastReadAt` `customField` `customFieldAccess` `customItem` `dashboard` `dashboardAccess` `doc` `docAccess` `folder` `folderDescendantsSet` `folderTemplateAccess` `form` `formulaValue` `foundationalJob` `goal` `goalAccess` `goalFolder` `goalFolderAccess` `hierarchy` `list` `listDescendantsSet` `listDescendantsPoints` `listDescendantsTimeEstimates` `listTemplateAccess` `notepad` `page` `pageAccess` `post` `reminder` `reminderAccess` `rolledUpFieldValue` `space` `spaceDescendantsSet` `spaceTemplateAccess` `task` `taskAccess` `taskHistory` `taskTemplateAccess` `template` `user` `userAccess` `userGroup` `userHierarchy` `view` `viewAccess` `viewTemplateAccess` `whiteboard` `whiteboardAccess` `widget` `workspace` `workspaceDescendantsSet`"},"date":{"type":"number","description":"When the user last read comments to this object, set in the past to mark comments as unread. Should be a timestamp in milliseconds."},"_version_vector":{"deprecated":true,"type":"object","required":["object_id","object_type","vector","workspace_id"],"properties":{"object_id":{"type":"string"},"object_type":{"type":"string"},"vector":{"type":"array","items":{"type":"object","required":["master_id","version","deleted"],"properties":{"master_id":{"type":"number"},"version":{"type":"number"},"deleted":{"type":"boolean"}}}},"workspace_id":{"type":"number"}}},"version":{"type":"number","description":"The version of the object when the last read at object was last updated."},"has_unread":{"type":"boolean","description":"Whether the user has unread comments on this object. (Optional)"},"num_unread":{"type":"number","description":"How many unread comments there are on this object. (Optional)"},"latest_comment_at":{"type":"number","description":"The date of the latest comment on this object. (Optional)"},"badge_count":{"type":"number","description":"The badge count for this object. (Optional)"},"thread_count":{"type":"number","description":"The number of unread threads on this object. (Optional)"},"mention_count":{"type":"number","description":"The number of mentions on this object. (Optional)"}}},"chat_room_category":{"type":"string","description":"The category of the Channel, e.g. a welcome channel, (in the future, maybe) a ClickBot channel, etc.\n\n`WELCOME_CHANNEL`","enum":["WELCOME_CHANNEL"]},"links":{"description":"The links to elements of the Channel.","type":"object","required":["members","followers"],"properties":{"members":{"type":"string","description":"The link to the members of the Channel."},"followers":{"type":"string","description":"The link to the followers of the Channel."}}}},"required":["id","name","type","visibility","parent","creator","created_at","updated_at","workspace_id","archived","links"]}},"required":["data"],"$schema":"https://json-schema.org/draft/2020-12/schema"},"404":{"type":"object","properties":{"status":{"type":"integer","description":"The HTTP Status code for the error"},"message":{"type":"string","description":"The message describing the error","examples":["Generic error message"]},"trace_id":{"type":"integer","description":"Unique trace ID for tracking the request. Used for troubleshooting errors","examples":[123456789]},"timestamp":{"type":"integer","description":"The time of the error (Unix epoch milliseconds timestamp).","examples":[1671534256138]}},"required":["status","message","trace_id","timestamp"],"$schema":"https://json-schema.org/draft/2020-12/schema"},"default":{"type":"object","properties":{"status":{"type":"integer","description":"The HTTP Status code for the error"},"message":{"type":"string","description":"The message describing the error","examples":["Generic error message"]},"trace_id":{"type":"integer","description":"Unique trace ID for tracking the request. Used for troubleshooting errors","examples":[123456789]},"timestamp":{"type":"integer","description":"The time of the error (Unix epoch milliseconds timestamp).","examples":[1671534256138]}},"required":["status","message","trace_id","timestamp"],"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetChatChannelFollowers = {"metadata":{"allOf":[{"type":"object","properties":{"workspace_id":{"type":"integer","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of the Workspace."},"channel_id":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of the specified Channel."}},"required":["workspace_id","channel_id"]},{"type":"object","properties":{"cursor":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The cursor to use to fetch the next page of results."},"limit":{"minimum":1,"maximum":100,"default":50,"type":"integer","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The maximum number of results to fetch for this page."}},"required":[]}]},"response":{"200":{"type":"object","required":["next_cursor"],"description":"The list of Channel followers.","properties":{"next_cursor":{"type":"string","description":"The next cursor to use for pagination."},"data":{"type":"array","items":{"type":"object","required":["email","id"],"properties":{"email":{"type":"string","description":"Email of the user."},"id":{"type":"string","description":"ID of the user."},"initials":{"type":"string","description":"Initials of the user."},"name":{"type":"string","description":"Name of the user."},"username":{"type":"string","description":"Userame of the user."}}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"404":{"type":"object","properties":{"status":{"type":"integer","description":"The HTTP Status code for the error"},"message":{"type":"string","description":"The message describing the error","examples":["Generic error message"]},"trace_id":{"type":"integer","description":"Unique trace ID for tracking the request. Used for troubleshooting errors","examples":[123456789]},"timestamp":{"type":"integer","description":"The time of the error (Unix epoch milliseconds timestamp).","examples":[1671534256138]}},"required":["status","message","trace_id","timestamp"],"$schema":"https://json-schema.org/draft/2020-12/schema"},"default":{"type":"object","properties":{"status":{"type":"integer","description":"The HTTP Status code for the error"},"message":{"type":"string","description":"The message describing the error","examples":["Generic error message"]},"trace_id":{"type":"integer","description":"Unique trace ID for tracking the request. Used for troubleshooting errors","examples":[123456789]},"timestamp":{"type":"integer","description":"The time of the error (Unix epoch milliseconds timestamp).","examples":[1671534256138]}},"required":["status","message","trace_id","timestamp"],"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetChatChannelMembers = {"metadata":{"allOf":[{"type":"object","properties":{"workspace_id":{"type":"integer","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of the Workspace."},"channel_id":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of the specified Channel."}},"required":["workspace_id","channel_id"]},{"type":"object","properties":{"cursor":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The cursor to use to fetch the next page of results."},"limit":{"minimum":1,"maximum":100,"default":50,"type":"integer","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The maximum number of results to fetch for this page."}},"required":[]}]},"response":{"200":{"type":"object","required":["next_cursor"],"description":"The list of Channel members.","properties":{"next_cursor":{"type":"string","description":"The next cursor to use for pagination."},"data":{"type":"array","items":{"type":"object","required":["email","id"],"properties":{"email":{"type":"string","description":"Email of the user."},"id":{"type":"string","description":"ID of the user."},"initials":{"type":"string","description":"Initials of the user."},"name":{"type":"string","description":"Name of the user."},"username":{"type":"string","description":"Userame of the user."}}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"default":{"type":"object","properties":{"status":{"type":"integer","description":"The HTTP Status code for the error"},"message":{"type":"string","description":"The message describing the error","examples":["Generic error message"]},"trace_id":{"type":"integer","description":"Unique trace ID for tracking the request. Used for troubleshooting errors","examples":[123456789]},"timestamp":{"type":"integer","description":"The time of the error (Unix epoch milliseconds timestamp).","examples":[1671534256138]}},"required":["status","message","trace_id","timestamp"],"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetChatChannels = {"metadata":{"allOf":[{"type":"object","properties":{"workspace_id":{"type":"integer","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of the Workspace."}},"required":["workspace_id"]},{"type":"object","properties":{"description_format":{"type":"string","enum":["text/md","text/plain"],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Format of the Channel Description (Default: text/md)"},"cursor":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Used to request the next or previous page of results"},"limit":{"minimum":1,"maximum":100,"default":50,"type":"integer","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The maximum number of results to fetch for this page."},"is_follower":{"default":false,"type":"boolean","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Only return Channels the user is following"},"include_hidden":{"default":false,"type":"boolean","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Include DMs/Group DMs that have been explicitly closed."},"with_comment_since":{"type":"number","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Only return Channels with comments since the given timestamp"},"room_types":{"type":"array","items":{"type":"string","enum":["CHANNEL","DM","GROUP_DM"]},"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Type of Channel (Channel, DM, Group DM) to return"}},"required":[]}]},"response":{"200":{"type":"object","required":["next_cursor"],"description":"The list of Channels.","properties":{"next_cursor":{"type":"string","description":"The next cursor to use for pagination."},"data":{"type":"array","items":{"type":"object","required":["id","name","type","visibility","parent","creator","created_at","updated_at","workspace_id","archived","links"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"description":{"type":"string","description":"The full Description of the Channel.","format":"RichText"},"topic":{"type":"string"},"type":{"type":"string","description":"The type of the Channel\n\n`CHANNEL` `DM` `GROUP_DM`","enum":["CHANNEL","DM","GROUP_DM"]},"visibility":{"type":"string","description":"The visibility of the Channel\n\n`PUBLIC` `PRIVATE`","enum":["PUBLIC","PRIVATE"]},"parent":{"description":"Parent information","type":"object","required":["id","type"],"properties":{"id":{"type":"string"},"type":{"type":"number"}}},"creator":{"type":"string","description":"ID of the user who created this Channel"},"created_at":{"type":"string","description":"Timestamp of when this Channel was created"},"updated_at":{"type":"string","description":"Timestamp of the last update in this Channel - Deprecated in favor of latest_comment_at","deprecated":true},"workspace_id":{"type":"string","description":"Workspace ID of the Channel"},"archived":{"type":"boolean"},"latest_comment_at":{"type":"string","description":"Timestamp of the last comment in this Channel. Optional in the case of a new Channel with no comments yet"},"is_canonical_channel":{"type":"boolean","description":"Is this the canonical channel for the parent location?"},"is_hidden":{"type":"boolean","description":"Has the user hidden this Channel from their sidebar? Currently only an option for DM/Group DM."},"default_view":{"description":"Data about the default view that the Channel should open in","type":"object","required":["type","view_id","standard"],"properties":{"type":{"type":"number"},"view_id":{"type":"string"},"standard":{"type":"boolean"}}},"channel_type":{"type":"number","description":"Type of channel (chat, project, etc.) aka subcategory_type\n\n`1` `2` `3`","enum":[1,2,3]},"counts":{"description":"Counts relevant to the user requesting the Channel","type":"object","required":["parent_id","parent_type","root_parent_id","root_parent_type","date","_version_vector"],"properties":{"parent_id":{"type":"string"},"parent_type":{"type":"string","enum":["attachment","attachmentAccess","approval","banWorkspace","checklist","checklistItem","checklistTemplateAccess","comment","commentsLastReadAt","customField","customFieldAccess","customItem","dashboard","dashboardAccess","doc","docAccess","folder","folderDescendantsSet","folderTemplateAccess","form","formulaValue","foundationalJob","goal","goalAccess","goalFolder","goalFolderAccess","hierarchy","list","listDescendantsSet","listDescendantsPoints","listDescendantsTimeEstimates","listTemplateAccess","notepad","page","pageAccess","post","reminder","reminderAccess","rolledUpFieldValue","space","spaceDescendantsSet","spaceTemplateAccess","task","taskAccess","taskHistory","taskTemplateAccess","template","user","userAccess","userGroup","userHierarchy","view","viewAccess","viewTemplateAccess","whiteboard","whiteboardAccess","widget","workspace","workspaceDescendantsSet"],"description":"`attachment` `attachmentAccess` `approval` `banWorkspace` `checklist` `checklistItem` `checklistTemplateAccess` `comment` `commentsLastReadAt` `customField` `customFieldAccess` `customItem` `dashboard` `dashboardAccess` `doc` `docAccess` `folder` `folderDescendantsSet` `folderTemplateAccess` `form` `formulaValue` `foundationalJob` `goal` `goalAccess` `goalFolder` `goalFolderAccess` `hierarchy` `list` `listDescendantsSet` `listDescendantsPoints` `listDescendantsTimeEstimates` `listTemplateAccess` `notepad` `page` `pageAccess` `post` `reminder` `reminderAccess` `rolledUpFieldValue` `space` `spaceDescendantsSet` `spaceTemplateAccess` `task` `taskAccess` `taskHistory` `taskTemplateAccess` `template` `user` `userAccess` `userGroup` `userHierarchy` `view` `viewAccess` `viewTemplateAccess` `whiteboard` `whiteboardAccess` `widget` `workspace` `workspaceDescendantsSet`"},"root_parent_id":{"type":"string"},"root_parent_type":{"type":"string","enum":["attachment","attachmentAccess","approval","banWorkspace","checklist","checklistItem","checklistTemplateAccess","comment","commentsLastReadAt","customField","customFieldAccess","customItem","dashboard","dashboardAccess","doc","docAccess","folder","folderDescendantsSet","folderTemplateAccess","form","formulaValue","foundationalJob","goal","goalAccess","goalFolder","goalFolderAccess","hierarchy","list","listDescendantsSet","listDescendantsPoints","listDescendantsTimeEstimates","listTemplateAccess","notepad","page","pageAccess","post","reminder","reminderAccess","rolledUpFieldValue","space","spaceDescendantsSet","spaceTemplateAccess","task","taskAccess","taskHistory","taskTemplateAccess","template","user","userAccess","userGroup","userHierarchy","view","viewAccess","viewTemplateAccess","whiteboard","whiteboardAccess","widget","workspace","workspaceDescendantsSet"],"description":"`attachment` `attachmentAccess` `approval` `banWorkspace` `checklist` `checklistItem` `checklistTemplateAccess` `comment` `commentsLastReadAt` `customField` `customFieldAccess` `customItem` `dashboard` `dashboardAccess` `doc` `docAccess` `folder` `folderDescendantsSet` `folderTemplateAccess` `form` `formulaValue` `foundationalJob` `goal` `goalAccess` `goalFolder` `goalFolderAccess` `hierarchy` `list` `listDescendantsSet` `listDescendantsPoints` `listDescendantsTimeEstimates` `listTemplateAccess` `notepad` `page` `pageAccess` `post` `reminder` `reminderAccess` `rolledUpFieldValue` `space` `spaceDescendantsSet` `spaceTemplateAccess` `task` `taskAccess` `taskHistory` `taskTemplateAccess` `template` `user` `userAccess` `userGroup` `userHierarchy` `view` `viewAccess` `viewTemplateAccess` `whiteboard` `whiteboardAccess` `widget` `workspace` `workspaceDescendantsSet`"},"date":{"type":"number","description":"When the user last read comments to this object, set in the past to mark comments as unread. Should be a timestamp in milliseconds."},"_version_vector":{"deprecated":true,"type":"object","required":["object_id","object_type","vector","workspace_id"],"properties":{"object_id":{"type":"string"},"object_type":{"type":"string"},"vector":{"type":"array","items":{"type":"object","required":["master_id","version","deleted"],"properties":{"master_id":{"type":"number"},"version":{"type":"number"},"deleted":{"type":"boolean"}}}},"workspace_id":{"type":"number"}}},"version":{"type":"number","description":"The version of the object when the last read at object was last updated."},"has_unread":{"type":"boolean","description":"Whether the user has unread comments on this object. (Optional)"},"num_unread":{"type":"number","description":"How many unread comments there are on this object. (Optional)"},"latest_comment_at":{"type":"number","description":"The date of the latest comment on this object. (Optional)"},"badge_count":{"type":"number","description":"The badge count for this object. (Optional)"},"thread_count":{"type":"number","description":"The number of unread threads on this object. (Optional)"},"mention_count":{"type":"number","description":"The number of mentions on this object. (Optional)"}}},"chat_room_category":{"type":"string","description":"The category of the Channel, e.g. a welcome channel, (in the future, maybe) a ClickBot channel, etc.\n\n`WELCOME_CHANNEL`","enum":["WELCOME_CHANNEL"]},"links":{"description":"The links to elements of the Channel.","type":"object","required":["members","followers"],"properties":{"members":{"type":"string","description":"The link to the members of the Channel."},"followers":{"type":"string","description":"The link to the followers of the Channel."}}}}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"default":{"type":"object","properties":{"status":{"type":"integer","description":"The HTTP Status code for the error"},"message":{"type":"string","description":"The message describing the error","examples":["Generic error message"]},"trace_id":{"type":"integer","description":"Unique trace ID for tracking the request. Used for troubleshooting errors","examples":[123456789]},"timestamp":{"type":"integer","description":"The time of the error (Unix epoch milliseconds timestamp).","examples":[1671534256138]}},"required":["status","message","trace_id","timestamp"],"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetChatMessageReactions = {"metadata":{"allOf":[{"type":"object","properties":{"workspace_id":{"type":"integer","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of the Workspace."},"message_id":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of the specified message"}},"required":["workspace_id","message_id"]},{"type":"object","properties":{"cursor":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The cursor to use to fetch the next page of results."},"limit":{"minimum":1,"maximum":100,"default":50,"type":"integer","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The maximum number of results to fetch for this page."}},"required":[]}]},"response":{"200":{"type":"object","required":["next_cursor"],"description":"The list of message reactions.","properties":{"next_cursor":{"type":"string","description":"The next cursor to use for pagination."},"data":{"type":"array","items":{"type":"object","required":["date","reaction","user_id"],"properties":{"date":{"type":"number","description":"The date & time the reaction was created (Unix epoch milliseconds timestamp)."},"reaction":{"type":"string","description":"The reaction to the message."},"user_id":{"type":"string","description":"The ID of the user who created the reaction."}}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"404":{"type":"object","properties":{"status":{"type":"integer","description":"The HTTP Status code for the error"},"message":{"type":"string","description":"The message describing the error","examples":["Generic error message"]},"trace_id":{"type":"integer","description":"Unique trace ID for tracking the request. Used for troubleshooting errors","examples":[123456789]},"timestamp":{"type":"integer","description":"The time of the error (Unix epoch milliseconds timestamp).","examples":[1671534256138]}},"required":["status","message","trace_id","timestamp"],"$schema":"https://json-schema.org/draft/2020-12/schema"},"default":{"type":"object","properties":{"status":{"type":"integer","description":"The HTTP Status code for the error"},"message":{"type":"string","description":"The message describing the error","examples":["Generic error message"]},"trace_id":{"type":"integer","description":"Unique trace ID for tracking the request. Used for troubleshooting errors","examples":[123456789]},"timestamp":{"type":"integer","description":"The time of the error (Unix epoch milliseconds timestamp).","examples":[1671534256138]}},"required":["status","message","trace_id","timestamp"],"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetChatMessageReplies = {"metadata":{"allOf":[{"type":"object","properties":{"workspace_id":{"type":"integer","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of the Workspace."},"message_id":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of the specified message"}},"required":["workspace_id","message_id"]},{"type":"object","properties":{"cursor":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The cursor to use to fetch the next page of results."},"limit":{"minimum":1,"maximum":100,"default":50,"type":"integer","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The maximum number of results to fetch for this page."},"content_format":{"default":"text/md","enum":["text/md","text/plain"],"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Format of the message content (Default: text/md)"}},"required":[]}]},"response":{"200":{"type":"object","required":["next_cursor"],"description":"The list of replies to a message, most recent first.","properties":{"next_cursor":{"type":"string","description":"The next cursor to use for pagination."},"data":{"type":"array","items":{"type":"object","required":["content","date","id","parent_channel","parent_message","resolved","type","user_id","links"],"properties":{"assignee":{"type":"string","description":"The possible assignee of the message."},"assigned_by":{"type":"string","description":"The user who assigned the message."},"content":{"type":"string","description":"The full content of the message.","format":"RichText"},"date":{"type":"number","description":"The date & time the message was created (Unix epoch milliseconds timestamp)."},"date_assigned":{"type":"number","description":"The date & time the message was assigned (Unix epoch milliseconds timestamp)."},"date_resolved":{"type":"number","description":"The date & time the message was resolved (Unix epoch milliseconds timestamp)."},"date_updated":{"type":"number","description":"The date & time the message was updated (Unix epoch milliseconds timestamp)."},"group_assignee":{"type":"string","description":"The possible group assignee of the message."},"id":{"type":"string","description":"The ID of the message."},"parent_channel":{"type":"string","description":"The ID of the chat this message belongs to."},"parent_message":{"type":"string","description":"The ID of the message this message is a reply to."},"post_data":{"description":"The data of the post message.","type":"object","required":["subtype","title"],"properties":{"subtype":{"description":"The subtype of the Chat Post.","type":"object","required":["id","name"],"properties":{"id":{"type":"string","description":"The subtype ID of the Chat Post."},"name":{"type":"string","description":"The subtype name of the Chat Post."}}},"title":{"type":"string","description":"The title of the Chat Post.","maxLength":255}}},"resolved":{"type":"boolean","description":"The resolved status of the message."},"resolved_by":{"type":"string","description":"The user who resolved the message."},"triaged_action":{"type":"number","description":"The triaged action applied to the message.\n\n`1` `2`","enum":[1,2]},"triaged_object_id":{"type":"string","description":"The message triaged action object id."},"triaged_object_type":{"type":"number","description":"The message triaged action object type."},"type":{"type":"string","description":"The type of message.\n\n`message` `post`","enum":["message","post"]},"user_id":{"type":"string","description":"The ID of the user who created the message."},"links":{"description":"The links to elements of the message.","type":"object","required":["reactions","tagged_users"],"properties":{"reactions":{"type":"string","description":"The link to the reactions of this message."},"tagged_users":{"type":"string","description":"The link to the tagged users of this message."}}}}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"404":{"type":"object","properties":{"status":{"type":"integer","description":"The HTTP Status code for the error"},"message":{"type":"string","description":"The message describing the error","examples":["Generic error message"]},"trace_id":{"type":"integer","description":"Unique trace ID for tracking the request. Used for troubleshooting errors","examples":[123456789]},"timestamp":{"type":"integer","description":"The time of the error (Unix epoch milliseconds timestamp).","examples":[1671534256138]}},"required":["status","message","trace_id","timestamp"],"$schema":"https://json-schema.org/draft/2020-12/schema"},"default":{"type":"object","properties":{"status":{"type":"integer","description":"The HTTP Status code for the error"},"message":{"type":"string","description":"The message describing the error","examples":["Generic error message"]},"trace_id":{"type":"integer","description":"Unique trace ID for tracking the request. Used for troubleshooting errors","examples":[123456789]},"timestamp":{"type":"integer","description":"The time of the error (Unix epoch milliseconds timestamp).","examples":[1671534256138]}},"required":["status","message","trace_id","timestamp"],"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetChatMessageTaggedUsers = {"metadata":{"allOf":[{"type":"object","properties":{"workspace_id":{"type":"integer","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of the Workspace."},"message_id":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of the specified message"}},"required":["workspace_id","message_id"]},{"type":"object","properties":{"cursor":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The cursor to use to fetch the next page of results."},"limit":{"minimum":1,"maximum":100,"default":50,"type":"integer","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The maximum number of results to fetch for this page."}},"required":[]}]},"response":{"200":{"type":"object","required":["next_cursor"],"description":"The list of message tagged users.","properties":{"next_cursor":{"type":"string","description":"The next cursor to use for pagination."},"data":{"type":"array","items":{"type":"object","required":["email","id"],"properties":{"email":{"type":"string","description":"Email of the user."},"id":{"type":"string","description":"ID of the user."},"initials":{"type":"string","description":"Initials of the user."},"name":{"type":"string","description":"Name of the user."},"username":{"type":"string","description":"Userame of the user."}}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"404":{"type":"object","properties":{"status":{"type":"integer","description":"The HTTP Status code for the error"},"message":{"type":"string","description":"The message describing the error","examples":["Generic error message"]},"trace_id":{"type":"integer","description":"Unique trace ID for tracking the request. Used for troubleshooting errors","examples":[123456789]},"timestamp":{"type":"integer","description":"The time of the error (Unix epoch milliseconds timestamp).","examples":[1671534256138]}},"required":["status","message","trace_id","timestamp"],"$schema":"https://json-schema.org/draft/2020-12/schema"},"default":{"type":"object","properties":{"status":{"type":"integer","description":"The HTTP Status code for the error"},"message":{"type":"string","description":"The message describing the error","examples":["Generic error message"]},"trace_id":{"type":"integer","description":"Unique trace ID for tracking the request. Used for troubleshooting errors","examples":[123456789]},"timestamp":{"type":"integer","description":"The time of the error (Unix epoch milliseconds timestamp).","examples":[1671534256138]}},"required":["status","message","trace_id","timestamp"],"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetChatMessages = {"metadata":{"allOf":[{"type":"object","properties":{"workspace_id":{"type":"integer","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of the Workspace."},"channel_id":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of the Channel where the messages live."}},"required":["workspace_id","channel_id"]},{"type":"object","properties":{"cursor":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The cursor to use to fetch the next page of results."},"limit":{"minimum":1,"maximum":100,"default":50,"type":"integer","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The maximum number of results to fetch for this page."},"content_format":{"default":"text/md","enum":["text/md","text/plain"],"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Format of the message content (Default: text/md)"}},"required":[]}]},"response":{"200":{"type":"object","required":["next_cursor"],"description":"The list of top level messages in the Channel, most recent first.","properties":{"next_cursor":{"type":"string","description":"The next cursor to use for pagination."},"data":{"type":"array","items":{"type":"object","required":["content","date","id","parent_channel","resolved","type","user_id","links","replies_count"],"properties":{"assignee":{"type":"string","description":"The possible assignee of the message."},"assigned_by":{"type":"string","description":"The user who assigned the message."},"content":{"type":"string","description":"The full content of the message.","format":"RichText"},"date":{"type":"number","description":"The date & time the message was created (Unix epoch milliseconds timestamp)."},"date_assigned":{"type":"number","description":"The date & time the message was assigned (Unix epoch milliseconds timestamp)."},"date_resolved":{"type":"number","description":"The date & time the message was resolved (Unix epoch milliseconds timestamp)."},"date_updated":{"type":"number","description":"The date & time the message was updated (Unix epoch milliseconds timestamp)."},"group_assignee":{"type":"string","description":"The possible group assignee of the message."},"id":{"type":"string","description":"The ID of the message."},"parent_channel":{"type":"string","description":"The ID of the Channel this message belongs to."},"parent_message":{"type":"string","description":"The ID of the message this message is a reply to."},"post_data":{"description":"The data of the post message.","type":"object","required":["subtype","title"],"properties":{"subtype":{"description":"The subtype of the Chat Post.","type":"object","required":["id","name"],"properties":{"id":{"type":"string","description":"The subtype ID of the Chat Post."},"name":{"type":"string","description":"The subtype name of the Chat Post."}}},"title":{"type":"string","description":"The title of the Chat Post.","maxLength":255}}},"resolved":{"type":"boolean","description":"The resolved status of the message."},"resolved_by":{"type":"string","description":"The user who resolved the message."},"triaged_action":{"type":"number","description":"The triaged action applied to the message.\n\n`1` `2`","enum":[1,2]},"triaged_object_id":{"type":"string","description":"The message triaged action object id."},"triaged_object_type":{"type":"number","description":"The message triaged action object type."},"type":{"type":"string","description":"The type of message.\n\n`message` `post`","enum":["message","post"]},"user_id":{"type":"string","description":"The ID of the user who created the message."},"links":{"description":"The links to elements of the message.","type":"object","required":["reactions","replies","tagged_users"],"properties":{"reactions":{"type":"string","description":"The link to the reactions of this message."},"replies":{"type":"string","description":"The link to the replies of this message."},"tagged_users":{"type":"string","description":"The link to the tagged users of this message."}}},"replies_count":{"type":"number","description":"The number of replies to the message."}}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"404":{"type":"object","properties":{"status":{"type":"integer","description":"The HTTP Status code for the error"},"message":{"type":"string","description":"The message describing the error","examples":["Generic error message"]},"trace_id":{"type":"integer","description":"Unique trace ID for tracking the request. Used for troubleshooting errors","examples":[123456789]},"timestamp":{"type":"integer","description":"The time of the error (Unix epoch milliseconds timestamp).","examples":[1671534256138]}},"required":["status","message","trace_id","timestamp"],"$schema":"https://json-schema.org/draft/2020-12/schema"},"default":{"type":"object","properties":{"status":{"type":"integer","description":"The HTTP Status code for the error"},"message":{"type":"string","description":"The message describing the error","examples":["Generic error message"]},"trace_id":{"type":"integer","description":"Unique trace ID for tracking the request. Used for troubleshooting errors","examples":[123456789]},"timestamp":{"type":"integer","description":"The time of the error (Unix epoch milliseconds timestamp).","examples":[1671534256138]}},"required":["status","message","trace_id","timestamp"],"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetChatViewComments = {"metadata":{"allOf":[{"type":"object","properties":{"view_id":{"type":"string","examples":["3c"],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"105 (string)"}},"required":["view_id"]},{"type":"object","properties":{"start":{"type":"integer","contentEncoding":"int32","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Enter the `date` of a Chat view comment using Unix time in milliseconds."},"start_id":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Enter the Comment `id` of a Chat view comment."}},"required":[]}]},"response":{"200":{"title":"GetChatViewCommentsresponse","required":["comments"],"type":"object","properties":{"comments":{"type":"array","items":{"title":"Comment2","required":["id","comment","comment_text","user","resolved","assignee","assigned_by","reactions","date"],"type":"object","properties":{"id":{"type":"string"},"comment":{"type":"array","items":{"title":"Comment1","required":["text"],"type":"object","properties":{"text":{"type":"string"}}},"description":""},"comment_text":{"type":"string"},"user":{"title":"User2","required":["id","username","initials","email","color","profilePicture"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"initials":{"type":"string"},"email":{"type":"string"},"color":{"type":"string"},"profilePicture":{"type":"string"}}},"resolved":{"type":"boolean"},"assignee":{"type":["string","null"]},"assigned_by":{"type":["string","null"]},"reactions":{"type":"array","items":{"type":"string"},"description":""},"date":{"type":"string"},"reply_count":{"type":"string"}}},"description":""}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetCustomItems = {"metadata":{"allOf":[{"type":"object","properties":{"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Workspace ID"}},"required":["team_id"]}]},"response":{"200":{"title":"GetCustomItemsResponse","type":"object","properties":{"custom_items":{"type":"array","items":{"title":"Custom Item","type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32","description":"Custom task type ID."},"name":{"type":"string","description":"Custom task type name."},"name_plural":{"type":"string","description":"Custom task type plural name."},"description":{"type":"string","description":"Custom task type description."}}},"description":"Array of custom task types."}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetCustomRoles = {"metadata":{"allOf":[{"type":"object","properties":{"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Workspace ID"}},"required":["team_id"]},{"type":"object","properties":{"include_members":{"type":"boolean","examples":[true],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":[]}]},"response":{"200":{"title":"GetCustomRolesresponse","required":["custom_roles"],"type":"object","properties":{"custom_roles":{"type":"array","items":{"title":"CustomRole2","required":["id","team_id","name","inherited_role","date_created","members"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"team_id":{"type":"string"},"name":{"type":"string"},"inherited_role":{"type":"integer","contentEncoding":"int32"},"date_created":{"type":"string"},"members":{"type":"array","items":{"type":"integer","contentEncoding":"int32"},"description":""}}},"description":""}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetDoc = {"metadata":{"allOf":[{"type":"object","properties":{"workspaceId":{"type":"number","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of the Workspace."},"docId":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of the Doc."}},"required":["workspaceId","docId"]}]},"response":{"200":{"type":"object","properties":{"id":{"type":"string"},"date_created":{"type":"number"},"date_updated":{"type":"number"},"name":{"type":"string"},"type":{"type":"number","enum":[]},"parent":{"type":"object","properties":{"id":{"type":"string"},"type":{"type":"number","description":"The parent Doc type. Use `4` for Space, `5` for Folder, `6` for List, `7` for Everything, and `12` for Workspace."}},"required":["id","type"]},"public":{"type":"boolean"},"workspace_id":{"type":"number"},"archived":{"type":"boolean"},"archived_by":{"type":"number"},"creator":{"type":"number"},"date_archived":{"type":"number"},"date_deleted":{"type":"number"},"deleted":{"type":"boolean"},"deleted_by":{"type":"number"},"page_defaults":{"type":"object","properties":{"font":{"type":"string"},"font_size":{"type":"number"},"line_height":{"type":"number"},"page_width":{"type":"number"},"paragraph_spacing":{"type":"number"},"show_author_header":{"type":"boolean"},"show_contributor_header":{"type":"boolean"},"show_cover_header":{"type":"boolean"},"show_date_header":{"type":"boolean"},"show_page_outline":{"type":"boolean"},"show_sub_pages":{"type":"boolean"},"sub_page_size":{"type":"string"},"show_sub_title_header":{"type":"boolean"},"show_title_icon_header":{"type":"boolean"},"show_relationships":{"type":"boolean"},"show_relationships_compact":{"type":"boolean"},"show_sub_pages_author":{"type":"boolean"},"show_sub_pages_thumbnail":{"type":"boolean"},"show_sub_pages_compact":{"type":"boolean"},"sub_pages_style":{"type":"string"}}}},"required":["id","date_created","name","type","parent","public","workspace_id","creator"],"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetDocPageListing = {"metadata":{"allOf":[{"type":"object","properties":{"workspaceId":{"type":"number","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of the Workspace."},"docId":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of the Doc."}},"required":["workspaceId","docId"]},{"type":"object","properties":{"max_page_depth":{"default":"-1","type":"number","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The maximum depth to retrieve pages and subpages. A value less than 0 does not limit the depth."}},"required":[]}]},"response":{"200":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string"},"doc_id":{"type":"string"},"parent_page_id":{"type":"string"},"workspace_id":{"type":"number"},"name":{"type":"string"},"pages":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string"},"doc_id":{"type":"string"},"name":{"type":"string"},"pages":{"description":"More nested documents witht the same object structure.","type":"array","items":{}}}}}},"required":["id","doc_id","workspace_id","name"]},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetDocPages = {"metadata":{"allOf":[{"type":"object","properties":{"workspaceId":{"type":"number","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of the Workspace."},"docId":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of the Doc."}},"required":["workspaceId","docId"]},{"type":"object","properties":{"max_page_depth":{"default":"-1","type":"number","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The maximum depth to retrieve pages and subpages. A value less than 0 does not limit the depth."},"content_format":{"default":"text/md","type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The format to return the page content in. For example, `text/md` for markdown or `text/plain` for plain."}},"required":[]}]},"response":{"200":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string"},"doc_id":{"type":"string"},"parent_page_id":{"type":"string"},"workspace_id":{"type":"number"},"name":{"type":"string"},"pages":{"type":"array","description":"More nested documents with the same object structure.","items":{}},"sub_title":{"type":"string"},"date_created":{"type":"number"},"date_updated":{"type":"number"},"content":{"type":"string"},"avatar":{"type":"object","properties":{"color":{"type":"string"},"value":{"type":"string"},"source":{"type":"string"}}},"creator_id":{"type":"number"},"deleted":{"type":"boolean"},"deleted_by":{"type":"number"},"date_deleted":{"type":"number"},"date_edited":{"type":"number"},"edited_by":{"type":"number"},"archived":{"type":"boolean"},"archived_by":{"type":"number"},"date_archived":{"type":"number"},"authors":{"type":"array","items":{"type":"number"}},"contributors":{"type":"array","items":{"type":"number"}},"cover":{"type":"object","properties":{"color":{"type":"string"},"image_url":{"type":"string"},"position":{"type":"object","properties":{"x":{"type":"number"},"y":{"type":"number"}},"required":["x","y"]}}},"protected":{"type":"boolean"},"protected_by":{"type":"number"},"protected_note":{"type":"string"},"presentation_details":{"type":"object","properties":{"font":{"type":"string"},"font_size":{"type":"number"},"line_height":{"type":"number"},"page_width":{"type":"number"},"paragraph_spacing":{"type":"number"},"show_author_header":{"type":"boolean"},"show_contributor_header":{"type":"boolean"},"show_cover_header":{"type":"boolean"},"show_date_header":{"type":"boolean"},"show_page_outline":{"type":"boolean"},"show_sub_pages":{"type":"boolean"},"sub_page_size":{"type":"string"},"show_sub_title_header":{"type":"boolean"},"show_title_icon_header":{"type":"boolean"},"show_relationships":{"type":"boolean"},"show_relationships_compact":{"type":"boolean"},"show_sub_pages_author":{"type":"boolean"},"show_sub_pages_thumbnail":{"type":"boolean"},"show_sub_pages_compact":{"type":"boolean"},"sub_pages_style":{"type":"string"}}}},"required":["id","doc_id","workspace_id","name","date_created","content","creator_id","authors"]},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetFilteredTeamTasks = {"metadata":{"allOf":[{"type":"object","properties":{"team_Id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Workspace ID"}},"required":["team_Id"]},{"type":"object","properties":{"page":{"type":"integer","contentEncoding":"int32","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Page to fetch (starts at 0)."},"order_by":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Order by a particular field. By default, tasks are ordered by `created`.\\\n \\\nOptions include: `id`, `created`, `updated`, and `due_date`."},"reverse":{"type":"boolean","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Tasks are displayed in reverse order."},"subtasks":{"type":"boolean","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Include or exclude subtasks. By default, subtasks are excluded."},"space_ids":{"type":"array","items":{"type":"string"},"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Filter by Spaces. For example: \\\n \\\n`?space_ids[]=1234&space_ids[]=6789`"},"project_ids":{"type":"array","items":{"type":"string"},"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Filter by Folders. For example: \\\n \\\n`?project_ids[]=1234&project_ids[]=6789`"},"list_ids[]":{"type":"array","items":{"type":"string"},"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Filter by Lists. For example: \\\n \\\n`?list_ids[]=1234&list_ids[]=6789` "},"statuses":{"type":"array","items":{"type":"string"},"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Filter by statuses. Use `%20` to represent a space character. To include closed tasks, use the `include_closed` parameter. \\\n \\\nFor example: \\\n \\\n`?statuses[]=to%20do&statuses[]=in%20progress`"},"include_closed":{"type":"boolean","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Include or excluse closed tasks. By default, they are excluded.\\\n \\\nTo include closed tasks, use `include_closed: true`."},"assignees":{"type":"array","items":{"type":"string"},"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Filter by Assignees using people's ClickUp user id. For example: \\\n \\\n`?assignees[]=1234&assignees[]=5678`"},"tags":{"type":"array","items":{"type":"string"},"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Filter by tags. User `%20` to represent a space character. For example: \\\n \\\n`?tags[]=tag1&tags[]=this%20tag`"},"due_date_gt":{"type":"integer","contentEncoding":"int64","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Filter by due date greater than Unix time in milliseconds."},"due_date_lt":{"type":"integer","contentEncoding":"int64","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Filter by due date less than Unix time in milliseconds."},"date_created_gt":{"type":"integer","contentEncoding":"int64","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Filter by date created greater than Unix time in milliseconds."},"date_created_lt":{"type":"integer","contentEncoding":"int64","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Filter by date created less than Unix time in milliseconds."},"date_updated_gt":{"type":"integer","contentEncoding":"int64","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Filter by date updated greater than Unix time in milliseconds."},"date_updated_lt":{"type":"integer","contentEncoding":"int64","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Filter by date updated less than Unix time in milliseconds."},"date_done_gt":{"type":"integer","contentEncoding":"int64","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Filter by date done greater than Unix time in milliseconds."},"date_done_lt":{"type":"integer","contentEncoding":"int64","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Filter by date done less than Unix time in milliseconds."},"custom_fields":{"type":"array","items":{"type":"string"},"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Include tasks with specific values in one or more Custom Fields. Custom Relationships are included.\\\n \\\nFor example: `?custom_fields=[{\"field_id\":\"abcdefghi12345678\",\"operator\":\"=\",\"value\":\"1234\"}{\"field_id\":\"jklmnop123456\",\"operator\":\"<\",\"value\":\"5\"}]`\\\n \\\nOnly set Custom Field values display in the `value` property of the `custom_fields` parameter. The `=` operator isn't supported with Label Custom Fields.\\\n \\\nLearn more about [filtering using Custom Fields.](https://help.clickup.com/hc/en-us/articles/12665650881943-Search-sort-and-filter-tasks-by-Custom-Fields)"},"custom_task_ids":{"type":"boolean","examples":[true],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"If you want to reference a task by its custom task id, this value must be `true`."},"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."},"parent":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Include the parent task ID to return subtasks."},"include_markdown_description":{"type":"boolean","examples":[true],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"To return task descriptions in Markdown format, use `?include_markdown_description=true`."},"custom_items":{"type":"array","items":{"type":"number"},"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Filter by custom task types. For example: \\\n \\\n`?custom_items[]=0&custom_items[]=1300` \\\n \\\nIncluding `0` returns tasks. Including `1` returns Milestones. Including any other number returns the custom task type as defined in your Workspace."}},"required":[]}]},"response":{"200":{"title":"GetFilteredTeamTasksresponse","required":["tasks"],"type":"object","properties":{"tasks":{"type":"array","items":{"title":"Task3","required":["id","custom_id","name","text_content","description","status","orderindex","date_created","date_updated","date_closed","date_done","creator","assignees","watchers","checklists","tags","parent","priority","due_date","start_date","points","time_estimate","custom_fields","dependencies","linked_tasks","team_id","url","permission_level","list","project","folder","space"],"type":"object","properties":{"id":{"type":"string"},"custom_id":{"type":["string","null"]},"name":{"type":"string"},"text_content":{"type":"string"},"description":{"type":"string"},"markdown_description":{"type":"string"},"status":{"title":"Status","required":["status","color","orderindex","type"],"type":"object","properties":{"status":{"type":"string"},"color":{"type":"string"},"orderindex":{"type":"integer","contentEncoding":"int32"},"type":{"type":"string"}}},"orderindex":{"type":"string"},"date_created":{"type":"string"},"date_updated":{"type":"string"},"date_closed":{"type":"string"},"date_done":{"type":["string","null"]},"creator":{"title":"Creator5","required":["id","username","color","email","profilePicture"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"color":{"type":"string"},"email":{"type":"string"},"profilePicture":{"type":"string"}}},"assignees":{"type":"array","items":{"title":"Assignees1","required":["id","username","color","email","profilePicture"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"color":{"type":"string"},"email":{"type":"string"},"profilePicture":{"type":"string"}}},"description":""},"watchers":{"type":"array","items":{"title":"Watchers1","required":["id","username","color","email","profilePicture"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"color":{"type":"string"},"email":{"type":"string"},"profilePicture":{"type":"string"}}},"description":""},"checklists":{"type":"array","items":{"title":"Checklists6","required":["id","task_id","name","date_created","orderindex","creator","resolved","unresolved","items"],"type":"object","properties":{"id":{"type":"string"},"task_id":{"type":"string"},"name":{"type":"string"},"date_created":{"type":"string"},"orderindex":{"type":"integer","contentEncoding":"int32"},"creator":{"type":"integer","contentEncoding":"int32"},"resolved":{"type":"integer","contentEncoding":"int32"},"unresolved":{"type":"integer","contentEncoding":"int32"},"items":{"type":"array","items":{"title":"Item1","required":["id","name","orderindex","assignee","resolved","parent","date_created","children"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"orderindex":{"type":"integer","contentEncoding":"int32"},"assignee":{"type":["string","null"]},"resolved":{"type":"boolean"},"parent":{"type":["string","null"]},"date_created":{"type":"string"},"children":{"type":"array","items":{"type":"string"},"description":""}}},"description":""}}},"description":""},"tags":{"type":"array","items":{"title":"Tags6","required":["name","tag_fg","tag_bg"],"type":"object","properties":{"name":{"type":"string"},"tag_fg":{"type":"string"},"tag_bg":{"type":"string"}}},"description":""},"parent":{"type":"string"},"priority":{"type":"integer","contentEncoding":"int32"},"due_date":{"type":"string"},"start_date":{"type":"string"},"points":{"type":"number"},"time_estimate":{"type":"number"},"custom_fields":{"type":"array","items":{"title":"CustomFields9","required":["id","name","type","type_config","date_created","hide_from_guests","required"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string"},"type_config":{"type":"object","additionalProperties":true},"date_created":{"type":"string"},"hide_from_guests":{"type":"boolean"},"required":{"type":"boolean"}}},"description":""},"dependencies":{"type":"array","items":{"type":"string"},"description":""},"linked_tasks":{"type":"array","items":{"type":"string"},"description":""},"team_id":{"type":"string"},"url":{"type":"string"},"permission_level":{"type":"string"},"list":{"title":"List2","required":["id","name","access"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"access":{"type":"boolean"}}},"project":{"title":"Project","required":["id","name","hidden","access"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"hidden":{"type":"boolean"},"access":{"type":"boolean"}}},"folder":{"title":"Folder3","required":["id","name","hidden","access"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"hidden":{"type":"boolean"},"access":{"type":"boolean"}}},"space":{"title":"Space","required":["id"],"type":"object","properties":{"id":{"type":"string"}}}}},"description":""}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetFolder = {"metadata":{"allOf":[{"type":"object","properties":{"folder_id":{"type":"number","contentEncoding":"double","examples":[457],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["folder_id"]}]},"response":{"200":{"title":"GetFolderresponse","required":["id","name","orderindex","override_statuses","hidden","space","task_count","lists"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"orderindex":{"type":"integer","contentEncoding":"int32"},"override_statuses":{"type":"boolean"},"hidden":{"type":"boolean"},"space":{"title":"Space2","required":["id","name","access"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"access":{"type":"boolean"}}},"task_count":{"type":"string"},"lists":{"type":"array","items":{"type":"string"},"description":""}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetFolderAvailableFields = {"metadata":{"allOf":[{"type":"object","properties":{"folder_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["folder_id"]},{"type":"object","properties":{"Content-Type":{"const":"application/json","type":"string","examples":["application/json"],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["Content-Type"]}]},"response":{"200":{"title":"GetFolderAvailableFieldsresponse","required":["fields"],"type":"object","properties":{"fields":{"type":"array","items":{"title":"Field","required":["id","name","type","type_config","date_created","hide_from_guests"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string"},"type_config":{"title":"TypeConfig","type":"object","properties":{"options":{"type":"array","items":{"title":"Option","required":["id","color"],"type":"object","properties":{"id":{"type":"string"},"label":{"type":"string"},"color":{"type":["string","null"]},"name":{"type":"string"},"value":{"type":"integer","contentEncoding":"int32"},"type":{"type":"string"},"orderindex":{"type":"integer","contentEncoding":"int32"}}},"description":""},"default":{"oneOf":[{"type":["string","null"]},{"type":"integer","contentEncoding":"int32"},{}]},"precision":{"type":"integer","contentEncoding":"int32"},"currency_type":{"type":"string"},"placeholder":{"type":["string","null"]},"end":{"type":"integer","contentEncoding":"int32"},"start":{"type":"integer","contentEncoding":"int32"},"count":{"type":"integer","contentEncoding":"int32"},"code_point":{"type":"string"},"tracking":{"title":"Tracking","required":["subtasks","checklists","assigned_comments"],"type":"object","properties":{"subtasks":{"type":"boolean"},"checklists":{"type":"boolean"},"assigned_comments":{"type":"boolean"}}},"complete_on":{"type":"integer","contentEncoding":"int32"}}},"date_created":{"type":"string"},"hide_from_guests":{"type":"boolean"}}},"description":""}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetFolderViews = {"metadata":{"allOf":[{"type":"object","properties":{"folder_id":{"type":"number","contentEncoding":"double","examples":[457],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["folder_id"]}]},"response":{"200":{"title":"GetFolderViewsresponse","required":["views"],"type":"object","properties":{"views":{"type":"array","items":{"title":"View","required":["id","name","type","parent","grouping","divide","sorting","filters","columns","team_sidebar","settings"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string"},"parent":{"title":"Parent","description":"The parent parameter specifies where the view is located in the ClickUp Hierarchy. Both `id` and `type` are required. \\\n \\\nThe `id` is the id of the Workspace, Space, Folder, or List where the view is located. \\\n \\\nThe `type` value indciates the level of the Hierarchy where the view is located.","required":["id","type"],"type":"object","properties":{"id":{"type":"string","description":"The id of the Workspace, Space, Folder, or List where the view is located."},"type":{"type":"integer","description":"The level of the Hierarchy where the view is created. \\\n \\\nOptions include: \\\n \\\nWorkspace (Everything Level): `7` \\\n \\\nSpace: `4` \\\n \\\nFolder: `5` \\\n \\\nList: `6`","contentEncoding":"int32"}}},"grouping":{"title":"Grouping","required":["field","dir","collapsed","ignore"],"type":"object","properties":{"field":{"type":"string","description":"Set the field to group by.\\\n \\\nOptions include: `none`, `status`, `priority`, `assignee`, `tag`, or `dueDate`."},"dir":{"description":"Set a group sort order using `1` or `-1`.\\\n \\\nFor example, use `1`show tasks with urgent priority at the top of your view, and tasks with no priority at the bottom.\\\n \\\nUse `-1` to reverse the order to show tasks with no priority at the top of your view.","type":"integer","contentEncoding":"int32"},"collapsed":{"type":"array","items":{"type":"string"},"description":""},"ignore":{"type":"boolean"}}},"divide":{"title":"Divide","required":["collapsed"],"type":"object","properties":{"field":{"type":["null"]},"dir":{"type":["null"]},"collapsed":{"type":["boolean"]}}},"sorting":{"title":"Sorting","required":["fields"],"type":"object","properties":{"fields":{"type":"array","items":{"type":"string"},"description":"Include an array of fields to sort by.\\\n \\\n You can sort by the same fields available when [filtering a view](doc:filter-views)."}}},"filters":{"title":"Filters","required":["op","fields","search","show_closed"],"type":"object","properties":{"op":{"type":"string","description":"The available operator (`op``) values are `AND`` and `OR``."},"fields":{"type":"array","items":{"type":"string"},"description":"View the list of [fields available](doc:filter-views) to filter by."},"search":{"type":"string"},"show_closed":{"type":"boolean"}}},"columns":{"title":"Columns","description":"Custom Fields added to a view at the Everything level will be added to all tasks in your Workspace. Once Custom Fields are added to one of these views, you cannot move it to another level of the Hierarchy.","required":["fields"],"type":"object","properties":{"fields":{"description":"Custom Fields require the `_cf` prefix and must be formatted as a JSON object.","type":"array","items":{"type":"string"}}}},"team_sidebar":{"title":"TeamSidebar","required":["assignees","assigned_comments","unassigned_tasks"],"type":"object","properties":{"assignees":{"type":"array","items":{"type":"string"},"description":""},"assigned_comments":{"type":"boolean"},"unassigned_tasks":{"type":"boolean"}}},"settings":{"title":"Settings","required":["show_task_locations","show_subtasks","show_subtask_parent_names","show_closed_subtasks","show_assignees","show_images","collapse_empty_columns","me_comments","me_subtasks","me_checklists"],"type":"object","properties":{"show_task_locations":{"type":"boolean"},"show_subtasks":{"description":"Acceptable values are `1`, `2`, or `3`, which show subtasks separate, expanded, or collapsed.","type":"integer","contentEncoding":"int32"},"show_subtask_parent_names":{"type":"boolean"},"show_closed_subtasks":{"type":"boolean"},"show_assignees":{"type":"boolean"},"show_images":{"type":"boolean"},"collapse_empty_columns":{"type":["string","null"]},"me_comments":{"type":"boolean"},"me_subtasks":{"type":"boolean"},"me_checklists":{"type":"boolean"}}}}},"description":""}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetFolderlessLists = {"metadata":{"allOf":[{"type":"object","properties":{"space_id":{"type":"number","contentEncoding":"double","examples":[789],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["space_id"]},{"type":"object","properties":{"archived":{"type":"boolean","examples":[false],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":[]}]},"response":{"200":{"title":"GetFolderlessListsresponse","required":["lists"],"type":"object","properties":{"lists":{"type":"array","items":{"title":"List4","required":["id","name","orderindex","content","status","priority","assignee","task_count","due_date","start_date","folder","space","archived","override_statuses","permission_level"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"orderindex":{"type":"integer","contentEncoding":"int32"},"content":{"type":"string"},"status":{"oneOf":[{"title":"Status11","type":"object","properties":{"status":{"type":"string"},"color":{"type":"string"},"hide_label":{"type":"boolean"}}},{"type":["string","null"]},{}]},"priority":{"oneOf":[{"title":"Priority4","type":"object","properties":{"priority":{"type":"string"},"color":{"type":"string"}}},{"type":["string","null"]},{}]},"assignee":{"type":["string","null"]},"task_count":{"type":["string","null"]},"due_date":{"type":["string","null"]},"start_date":{"type":["string","null"]},"folder":{"title":"Folder3","required":["id","name","hidden","access"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"hidden":{"type":"boolean"},"access":{"type":"boolean"}}},"space":{"title":"Space2","required":["id","name","access"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"access":{"type":"boolean"}}},"archived":{"type":"boolean"},"override_statuses":{"type":"boolean"},"permission_level":{"type":"string"}}},"description":""}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetFolders = {"metadata":{"allOf":[{"type":"object","properties":{"space_id":{"type":"number","contentEncoding":"double","examples":[789],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["space_id"]},{"type":"object","properties":{"archived":{"type":"boolean","examples":[false],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":[]}]},"response":{"200":{"description":"","contentMediaType":"application/json","title":"GetFoldersresponse","required":["folders"],"type":"object","properties":{"folders":{"title":"Folder5","required":["id","name","orderindex","override_statuses","hidden","space","task_count","lists"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"orderindex":{"type":"integer","contentEncoding":"int32"},"override_statuses":{"type":"boolean"},"hidden":{"type":"boolean"},"space":{"title":"Space2","required":["id","name","access"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"access":{"type":"boolean"}}},"task_count":{"type":"string"},"lists":{"type":"array","items":{"type":"string"}}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetGoal = {"metadata":{"allOf":[{"type":"object","properties":{"goal_id":{"type":"string","examples":["e53a033c"],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"900e-462d-a849-4a216b06d930 (uuid)"}},"required":["goal_id"]}]},"response":{"200":{"title":"GetGoalresponse","required":["goal"],"type":"object","properties":{"goal":{"title":"Goal","required":["id","name","team_id","date_created","start_date","due_date","description","private","archived","creator","color","pretty_id","multiple_owners","folder_id","members","owners","key_results","percent_completed","history","pretty_url"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"team_id":{"type":"string"},"date_created":{"type":"string"},"start_date":{"type":["string","null"]},"due_date":{"type":"string"},"description":{"type":"string"},"private":{"type":"boolean"},"archived":{"type":"boolean"},"creator":{"type":"integer","contentEncoding":"int32"},"color":{"type":"string"},"pretty_id":{"type":"string"},"multiple_owners":{"type":"boolean"},"folder_id":{"type":["string","null"]},"members":{"type":"array","items":{"type":"string"},"description":""},"owners":{"type":"array","items":{"title":"Owner","required":["id","username","initials","email","color","profilePicture"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"initials":{"type":"string"},"email":{"type":"string"},"color":{"type":"string"},"profilePicture":{"type":"string"}}},"description":""},"key_results":{"type":"array","items":{"type":"string"},"description":""},"percent_completed":{"type":"integer","contentEncoding":"int32"},"history":{"type":"array","items":{"type":"string"},"description":""},"pretty_url":{"type":"string"}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetGoals = {"metadata":{"allOf":[{"type":"object","properties":{"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Workspace ID"}},"required":["team_id"]},{"type":"object","properties":{"include_completed":{"type":"boolean","examples":[true],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":[]}]},"response":{"200":{"title":"GetGoalsresponse","required":["goals","folders"],"type":"object","properties":{"goals":{"type":"array","items":{"title":"Goal2","required":["id","pretty_id","name","team_id","creator","owner","color","date_created","start_date","due_date","description","private","archived","multiple_owners","editor_token","date_updated","last_update","folder_id","pinned","owners","key_result_count","members","group_members","percent_completed"],"type":"object","properties":{"id":{"type":"string"},"pretty_id":{"type":"string"},"name":{"type":"string"},"team_id":{"type":"string"},"creator":{"type":"integer","contentEncoding":"int32"},"owner":{"type":["string","null"]},"color":{"type":"string"},"date_created":{"type":"string"},"start_date":{"type":["string","null"]},"due_date":{"type":"string"},"description":{"type":"string"},"private":{"type":"boolean"},"archived":{"type":"boolean"},"multiple_owners":{"type":"boolean"},"editor_token":{"type":"string"},"date_updated":{"type":"string"},"last_update":{"type":"string"},"folder_id":{"type":["string","null"]},"pinned":{"type":"boolean"},"owners":{"type":"array","items":{"type":"string"},"description":""},"key_result_count":{"type":"integer","contentEncoding":"int32"},"members":{"type":"array","items":{"title":"Member1","required":["id","username","email","color","permission_level","profilePicture","initials","isCreator"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"email":{"type":"string"},"color":{"type":"string"},"permission_level":{"type":"string"},"profilePicture":{"type":"string"},"initials":{"type":"string"},"isCreator":{"type":"boolean"}}},"description":""},"group_members":{"type":"array","items":{"type":"string"},"description":""},"percent_completed":{"type":"integer","contentEncoding":"int32"}}},"description":""},"folders":{"type":"array","items":{"title":"Folder2","required":["id","name","team_id","private","date_created","creator","goal_count","members","goals"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"team_id":{"type":"string"},"private":{"type":"boolean"},"date_created":{"type":"string"},"creator":{"type":"integer","contentEncoding":"int32"},"goal_count":{"type":"integer","contentEncoding":"int32"},"members":{"type":"array","items":{"title":"Member2","required":["id","email","username","color","permission_level","date_added","added_by","initials","profilePicture"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"email":{"type":"string"},"username":{"type":"string"},"color":{"type":"string"},"permission_level":{"type":"string"},"date_added":{"type":"integer","contentEncoding":"int64"},"added_by":{"type":"integer","contentEncoding":"int32"},"initials":{"type":"string"},"profilePicture":{"type":"string"}}},"description":""},"goals":{"type":"array","items":{"title":"Goal3","required":["id","pretty_id","name","team_id","creator","owner","color","date_created","start_date","due_date","description","private","archived","multiple_owners","editor_token","date_updated","last_update","folder_id","folder_access","pinned","owners","key_result_count","members","group_members","percent_completed"],"type":"object","properties":{"id":{"type":"string"},"pretty_id":{"type":"string"},"name":{"type":"string"},"team_id":{"type":"string"},"creator":{"type":"integer","contentEncoding":"int32"},"owner":{"type":["string","null"]},"color":{"type":"string"},"date_created":{"type":"string"},"start_date":{"type":["string","null"]},"due_date":{"type":"string"},"description":{"type":"string"},"private":{"type":"boolean"},"archived":{"type":"boolean"},"multiple_owners":{"type":"boolean"},"editor_token":{"type":"string"},"date_updated":{"type":"string"},"last_update":{"type":"string"},"folder_id":{"type":"string"},"folder_access":{"type":"boolean"},"pinned":{"type":"boolean"},"owners":{"type":"array","items":{"type":"string"},"description":""},"key_result_count":{"type":"integer","contentEncoding":"int32"},"members":{"type":"array","items":{"title":"Member1","required":["id","username","email","color","permission_level","profilePicture","initials","isCreator"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"email":{"type":"string"},"color":{"type":"string"},"permission_level":{"type":"string"},"profilePicture":{"type":"string"},"initials":{"type":"string"},"isCreator":{"type":"boolean"}}},"description":""},"group_members":{"type":"array","items":{"type":"string"},"description":""},"percent_completed":{"type":"integer","contentEncoding":"int32"}}},"description":""}}},"description":""}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetGuest = {"metadata":{"allOf":[{"type":"object","properties":{"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Workspace ID"},"guest_id":{"type":"number","contentEncoding":"double","examples":[403],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["team_id","guest_id"]}]},"response":{"200":{"type":"object","contentMediaType":"application/json","additionalProperties":true,"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetList = {"metadata":{"allOf":[{"type":"object","properties":{"list_id":{"type":"number","contentEncoding":"double","examples":[124],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"The List ID. To find the List ID, right-click the List in your Sidebar, select Copy link, and paste the link in your URL. The last string in the URL is your List ID."}},"required":["list_id"]}]},"response":{"200":{"title":"GetListresponse","required":["id","name","orderindex","content","status","priority","assignee","due_date","due_date_time","start_date","start_date_time","folder","space","inbound_address","archived","override_statuses","statuses","permission_level"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"orderindex":{"type":"integer","contentEncoding":"int32"},"content":{"type":"string"},"status":{"title":"Status5","required":["status","color","hide_label"],"type":"object","properties":{"status":{"type":"string"},"color":{"type":"string"},"hide_label":{"type":"boolean"}}},"priority":{"title":"Priority1","required":["priority","color"],"type":"object","properties":{"priority":{"type":"string"},"color":{"type":"string"}}},"assignee":{"type":["string","null"]},"due_date":{"type":"string"},"due_date_time":{"type":"boolean"},"start_date":{"type":["string","null"]},"start_date_time":{"type":["string","null"]},"folder":{"title":"Folder3","required":["id","name","hidden","access"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"hidden":{"type":"boolean"},"access":{"type":"boolean"}}},"space":{"title":"Space2","required":["id","name","access"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"access":{"type":"boolean"}}},"inbound_address":{"type":"string"},"archived":{"type":"boolean"},"override_statuses":{"type":"boolean"},"statuses":{"type":"array","items":{"title":"Status","required":["status","color","orderindex","type"],"type":"object","properties":{"status":{"type":"string"},"color":{"type":"string"},"orderindex":{"type":"integer","contentEncoding":"int32"},"type":{"type":"string"}}},"description":""},"permission_level":{"type":"string"}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetListComments = {"metadata":{"allOf":[{"type":"object","properties":{"list_id":{"type":"number","contentEncoding":"double","examples":[124],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["list_id"]},{"type":"object","properties":{"start":{"type":"integer","contentEncoding":"int32","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Enter the `date` of a List info comment using Unix time in milliseconds."},"start_id":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Enter the Comment `id` of a List info comment."}},"required":[]}]},"response":{"200":{"title":"GetListCommentsresponse","required":["comments"],"type":"object","properties":{"comments":{"type":"array","items":{"title":"Comment","required":["id","comment","comment_text","user","resolved","assignee","assigned_by","reactions","date"],"type":"object","properties":{"id":{"type":"string"},"comment":{"type":"array","items":{"title":"Comment1","required":["text"],"type":"object","properties":{"text":{"type":"string"}}},"description":""},"comment_text":{"type":"string"},"user":{"title":"User2","required":["id","username","initials","email","color","profilePicture"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"initials":{"type":"string"},"email":{"type":"string"},"color":{"type":"string"},"profilePicture":{"type":"string"}}},"resolved":{"type":"boolean"},"assignee":{"title":"Assignee","required":["id","username","email","color","initials","profilePicture"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"email":{"type":"string"},"color":{"type":"string"},"initials":{"type":"string"},"profilePicture":{"type":"string"}}},"assigned_by":{"title":"AssignedBy","required":["id","username","initials","email","color","profilePicture"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"initials":{"type":"string"},"email":{"type":"string"},"color":{"type":"string"},"profilePicture":{"type":"string"}}},"reactions":{"type":"array","items":{"type":"string"},"description":""},"date":{"type":"string"},"reply_count":{"type":"string","description":"For threaded comments, `reply_count` is always 0."}}},"description":""}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetListMembers = {"metadata":{"allOf":[{"type":"object","properties":{"list_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["list_id"]}]},"response":{"200":{"title":"GetListMembersresponse","required":["members"],"type":"object","properties":{"members":{"type":"array","items":{"title":"Member5","required":["id","username","email","color","initials","profilePicture","profileInfo"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"email":{"type":"string"},"color":{"type":["string","null"]},"initials":{"type":"string"},"profilePicture":{"type":"string"},"profileInfo":{"title":"ProfileInfo","required":["display_profile","verified_ambassador","verified_consultant","top_tier_user","viewed_verified_ambassador","viewed_verified_consultant","viewed_top_tier_user"],"type":"object","properties":{"display_profile":{"type":["string","null"]},"verified_ambassador":{"type":["string","null"]},"verified_consultant":{"type":["string","null"]},"top_tier_user":{"type":["string","null"]},"viewed_verified_ambassador":{"type":["string","null"]},"viewed_verified_consultant":{"type":["string","null"]},"viewed_top_tier_user":{"type":["string","null"]}}}}},"description":""}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetListViews = {"metadata":{"allOf":[{"type":"object","properties":{"list_id":{"type":"number","contentEncoding":"double","examples":[124],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["list_id"]}]},"response":{"200":{"title":"GetListViewsresponse","required":["views"],"type":"object","properties":{"views":{"type":"array","items":{"title":"View","required":["id","name","type","parent","grouping","divide","sorting","filters","columns","team_sidebar","settings"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string"},"parent":{"title":"Parent","description":"The parent parameter specifies where the view is located in the ClickUp Hierarchy. Both `id` and `type` are required. \\\n \\\nThe `id` is the id of the Workspace, Space, Folder, or List where the view is located. \\\n \\\nThe `type` value indciates the level of the Hierarchy where the view is located.","required":["id","type"],"type":"object","properties":{"id":{"type":"string","description":"The id of the Workspace, Space, Folder, or List where the view is located."},"type":{"type":"integer","description":"The level of the Hierarchy where the view is created. \\\n \\\nOptions include: \\\n \\\nWorkspace (Everything Level): `7` \\\n \\\nSpace: `4` \\\n \\\nFolder: `5` \\\n \\\nList: `6`","contentEncoding":"int32"}}},"grouping":{"title":"Grouping","required":["field","dir","collapsed","ignore"],"type":"object","properties":{"field":{"type":"string","description":"Set the field to group by.\\\n \\\nOptions include: `none`, `status`, `priority`, `assignee`, `tag`, or `dueDate`."},"dir":{"description":"Set a group sort order using `1` or `-1`.\\\n \\\nFor example, use `1`show tasks with urgent priority at the top of your view, and tasks with no priority at the bottom.\\\n \\\nUse `-1` to reverse the order to show tasks with no priority at the top of your view.","type":"integer","contentEncoding":"int32"},"collapsed":{"type":"array","items":{"type":"string"},"description":""},"ignore":{"type":"boolean"}}},"divide":{"title":"Divide","required":["collapsed"],"type":"object","properties":{"field":{"type":["null"]},"dir":{"type":["null"]},"collapsed":{"type":["boolean"]}}},"sorting":{"title":"Sorting","required":["fields"],"type":"object","properties":{"fields":{"type":"array","items":{"type":"string"},"description":"Include an array of fields to sort by.\\\n \\\n You can sort by the same fields available when [filtering a view](doc:filter-views)."}}},"filters":{"title":"Filters","required":["op","fields","search","show_closed"],"type":"object","properties":{"op":{"type":"string","description":"The available operator (`op``) values are `AND`` and `OR``."},"fields":{"type":"array","items":{"type":"string"},"description":"View the list of [fields available](doc:filter-views) to filter by."},"search":{"type":"string"},"show_closed":{"type":"boolean"}}},"columns":{"title":"Columns","description":"Custom Fields added to a view at the Everything level will be added to all tasks in your Workspace. Once Custom Fields are added to one of these views, you cannot move it to another level of the Hierarchy.","required":["fields"],"type":"object","properties":{"fields":{"description":"Custom Fields require the `_cf` prefix and must be formatted as a JSON object.","type":"array","items":{"type":"string"}}}},"team_sidebar":{"title":"TeamSidebar","required":["assignees","assigned_comments","unassigned_tasks"],"type":"object","properties":{"assignees":{"type":"array","items":{"type":"string"},"description":""},"assigned_comments":{"type":"boolean"},"unassigned_tasks":{"type":"boolean"}}},"settings":{"title":"Settings","required":["show_task_locations","show_subtasks","show_subtask_parent_names","show_closed_subtasks","show_assignees","show_images","collapse_empty_columns","me_comments","me_subtasks","me_checklists"],"type":"object","properties":{"show_task_locations":{"type":"boolean"},"show_subtasks":{"description":"Acceptable values are `1`, `2`, or `3`, which show subtasks separate, expanded, or collapsed.","type":"integer","contentEncoding":"int32"},"show_subtask_parent_names":{"type":"boolean"},"show_closed_subtasks":{"type":"boolean"},"show_assignees":{"type":"boolean"},"show_images":{"type":"boolean"},"collapse_empty_columns":{"type":["string","null"]},"me_comments":{"type":"boolean"},"me_subtasks":{"type":"boolean"},"me_checklists":{"type":"boolean"}}}}},"description":""}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetLists = {"metadata":{"allOf":[{"type":"object","properties":{"folder_id":{"type":"number","contentEncoding":"double","examples":[456],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["folder_id"]},{"type":"object","properties":{"archived":{"type":"boolean","examples":[false],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":[]}]},"response":{"200":{"title":"GetListsresponse","required":["lists"],"type":"object","properties":{"lists":{"type":"array","items":{"title":"List4","required":["id","name","orderindex","content","status","priority","assignee","task_count","due_date","start_date","folder","space","archived","override_statuses","permission_level"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"orderindex":{"type":"integer","contentEncoding":"int32"},"content":{"type":"string"},"status":{"oneOf":[{"title":"Status11","type":"object","properties":{"status":{"type":"string"},"color":{"type":"string"},"hide_label":{"type":"boolean"}}},{"type":["string","null"]},{}]},"priority":{"oneOf":[{"title":"Priority4","type":"object","properties":{"priority":{"type":"string"},"color":{"type":"string"}}},{"type":["string","null"]},{}]},"assignee":{"type":["string","null"]},"task_count":{"type":["string","null"]},"due_date":{"type":["string","null"]},"start_date":{"type":["string","null"]},"folder":{"title":"Folder3","required":["id","name","hidden","access"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"hidden":{"type":"boolean"},"access":{"type":"boolean"}}},"space":{"title":"Space2","required":["id","name","access"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"access":{"type":"boolean"}}},"archived":{"type":"boolean"},"override_statuses":{"type":"boolean"},"permission_level":{"type":"string"}}},"description":""}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetPage = {"metadata":{"allOf":[{"type":"object","properties":{"workspaceId":{"type":"number","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of the Workspace."},"docId":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of the Doc."},"pageId":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of the page."}},"required":["workspaceId","docId","pageId"]},{"type":"object","properties":{"content_format":{"default":"text/md","type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The format to return the page content in. For example, `text/md` for markdown or `text/plain` for plain."}},"required":[]}]},"response":{"200":{"type":"object","properties":{"id":{"type":"string"},"doc_id":{"type":"string"},"parent_page_id":{"type":"string"},"workspace_id":{"type":"number"},"name":{"type":"string"},"pages":{"type":"array","description":"More nested documents with the same object structure.","items":{}},"sub_title":{"type":"string"},"date_created":{"type":"number"},"date_updated":{"type":"number"},"content":{"type":"string"},"avatar":{"type":"object","properties":{"color":{"type":"string"},"value":{"type":"string"},"source":{"type":"string"}}},"creator_id":{"type":"number"},"deleted":{"type":"boolean"},"deleted_by":{"type":"number"},"date_deleted":{"type":"number"},"date_edited":{"type":"number"},"edited_by":{"type":"number"},"archived":{"type":"boolean"},"archived_by":{"type":"number"},"date_archived":{"type":"number"},"authors":{"type":"array","items":{"type":"number"}},"contributors":{"type":"array","items":{"type":"number"}},"cover":{"type":"object","properties":{"color":{"type":"string"},"image_url":{"type":"string"},"position":{"type":"object","properties":{"x":{"type":"number"},"y":{"type":"number"}},"required":["x","y"]}}},"protected":{"type":"boolean"},"protected_by":{"type":"number"},"protected_note":{"type":"string"},"presentation_details":{"type":"object","properties":{"font":{"type":"string"},"font_size":{"type":"number"},"line_height":{"type":"number"},"page_width":{"type":"number"},"paragraph_spacing":{"type":"number"},"show_author_header":{"type":"boolean"},"show_contributor_header":{"type":"boolean"},"show_cover_header":{"type":"boolean"},"show_date_header":{"type":"boolean"},"show_page_outline":{"type":"boolean"},"show_sub_pages":{"type":"boolean"},"sub_page_size":{"type":"string"},"show_sub_title_header":{"type":"boolean"},"show_title_icon_header":{"type":"boolean"},"show_relationships":{"type":"boolean"},"show_relationships_compact":{"type":"boolean"},"show_sub_pages_author":{"type":"boolean"},"show_sub_pages_thumbnail":{"type":"boolean"},"show_sub_pages_compact":{"type":"boolean"},"sub_pages_style":{"type":"string"}}}},"required":["id","doc_id","workspace_id","name","date_created","content","creator_id","authors"],"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetSpace = {"metadata":{"allOf":[{"type":"object","properties":{"space_id":{"type":"number","contentEncoding":"double","examples":[790],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["space_id"]}]},"response":{"200":{"title":"GetSpaceresponse","required":["id","name","private","statuses","multiple_assignees","features"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"private":{"type":"boolean"},"statuses":{"type":"array","items":{"title":"Status","required":["status","color","orderindex","type"],"type":"object","properties":{"status":{"type":"string"},"color":{"type":"string"},"orderindex":{"type":"integer","contentEncoding":"int32"},"type":{"type":"string"}}},"description":""},"multiple_assignees":{"type":"boolean"},"features":{"title":"Features","required":["due_dates","time_tracking","tags","time_estimates","checklists","custom_fields","remap_dependencies","dependency_warning","portfolios"],"type":"object","properties":{"due_dates":{"title":"DueDates","required":["enabled","start_date","remap_due_dates","remap_closed_due_date"],"type":"object","properties":{"enabled":{"type":"boolean"},"start_date":{"type":"boolean"},"remap_due_dates":{"type":"boolean"},"remap_closed_due_date":{"type":"boolean"}}},"time_tracking":{"title":"TimeTracking","required":["enabled"],"type":"object","properties":{"enabled":{"type":"boolean"}}},"tags":{"title":"Tags","required":["enabled"],"type":"object","properties":{"enabled":{"type":"boolean"}}},"time_estimates":{"title":"TimeEstimates","required":["enabled"],"type":"object","properties":{"enabled":{"type":"boolean"}}},"checklists":{"title":"Checklists","required":["enabled"],"type":"object","properties":{"enabled":{"type":"boolean"}}},"custom_fields":{"title":"CustomFields","required":["enabled"],"type":"object","properties":{"enabled":{"type":"boolean"}}},"remap_dependencies":{"title":"RemapDependencies","required":["enabled"],"type":"object","properties":{"enabled":{"type":"boolean"}}},"dependency_warning":{"title":"DependencyWarning","required":["enabled"],"type":"object","properties":{"enabled":{"type":"boolean"}}},"portfolios":{"title":"Portfolios","required":["enabled"],"type":"object","properties":{"enabled":{"type":"boolean"}}}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetSpaceAvailableFields = {"metadata":{"allOf":[{"type":"object","properties":{"space_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["space_id"]},{"type":"object","properties":{"Content-Type":{"const":"application/json","type":"string","examples":["application/json"],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["Content-Type"]}]},"response":{"200":{"title":"GetSpaceAvailableFieldsresponse","required":["fields"],"type":"object","properties":{"fields":{"type":"array","items":{"title":"Field","required":["id","name","type","type_config","date_created","hide_from_guests"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string"},"type_config":{"title":"TypeConfig","type":"object","properties":{"options":{"type":"array","items":{"title":"Option","required":["id","color"],"type":"object","properties":{"id":{"type":"string"},"label":{"type":"string"},"color":{"type":["string","null"]},"name":{"type":"string"},"value":{"type":"integer","contentEncoding":"int32"},"type":{"type":"string"},"orderindex":{"type":"integer","contentEncoding":"int32"}}},"description":""},"default":{"oneOf":[{"type":["string","null"]},{"type":"integer","contentEncoding":"int32"},{}]},"precision":{"type":"integer","contentEncoding":"int32"},"currency_type":{"type":"string"},"placeholder":{"type":["string","null"]},"end":{"type":"integer","contentEncoding":"int32"},"start":{"type":"integer","contentEncoding":"int32"},"count":{"type":"integer","contentEncoding":"int32"},"code_point":{"type":"string"},"tracking":{"title":"Tracking","required":["subtasks","checklists","assigned_comments"],"type":"object","properties":{"subtasks":{"type":"boolean"},"checklists":{"type":"boolean"},"assigned_comments":{"type":"boolean"}}},"complete_on":{"type":"integer","contentEncoding":"int32"}}},"date_created":{"type":"string"},"hide_from_guests":{"type":"boolean"}}},"description":""}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetSpaceTags = {"metadata":{"allOf":[{"type":"object","properties":{"space_id":{"type":"number","contentEncoding":"double","examples":[512],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["space_id"]},{"type":"object","properties":{"Content-Type":{"const":"application/json","type":"string","examples":["application/json"],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["Content-Type"]}]},"response":{"200":{"title":"GetSpaceTagsresponse","required":["tags"],"type":"object","properties":{"tags":{"type":"array","items":{"title":"Tags6","required":["name","tag_fg","tag_bg"],"type":"object","properties":{"name":{"type":"string"},"tag_fg":{"type":"string"},"tag_bg":{"type":"string"}}},"description":""}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetSpaceViews = {"metadata":{"allOf":[{"type":"object","properties":{"space_id":{"type":"number","contentEncoding":"double","examples":[790],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["space_id"]}]},"response":{"200":{"title":"GetSpaceViewsresponse","required":["views"],"type":"object","properties":{"views":{"type":"array","items":{"title":"View","required":["id","name","type","parent","grouping","divide","sorting","filters","columns","team_sidebar","settings"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string"},"parent":{"title":"Parent","description":"The parent parameter specifies where the view is located in the ClickUp Hierarchy. Both `id` and `type` are required. \\\n \\\nThe `id` is the id of the Workspace, Space, Folder, or List where the view is located. \\\n \\\nThe `type` value indciates the level of the Hierarchy where the view is located.","required":["id","type"],"type":"object","properties":{"id":{"type":"string","description":"The id of the Workspace, Space, Folder, or List where the view is located."},"type":{"type":"integer","description":"The level of the Hierarchy where the view is created. \\\n \\\nOptions include: \\\n \\\nWorkspace (Everything Level): `7` \\\n \\\nSpace: `4` \\\n \\\nFolder: `5` \\\n \\\nList: `6`","contentEncoding":"int32"}}},"grouping":{"title":"Grouping","required":["field","dir","collapsed","ignore"],"type":"object","properties":{"field":{"type":"string","description":"Set the field to group by.\\\n \\\nOptions include: `none`, `status`, `priority`, `assignee`, `tag`, or `dueDate`."},"dir":{"description":"Set a group sort order using `1` or `-1`.\\\n \\\nFor example, use `1`show tasks with urgent priority at the top of your view, and tasks with no priority at the bottom.\\\n \\\nUse `-1` to reverse the order to show tasks with no priority at the top of your view.","type":"integer","contentEncoding":"int32"},"collapsed":{"type":"array","items":{"type":"string"},"description":""},"ignore":{"type":"boolean"}}},"divide":{"title":"Divide","required":["collapsed"],"type":"object","properties":{"field":{"type":["null"]},"dir":{"type":["null"]},"collapsed":{"type":["boolean"]}}},"sorting":{"title":"Sorting","required":["fields"],"type":"object","properties":{"fields":{"type":"array","items":{"type":"string"},"description":"Include an array of fields to sort by.\\\n \\\n You can sort by the same fields available when [filtering a view](doc:filter-views)."}}},"filters":{"title":"Filters","required":["op","fields","search","show_closed"],"type":"object","properties":{"op":{"type":"string","description":"The available operator (`op``) values are `AND`` and `OR``."},"fields":{"type":"array","items":{"type":"string"},"description":"View the list of [fields available](doc:filter-views) to filter by."},"search":{"type":"string"},"show_closed":{"type":"boolean"}}},"columns":{"title":"Columns","description":"Custom Fields added to a view at the Everything level will be added to all tasks in your Workspace. Once Custom Fields are added to one of these views, you cannot move it to another level of the Hierarchy.","required":["fields"],"type":"object","properties":{"fields":{"description":"Custom Fields require the `_cf` prefix and must be formatted as a JSON object.","type":"array","items":{"type":"string"}}}},"team_sidebar":{"title":"TeamSidebar","required":["assignees","assigned_comments","unassigned_tasks"],"type":"object","properties":{"assignees":{"type":"array","items":{"type":"string"},"description":""},"assigned_comments":{"type":"boolean"},"unassigned_tasks":{"type":"boolean"}}},"settings":{"title":"Settings","required":["show_task_locations","show_subtasks","show_subtask_parent_names","show_closed_subtasks","show_assignees","show_images","collapse_empty_columns","me_comments","me_subtasks","me_checklists"],"type":"object","properties":{"show_task_locations":{"type":"boolean"},"show_subtasks":{"description":"Acceptable values are `1`, `2`, or `3`, which show subtasks separate, expanded, or collapsed.","type":"integer","contentEncoding":"int32"},"show_subtask_parent_names":{"type":"boolean"},"show_closed_subtasks":{"type":"boolean"},"show_assignees":{"type":"boolean"},"show_images":{"type":"boolean"},"collapse_empty_columns":{"type":["string","null"]},"me_comments":{"type":"boolean"},"me_subtasks":{"type":"boolean"},"me_checklists":{"type":"boolean"}}}}},"description":""}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetSpaces = {"metadata":{"allOf":[{"type":"object","properties":{"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Workspace ID"}},"required":["team_id"]},{"type":"object","properties":{"archived":{"type":"boolean","examples":[false],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":[]}]},"response":{"200":{"title":"GetSpacesresponse","required":["spaces"],"type":"object","properties":{"spaces":{"type":"array","items":{"title":"Space13","required":["id","name","private","statuses","multiple_assignees","features"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"private":{"type":"boolean"},"color":{"type":"string"},"avatar":{"type":"string"},"admin_can_manage":{"type":"boolean"},"archived":{"type":"boolean"},"members":{"type":"array","items":{"title":"Member","required":["user"],"type":"object","properties":{"user":{"title":"User","required":["id","username","color","profilePicture"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"color":{"type":"string"},"profilePicture":{"type":"string"}}}}},"description":"","user":{"id":{"type":"string"},"username":{"type":"string"},"color":{"type":"string"},"profilePicture":{"type":"string"},"initials":{"type":"string"}}},"statuses":{"type":"array","items":{"title":"Status","required":["status","color","orderindex","type"],"type":"object","properties":{"status":{"type":"string"},"color":{"type":"string"},"orderindex":{"type":"integer","contentEncoding":"int32"},"type":{"type":"string"}}},"description":""},"multiple_assignees":{"type":"boolean"},"features":{"title":"Features4","required":["due_dates","time_tracking","tags","time_estimates","checklists"],"type":"object","properties":{"due_dates":{"title":"DueDates","required":["enabled","start_date","remap_due_dates","remap_closed_due_date"],"type":"object","properties":{"enabled":{"type":"boolean"},"start_date":{"type":"boolean"},"remap_due_dates":{"type":"boolean"},"remap_closed_due_date":{"type":"boolean"}}},"time_tracking":{"title":"TimeTracking","required":["enabled"],"type":"object","properties":{"enabled":{"type":"boolean"}}},"tags":{"title":"Tags","required":["enabled"],"type":"object","properties":{"enabled":{"type":"boolean"}}},"time_estimates":{"title":"TimeEstimates","required":["enabled"],"type":"object","properties":{"enabled":{"type":"boolean"}}},"checklists":{"title":"Checklists","required":["enabled"],"type":"object","properties":{"enabled":{"type":"boolean"}}},"custom_fields":{"title":"CustomFields","required":["enabled"],"type":"object","properties":{"enabled":{"type":"boolean"}}},"remap_dependencies":{"title":"RemapDependencies","required":["enabled"],"type":"object","properties":{"enabled":{"type":"boolean"}}},"dependency_warning":{"title":"DependencyWarning","required":["enabled"],"type":"object","properties":{"enabled":{"type":"boolean"}}},"portfolios":{"title":"Portfolios","required":["enabled"],"type":"object","properties":{"enabled":{"type":"boolean"}}}}}}},"description":""}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetTask = {"metadata":{"allOf":[{"type":"object","properties":{"task_id":{"type":"string","examples":["9hz"],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["task_id"]},{"type":"object","properties":{"custom_task_ids":{"type":"boolean","examples":[true],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"If you want to reference a task by its custom task id, this value must be `true`."},"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."},"include_subtasks":{"type":"boolean","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Include subtasks, default false"},"include_markdown_description":{"type":"boolean","examples":[true],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"To return task descriptions in Markdown format, use `?include_markdown_description=true`."},"custom_fields":{"type":"array","items":{"type":"string"},"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Include tasks with specific values in one or more Custom Fields. Custom Relationships are included.\\\n \\\nFor example: `?custom_fields=[{\"field_id\":\"abcdefghi12345678\",\"operator\":\"=\",\"value\":\"1234\"},{\"field_id\":\"jklmnop123456\",\"operator\":\"<\",\"value\":\"5\"}]`\\\n \\\nOnly set Custom Field values display in the `value` property of the `custom_fields` parameter. If you want to include tasks with specific values in only one Custom Field, use `custom_field` instead.\\\n \\\nLearn more about [filtering using Custom Fields.](doc:filtertasks)"}},"required":[]}]},"response":{"200":{"title":"GetTaskresponse","type":"object","properties":{"id":{"type":"string"},"custom_id":{"type":["string","null"]},"custom_item_id":{"type":["number","null"],"description":"The custom task type ID for this task. A value of `null` represents task type \"Task\".\\\n \\\nTo get a list of available custom task type IDs for your Workspace, use the [Get Custom Task Types endpoint](ref:getcustomitems)."},"name":{"type":"string"},"text_content":{"type":"string"},"description":{"type":"string"},"status":{"title":"Status","required":["status","color","orderindex","type"],"type":"object","properties":{"status":{"type":"string"},"color":{"type":"string"},"orderindex":{"type":"integer","contentEncoding":"int32"},"type":{"type":"string"}}},"orderindex":{"type":"string"},"date_created":{"type":"string"},"date_updated":{"type":"string"},"date_closed":{"type":["string","null"]},"creator":{"title":"Creator","required":["id","username","color","profilePicture"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"color":{"type":"string"},"profilePicture":{"type":"string"}}},"assignees":{"type":"array","items":{"type":"string"},"description":""},"watchers":{"type":"array","items":{"type":"string"},"description":""},"checklists":{"type":"array","items":{"type":"string"},"description":""},"tags":{"type":"array","items":{"type":"string"},"description":""},"parent":{"type":["string","null"]},"priority":{"type":["string","null"]},"due_date":{"type":["string","null"]},"start_date":{"type":["string","null"]},"points":{"type":["number"]},"time_estimate":{"type":["string","null"]},"time_spent":{"type":["string","null"]},"custom_fields":{"type":"array","items":{"title":"CustomFields8","type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string"},"type_config":{"title":"TypeConfig1","type":"object","properties":{"single_user":{"type":"boolean"},"include_groups":{"type":"boolean"},"include_guests":{"type":"boolean"},"include_team_members":{"type":"boolean"}}},"date_created":{"type":"string"},"hide_from_guests":{"type":"boolean"},"value":{"oneOf":[{"title":"Value","type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"email":{"type":"string"},"color":{"type":"string"},"initials":{"type":"string"},"profilePicture":{"type":["string","null"]}}},{"title":"Value1","required":["id","username","email","color","initials","profilePicture"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"email":{"type":"string"},"color":{"type":"string"},"initials":{"type":"string"},"profilePicture":{"type":["string","null"]}}},{"title":"Value2","required":["value"],"type":"object","properties":{"value":{"type":"string"}},"examples":["This is a text CF"]}]},"value_richtext":{"type":"string"},"value_markdown":{"type":"string"},"required":{"type":"boolean"}}},"description":""},"list":{"title":"List","required":["id"],"type":"object","properties":{"id":{"type":"string"}}},"folder":{"title":"Folder","required":["id"],"type":"object","properties":{"id":{"type":"string"}}},"space":{"title":"Space","required":["id"],"type":"object","properties":{"id":{"type":"string"}}},"url":{"type":"string"},"markdown_description":{"type":"string"},"attachments":{"type":"array","items":{"title":"Attachment","type":"object","properties":{"id":{"type":"string"},"date":{"type":"bigint"},"title":{"type":"string"},"type":{"type":"int"},"source":{"type":"int"},"version":{"type":"int"},"extension":{"type":"string"},"thumbnail_small":{"type":"string"},"thumbnail_medium":{"type":"string"},"thumbnail_large":{"type":"string"},"is_folder":{"type":"boolean"},"mimetype":{"type":"string"},"hidden":{"type":"boolean"},"parent_id":{"type":"string"},"size":{"type":"bigint"},"total_comments":{"type":"int"},"resolved_comments":{"type":"int"},"user":{"title":"User2","required":["id","username","initials","email","color","profilePicture"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"initials":{"type":"string"},"email":{"type":"string"},"color":{"type":"string"},"profilePicture":{"type":"string"}}},"deleted":{"type":"boolean"},"orientation":{"type":"string"},"url":{"type":"string"},"email_data":{"type":"object","additionalProperties":true},"url_w_query":{"type":"string"},"url_w_host":{"type":"string"}}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetTaskComments = {"metadata":{"allOf":[{"type":"object","properties":{"task_id":{"type":"string","examples":["9hz"],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["task_id"]},{"type":"object","properties":{"custom_task_ids":{"type":"boolean","examples":[true],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"If you want to reference a task by it's custom task id, this value must be `true`."},"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."},"start":{"type":"integer","contentEncoding":"int32","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Enter the `date` of a task comment using Unix time in milliseconds."},"start_id":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Enter the Comment `id` of a task comment."}},"required":[]}]},"response":{"200":{"title":"GetTaskCommentsresponse","required":["comments"],"type":"object","properties":{"comments":{"type":"array","items":{"title":"Comment","required":["id","comment","comment_text","user","resolved","assignee","assigned_by","reactions","date"],"type":"object","properties":{"id":{"type":"string"},"comment":{"type":"array","items":{"title":"Comment1","required":["text"],"type":"object","properties":{"text":{"type":"string"}}},"description":""},"comment_text":{"type":"string"},"user":{"title":"User2","required":["id","username","initials","email","color","profilePicture"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"initials":{"type":"string"},"email":{"type":"string"},"color":{"type":"string"},"profilePicture":{"type":"string"}}},"resolved":{"type":"boolean"},"assignee":{"title":"Assignee","required":["id","username","email","color","initials","profilePicture"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"email":{"type":"string"},"color":{"type":"string"},"initials":{"type":"string"},"profilePicture":{"type":"string"}}},"assigned_by":{"title":"AssignedBy","required":["id","username","initials","email","color","profilePicture"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"initials":{"type":"string"},"email":{"type":"string"},"color":{"type":"string"},"profilePicture":{"type":"string"}}},"reactions":{"type":"array","items":{"type":"string"},"description":""},"date":{"type":"string"},"reply_count":{"type":"string","description":"For threaded comments, `reply_count` is always 0."}}},"description":""}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetTaskMembers = {"metadata":{"allOf":[{"type":"object","properties":{"task_id":{"type":"string","examples":["9hz"],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["task_id"]}]},"response":{"200":{"title":"GetTaskMembersresponse","required":["members"],"type":"object","properties":{"members":{"type":"array","items":{"title":"Member5","required":["id","username","email","color","initials","profilePicture","profileInfo"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"email":{"type":"string"},"color":{"type":["string","null"]},"initials":{"type":"string"},"profilePicture":{"type":"string"},"profileInfo":{"title":"ProfileInfo","required":["display_profile","verified_ambassador","verified_consultant","top_tier_user","viewed_verified_ambassador","viewed_verified_consultant","viewed_top_tier_user"],"type":"object","properties":{"display_profile":{"type":["string","null"]},"verified_ambassador":{"type":["string","null"]},"verified_consultant":{"type":["string","null"]},"top_tier_user":{"type":["string","null"]},"viewed_verified_ambassador":{"type":["string","null"]},"viewed_verified_consultant":{"type":["string","null"]},"viewed_top_tier_user":{"type":["string","null"]}}}}},"description":""}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetTaskSTimeinStatus = {"metadata":{"allOf":[{"type":"object","properties":{"task_id":{"type":"string","examples":["9hz"],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["task_id"]},{"type":"object","properties":{"custom_task_ids":{"type":"boolean","examples":[true],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"If you want to reference a task by it's custom task id, this value must be `true`."},"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."}},"required":[]},{"type":"object","properties":{"Content-Type":{"const":"application/json","type":"string","examples":["application/json"],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["Content-Type"]}]},"response":{"200":{"title":"GetTasksTimeinStatusresponse","required":["current_status","status_history"],"type":"object","properties":{"current_status":{"title":"CurrentStatus","required":["status","color","total_time"],"type":"object","properties":{"status":{"type":"string"},"color":{"type":"string"},"total_time":{"title":"TotalTime","required":["by_minute","since"],"type":"object","properties":{"by_minute":{"type":"integer","contentEncoding":"int32"},"since":{"type":"string"}}}}},"status_history":{"type":"array","items":{"title":"StatusHistory","required":["status","color","type","total_time","orderindex"],"type":"object","properties":{"status":{"type":"string"},"color":{"type":"string"},"type":{"type":"string"},"total_time":{"title":"TotalTime","required":["by_minute","since"],"type":"object","properties":{"by_minute":{"type":"integer","contentEncoding":"int32"},"since":{"type":"string"}}},"orderindex":{"type":"integer","contentEncoding":"int32"}}},"description":""}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetTaskTemplates = {"metadata":{"allOf":[{"type":"object","properties":{"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Workspace ID"}},"required":["team_id"]},{"type":"object","properties":{"page":{"type":"integer","contentEncoding":"int32","examples":[0],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["page"]},{"type":"object","properties":{"Content-Type":{"const":"application/json","type":"string","examples":["application/json"],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["Content-Type"]}]},"response":{"200":{"title":"GetTaskTemplatesresponse","required":["templates"],"type":"object","properties":{"templates":{"type":"array","items":{"type":"string"},"description":""}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetTasks = {"metadata":{"allOf":[{"type":"object","properties":{"list_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"To find the list_id:<br> 1. In the Sidebar, hover over the List and click the **ellipsis ...** menu.<br> 2. Select **Copy link.**<br> 3. Use the copied URL to find the list_id. The list_id is the number that follows /li in the URL."}},"required":["list_id"]},{"type":"object","properties":{"archived":{"type":"boolean","examples":[false],"$schema":"https://json-schema.org/draft/2020-12/schema"},"include_markdown_description":{"type":"boolean","examples":[true],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"To return task descriptions in Markdown format, use `?include_markdown_description=true`."},"page":{"type":"integer","contentEncoding":"int32","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Page to fetch (starts at 0)."},"order_by":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Order by a particular field. By default, tasks are ordered by `created`.\\\n \\\nOptions include: `id`, `created`, `updated`, and `due_date`."},"reverse":{"type":"boolean","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Tasks are displayed in reverse order."},"subtasks":{"type":"boolean","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Include or exclude subtasks. By default, subtasks are excluded."},"statuses":{"type":"array","items":{"type":"string"},"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Filter by statuses. To include closed tasks, use the `include_closed` parameter. \\\n \\\nFor example: \\\n \\\n`?statuses[]=to%20do&statuses[]=in%20progress`"},"include_closed":{"type":"boolean","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Include or excluse closed tasks. By default, they are excluded.\\\n \\\nTo include closed tasks, use `include_closed: true`."},"assignees":{"type":"array","items":{"type":"string"},"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Filter by Assignees. For example: \\\n \\\n`?assignees[]=1234&assignees[]=5678`"},"watchers":{"type":"array","items":{"type":"string"},"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Filter by watchers."},"tags":{"type":"array","items":{"type":"string"},"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Filter by tags. For example: \\\n \\\n`?tags[]=tag1&tags[]=this%20tag`"},"due_date_gt":{"type":"integer","contentEncoding":"int32","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Filter by due date greater than Unix time in milliseconds."},"due_date_lt":{"type":"integer","contentEncoding":"int32","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Filter by due date less than Unix time in milliseconds."},"date_created_gt":{"type":"integer","contentEncoding":"int32","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Filter by date created greater than Unix time in milliseconds."},"date_created_lt":{"type":"integer","contentEncoding":"int32","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Filter by date created less than Unix time in milliseconds."},"date_updated_gt":{"type":"integer","contentEncoding":"int32","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Filter by date updated greater than Unix time in milliseconds."},"date_updated_lt":{"type":"integer","contentEncoding":"int32","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Filter by date updated less than Unix time in milliseconds."},"date_done_gt":{"type":"integer","contentEncoding":"int32","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Filter by date done greater than Unix time in milliseconds."},"date_done_lt":{"type":"integer","contentEncoding":"int32","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Filter by date done less than Unix time in milliseconds."},"custom_fields":{"type":"array","items":{"type":"string"},"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Include tasks with specific values in one or more Custom Fields. Custom Relationships are included.\\\n \\\nFor example: `?custom_fields=[{\"field_id\":\"abcdefghi12345678\",\"operator\":\"=\",\"value\":\"1234\"},{\"field_id\":\"jklmnop123456\",\"operator\":\"<\",\"value\":\"5\"}]`\\\n \\\nOnly set Custom Field values display in the `value` property of the `custom_fields` parameter. If you want to include tasks with specific values in only one Custom Field, use `custom_field` instead.\\\n \\\nLearn more about [filtering using Custom Fields.](doc:filtertasks)"},"custom_field":{"type":"array","items":{"type":"string"},"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Include tasks with specific values in only one Custom Field. This Custom Field can be a Custom Relationship."},"custom_items":{"type":"array","items":{"type":"number"},"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Filter by custom task types. For example: \\\n \\\n`?custom_items[]=0&custom_items[]=1300` \\\n \\\nIncluding `0` returns tasks. Including `1` returns Milestones. Including any other number returns the custom task type as defined in your Workspace."}},"required":[]}]},"response":{"200":{"title":"GetViewTasksresponse","required":["tasks","last_page"],"type":"object","properties":{"tasks":{"type":"array","items":{"title":"Task9","required":["id","custom_item_id","name","status","orderindex","date_created","date_updated","date_closed","date_done","creator","assignees","watchers","checklists","tags","parent","priority","due_date","start_date","points","time_estimate","time_spent","list","folder","space","url"],"type":"object","properties":{"id":{"type":"string"},"custom_item_id":{"type":["number","null"]},"name":{"type":"string"},"status":{"title":"Status","required":["status","color","orderindex","type"],"type":"object","properties":{"status":{"type":"string"},"color":{"type":"string"},"orderindex":{"type":"integer","contentEncoding":"int32"},"type":{"type":"string"}}},"markdown_description":{"type":"string"},"orderindex":{"type":"string"},"date_created":{"type":"string"},"date_updated":{"type":"string"},"date_closed":{"type":["string","null"]},"date_done":{"type":["string","null"]},"creator":{"title":"Creator","required":["id","username","color","profilePicture"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"color":{"type":"string"},"profilePicture":{"type":"string"}}},"assignees":{"type":"array","items":{"type":"string"},"description":""},"watchers":{"type":"array","items":{"type":"string"},"description":""},"checklists":{"type":"array","items":{"type":"string"},"description":""},"tags":{"type":"array","items":{"type":"string"},"description":""},"parent":{"type":["string","null"]},"priority":{"type":["string","null"]},"due_date":{"type":["string","null"]},"start_date":{"type":["string","null"]},"points":{"type":["number"]},"time_estimate":{"type":["string","null"]},"time_spent":{"type":["string","null"]},"custom_fields":{"title":"CustomFields8","type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string"},"type_config":{"title":"TypeConfig1","type":"object","properties":{"single_user":{"type":"boolean"},"include_groups":{"type":"boolean"},"include_guests":{"type":"boolean"},"include_team_members":{"type":"boolean"}}},"date_created":{"type":"string"},"hide_from_guests":{"type":"boolean"},"value":{"oneOf":[{"title":"Value","type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"email":{"type":"string"},"color":{"type":"string"},"initials":{"type":"string"},"profilePicture":{"type":["string","null"]}}},{"title":"Value1","required":["id","username","email","color","initials","profilePicture"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"email":{"type":"string"},"color":{"type":"string"},"initials":{"type":"string"},"profilePicture":{"type":["string","null"]}}},{"title":"Value2","required":["value"],"type":"object","properties":{"value":{"type":"string"}},"examples":["This is a text CF"]}]},"value_richtext":{"type":"string"},"value_markdown":{"type":"string"},"required":{"type":"boolean"}}},"list":{"title":"List","required":["id"],"type":"object","properties":{"id":{"type":"string"}}},"folder":{"title":"Folder","required":["id"],"type":"object","properties":{"id":{"type":"string"}}},"space":{"title":"Space","required":["id"],"type":"object","properties":{"id":{"type":"string"}}},"url":{"type":"string"}}},"description":""},"last_page":{"type":"boolean"}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetTeamAvailableFields = {"metadata":{"allOf":[{"type":"object","properties":{"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Workspace ID"}},"required":["team_id"]},{"type":"object","properties":{"Content-Type":{"const":"application/json","type":"string","examples":["application/json"],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["Content-Type"]}]},"response":{"200":{"title":"GetTeamAvailableFieldsresponse","required":["fields"],"type":"object","properties":{"fields":{"type":"array","items":{"title":"Field","required":["id","name","type","type_config","date_created","hide_from_guests"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string"},"type_config":{"title":"TypeConfig","type":"object","properties":{"options":{"type":"array","items":{"title":"Option","required":["id","color"],"type":"object","properties":{"id":{"type":"string"},"label":{"type":"string"},"color":{"type":["string","null"]},"name":{"type":"string"},"value":{"type":"integer","contentEncoding":"int32"},"type":{"type":"string"},"orderindex":{"type":"integer","contentEncoding":"int32"}}},"description":""},"default":{"oneOf":[{"type":["string","null"]},{"type":"integer","contentEncoding":"int32"},{}]},"precision":{"type":"integer","contentEncoding":"int32"},"currency_type":{"type":"string"},"placeholder":{"type":["string","null"]},"end":{"type":"integer","contentEncoding":"int32"},"start":{"type":"integer","contentEncoding":"int32"},"count":{"type":"integer","contentEncoding":"int32"},"code_point":{"type":"string"},"tracking":{"title":"Tracking","required":["subtasks","checklists","assigned_comments"],"type":"object","properties":{"subtasks":{"type":"boolean"},"checklists":{"type":"boolean"},"assigned_comments":{"type":"boolean"}}},"complete_on":{"type":"integer","contentEncoding":"int32"}}},"date_created":{"type":"string"},"hide_from_guests":{"type":"boolean"}}},"description":""}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetTeamViews = {"metadata":{"allOf":[{"type":"object","properties":{"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Workspace ID"}},"required":["team_id"]}]},"response":{"200":{"title":"GetTeamViewsresponse","required":["views"],"type":"object","properties":{"views":{"type":"array","items":{"title":"View","required":["id","name","type","parent","grouping","divide","sorting","filters","columns","team_sidebar","settings"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string"},"parent":{"title":"Parent","description":"The parent parameter specifies where the view is located in the ClickUp Hierarchy. Both `id` and `type` are required. \\\n \\\nThe `id` is the id of the Workspace, Space, Folder, or List where the view is located. \\\n \\\nThe `type` value indciates the level of the Hierarchy where the view is located.","required":["id","type"],"type":"object","properties":{"id":{"type":"string","description":"The id of the Workspace, Space, Folder, or List where the view is located."},"type":{"type":"integer","description":"The level of the Hierarchy where the view is created. \\\n \\\nOptions include: \\\n \\\nWorkspace (Everything Level): `7` \\\n \\\nSpace: `4` \\\n \\\nFolder: `5` \\\n \\\nList: `6`","contentEncoding":"int32"}}},"grouping":{"title":"Grouping","required":["field","dir","collapsed","ignore"],"type":"object","properties":{"field":{"type":"string","description":"Set the field to group by.\\\n \\\nOptions include: `none`, `status`, `priority`, `assignee`, `tag`, or `dueDate`."},"dir":{"description":"Set a group sort order using `1` or `-1`.\\\n \\\nFor example, use `1`show tasks with urgent priority at the top of your view, and tasks with no priority at the bottom.\\\n \\\nUse `-1` to reverse the order to show tasks with no priority at the top of your view.","type":"integer","contentEncoding":"int32"},"collapsed":{"type":"array","items":{"type":"string"},"description":""},"ignore":{"type":"boolean"}}},"divide":{"title":"Divide","required":["collapsed"],"type":"object","properties":{"field":{"type":["null"]},"dir":{"type":["null"]},"collapsed":{"type":["boolean"]}}},"sorting":{"title":"Sorting","required":["fields"],"type":"object","properties":{"fields":{"type":"array","items":{"type":"string"},"description":"Include an array of fields to sort by.\\\n \\\n You can sort by the same fields available when [filtering a view](doc:filter-views)."}}},"filters":{"title":"Filters","required":["op","fields","search","show_closed"],"type":"object","properties":{"op":{"type":"string","description":"The available operator (`op``) values are `AND`` and `OR``."},"fields":{"type":"array","items":{"type":"string"},"description":"View the list of [fields available](doc:filter-views) to filter by."},"search":{"type":"string"},"show_closed":{"type":"boolean"}}},"columns":{"title":"Columns","description":"Custom Fields added to a view at the Everything level will be added to all tasks in your Workspace. Once Custom Fields are added to one of these views, you cannot move it to another level of the Hierarchy.","required":["fields"],"type":"object","properties":{"fields":{"description":"Custom Fields require the `_cf` prefix and must be formatted as a JSON object.","type":"array","items":{"type":"string"}}}},"team_sidebar":{"title":"TeamSidebar","required":["assignees","assigned_comments","unassigned_tasks"],"type":"object","properties":{"assignees":{"type":"array","items":{"type":"string"},"description":""},"assigned_comments":{"type":"boolean"},"unassigned_tasks":{"type":"boolean"}}},"settings":{"title":"Settings","required":["show_task_locations","show_subtasks","show_subtask_parent_names","show_closed_subtasks","show_assignees","show_images","collapse_empty_columns","me_comments","me_subtasks","me_checklists"],"type":"object","properties":{"show_task_locations":{"type":"boolean"},"show_subtasks":{"description":"Acceptable values are `1`, `2`, or `3`, which show subtasks separate, expanded, or collapsed.","type":"integer","contentEncoding":"int32"},"show_subtask_parent_names":{"type":"boolean"},"show_closed_subtasks":{"type":"boolean"},"show_assignees":{"type":"boolean"},"show_images":{"type":"boolean"},"collapse_empty_columns":{"type":["string","null"]},"me_comments":{"type":"boolean"},"me_subtasks":{"type":"boolean"},"me_checklists":{"type":"boolean"}}}}},"description":""}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetTeams1 = {"metadata":{"allOf":[{"type":"object","properties":{"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Workspace ID"},"group_ids":{"type":"string","examples":["C9C58BE9-7C73-4002-A6A9-310014852858"],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Enter one or more User Group IDs to retrieve information about specific User Group."}},"required":["team_id"]}]},"response":{"200":{"title":"GetTeamsresponse","required":["groups"],"type":"object","properties":{"groups":{"type":"array","items":{"title":"Group","required":["id","team_id","userid","name","handle","date_created","initials","members","avatar"],"type":"object","properties":{"id":{"type":"string"},"team_id":{"type":"string"},"userid":{"type":"integer","contentEncoding":"int32"},"name":{"type":"string"},"handle":{"type":"string"},"date_created":{"type":"string"},"initials":{"type":"string"},"members":{"type":"array","items":{"title":"Members3","required":["id","username","email","color","initials","profilePicture"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"email":{"type":"string"},"color":{"type":"string"},"initials":{"type":"string"},"profilePicture":{"type":["string","null"]}}},"description":""},"avatar":{"title":"Avatar","required":["attachment_id","color","source","icon"],"type":"object","properties":{"attachment_id":{"type":["string","null"]},"color":{"type":["string","null"]},"source":{"type":["string","null"]},"icon":{"type":["string","null"]}}}}},"description":""}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetThreadedComments = {"metadata":{"allOf":[{"type":"object","properties":{"comment_id":{"type":"number","contentEncoding":"double","examples":[456],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["comment_id"]}]},"response":{"200":{"title":"GetTaskCommentsresponse","required":["comments"],"type":"object","properties":{"comments":{"type":"array","items":{"title":"Comment","required":["id","comment","comment_text","user","resolved","assignee","assigned_by","reactions","date"],"type":"object","properties":{"id":{"type":"string"},"comment":{"type":"array","items":{"title":"Comment1","required":["text"],"type":"object","properties":{"text":{"type":"string"}}},"description":""},"comment_text":{"type":"string"},"user":{"title":"User2","required":["id","username","initials","email","color","profilePicture"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"initials":{"type":"string"},"email":{"type":"string"},"color":{"type":"string"},"profilePicture":{"type":"string"}}},"resolved":{"type":"boolean"},"assignee":{"title":"Assignee","required":["id","username","email","color","initials","profilePicture"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"email":{"type":"string"},"color":{"type":"string"},"initials":{"type":"string"},"profilePicture":{"type":"string"}}},"assigned_by":{"title":"AssignedBy","required":["id","username","initials","email","color","profilePicture"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"initials":{"type":"string"},"email":{"type":"string"},"color":{"type":"string"},"profilePicture":{"type":"string"}}},"reactions":{"type":"array","items":{"type":"string"},"description":""},"date":{"type":"string"},"reply_count":{"type":"string","description":"For threaded comments, `reply_count` is always 0."}}},"description":""}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetUser = {"metadata":{"allOf":[{"type":"object","properties":{"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Workspace ID"},"user_id":{"type":"number","contentEncoding":"double","examples":[403],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["team_id","user_id"]},{"type":"object","properties":{"include_shared":{"type":"boolean","examples":[false],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Exclude details of items shared with the guest by setting this parameter to `false`. By default this parameter is set to `true`."}},"required":[]}]},"response":{"200":{"title":"GetUserresponse","type":"object","properties":{"member":{"title":"Member7","type":"object","properties":{"user":{"title":"User21","type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"email":{"type":"string"},"color":{"type":["string","null"]},"profilePicture":{"type":["string","null"]},"initials":{"type":"string"},"role":{"description":"Owner = 1, Admin = 2, Member = 3, Guest = 4","type":"integer","contentEncoding":"int32"},"custom_role":{"title":"CustomRole","required":["id","name"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"name":{"type":"string"}}},"last_active":{"type":["string","null"]},"date_joined":{"type":["string","null"]},"date_invited":{"type":"string"}}},"invited_by":{"title":"InvitedBy","type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"color":{"type":"string"},"username":{"type":"string"},"email":{"type":"string"},"initials":{"type":"string"},"profilePicture":{"type":"string"}}},"shared":{"title":"Shared","type":"object","properties":{"tasks":{"type":"array","items":{"type":"string"},"description":""},"lists":{"type":"array","items":{"type":"string"},"description":""},"folders":{"type":"array","items":{"type":"string"},"description":""}}}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetView = {"metadata":{"allOf":[{"type":"object","properties":{"view_id":{"type":"string","examples":["3c-105"],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["view_id"]}]},"response":{"200":{"title":"GetViewresponse","required":["view"],"type":"object","properties":{"view":{"title":"View","required":["id","name","type","parent","grouping","divide","sorting","filters","columns","team_sidebar","settings"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string"},"parent":{"title":"Parent","description":"The parent parameter specifies where the view is located in the ClickUp Hierarchy. Both `id` and `type` are required. \\\n \\\nThe `id` is the id of the Workspace, Space, Folder, or List where the view is located. \\\n \\\nThe `type` value indciates the level of the Hierarchy where the view is located.","required":["id","type"],"type":"object","properties":{"id":{"type":"string","description":"The id of the Workspace, Space, Folder, or List where the view is located."},"type":{"type":"integer","description":"The level of the Hierarchy where the view is created. \\\n \\\nOptions include: \\\n \\\nWorkspace (Everything Level): `7` \\\n \\\nSpace: `4` \\\n \\\nFolder: `5` \\\n \\\nList: `6`","contentEncoding":"int32"}}},"grouping":{"title":"Grouping","required":["field","dir","collapsed","ignore"],"type":"object","properties":{"field":{"type":"string","description":"Set the field to group by.\\\n \\\nOptions include: `none`, `status`, `priority`, `assignee`, `tag`, or `dueDate`."},"dir":{"description":"Set a group sort order using `1` or `-1`.\\\n \\\nFor example, use `1`show tasks with urgent priority at the top of your view, and tasks with no priority at the bottom.\\\n \\\nUse `-1` to reverse the order to show tasks with no priority at the top of your view.","type":"integer","contentEncoding":"int32"},"collapsed":{"type":"array","items":{"type":"string"},"description":""},"ignore":{"type":"boolean"}}},"divide":{"title":"Divide","required":["collapsed"],"type":"object","properties":{"field":{"type":["null"]},"dir":{"type":["null"]},"collapsed":{"type":["boolean"]}}},"sorting":{"title":"Sorting","required":["fields"],"type":"object","properties":{"fields":{"type":"array","items":{"type":"string"},"description":"Include an array of fields to sort by.\\\n \\\n You can sort by the same fields available when [filtering a view](doc:filter-views)."}}},"filters":{"title":"Filters","required":["op","fields","search","show_closed"],"type":"object","properties":{"op":{"type":"string","description":"The available operator (`op``) values are `AND`` and `OR``."},"fields":{"type":"array","items":{"type":"string"},"description":"View the list of [fields available](doc:filter-views) to filter by."},"search":{"type":"string"},"show_closed":{"type":"boolean"}}},"columns":{"title":"Columns","description":"Custom Fields added to a view at the Everything level will be added to all tasks in your Workspace. Once Custom Fields are added to one of these views, you cannot move it to another level of the Hierarchy.","required":["fields"],"type":"object","properties":{"fields":{"description":"Custom Fields require the `_cf` prefix and must be formatted as a JSON object.","type":"array","items":{"type":"string"}}}},"team_sidebar":{"title":"TeamSidebar","required":["assignees","assigned_comments","unassigned_tasks"],"type":"object","properties":{"assignees":{"type":"array","items":{"type":"string"},"description":""},"assigned_comments":{"type":"boolean"},"unassigned_tasks":{"type":"boolean"}}},"settings":{"title":"Settings","required":["show_task_locations","show_subtasks","show_subtask_parent_names","show_closed_subtasks","show_assignees","show_images","collapse_empty_columns","me_comments","me_subtasks","me_checklists"],"type":"object","properties":{"show_task_locations":{"type":"boolean"},"show_subtasks":{"description":"Acceptable values are `1`, `2`, or `3`, which show subtasks separate, expanded, or collapsed.","type":"integer","contentEncoding":"int32"},"show_subtask_parent_names":{"type":"boolean"},"show_closed_subtasks":{"type":"boolean"},"show_assignees":{"type":"boolean"},"show_images":{"type":"boolean"},"collapse_empty_columns":{"type":["string","null"]},"me_comments":{"type":"boolean"},"me_subtasks":{"type":"boolean"},"me_checklists":{"type":"boolean"}}}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetViewTasks = {"metadata":{"allOf":[{"type":"object","properties":{"view_id":{"type":"string","examples":["3c"],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"105 (string)"}},"required":["view_id"]},{"type":"object","properties":{"page":{"type":"integer","contentEncoding":"int32","examples":[0],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["page"]}]},"response":{"200":{"title":"GetViewTasksresponse","required":["tasks","last_page"],"type":"object","properties":{"tasks":{"type":"array","items":{"title":"Task9","required":["id","custom_item_id","name","status","orderindex","date_created","date_updated","date_closed","date_done","creator","assignees","watchers","checklists","tags","parent","priority","due_date","start_date","points","time_estimate","time_spent","list","folder","space","url"],"type":"object","properties":{"id":{"type":"string"},"custom_item_id":{"type":["number","null"]},"name":{"type":"string"},"status":{"title":"Status","required":["status","color","orderindex","type"],"type":"object","properties":{"status":{"type":"string"},"color":{"type":"string"},"orderindex":{"type":"integer","contentEncoding":"int32"},"type":{"type":"string"}}},"markdown_description":{"type":"string"},"orderindex":{"type":"string"},"date_created":{"type":"string"},"date_updated":{"type":"string"},"date_closed":{"type":["string","null"]},"date_done":{"type":["string","null"]},"creator":{"title":"Creator","required":["id","username","color","profilePicture"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"color":{"type":"string"},"profilePicture":{"type":"string"}}},"assignees":{"type":"array","items":{"type":"string"},"description":""},"watchers":{"type":"array","items":{"type":"string"},"description":""},"checklists":{"type":"array","items":{"type":"string"},"description":""},"tags":{"type":"array","items":{"type":"string"},"description":""},"parent":{"type":["string","null"]},"priority":{"type":["string","null"]},"due_date":{"type":["string","null"]},"start_date":{"type":["string","null"]},"points":{"type":["number"]},"time_estimate":{"type":["string","null"]},"time_spent":{"type":["string","null"]},"custom_fields":{"title":"CustomFields8","type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string"},"type_config":{"title":"TypeConfig1","type":"object","properties":{"single_user":{"type":"boolean"},"include_groups":{"type":"boolean"},"include_guests":{"type":"boolean"},"include_team_members":{"type":"boolean"}}},"date_created":{"type":"string"},"hide_from_guests":{"type":"boolean"},"value":{"oneOf":[{"title":"Value","type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"email":{"type":"string"},"color":{"type":"string"},"initials":{"type":"string"},"profilePicture":{"type":["string","null"]}}},{"title":"Value1","required":["id","username","email","color","initials","profilePicture"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"email":{"type":"string"},"color":{"type":"string"},"initials":{"type":"string"},"profilePicture":{"type":["string","null"]}}},{"title":"Value2","required":["value"],"type":"object","properties":{"value":{"type":"string"}},"examples":["This is a text CF"]}]},"value_richtext":{"type":"string"},"value_markdown":{"type":"string"},"required":{"type":"boolean"}}},"list":{"title":"List","required":["id"],"type":"object","properties":{"id":{"type":"string"}}},"folder":{"title":"Folder","required":["id"],"type":"object","properties":{"id":{"type":"string"}}},"space":{"title":"Space","required":["id"],"type":"object","properties":{"id":{"type":"string"}}},"url":{"type":"string"}}},"description":""},"last_page":{"type":"boolean"}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetWebhooks = {"metadata":{"allOf":[{"type":"object","properties":{"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Workspace ID"}},"required":["team_id"]}]},"response":{"200":{"title":"GetWebhooksresponse","required":["webhooks"],"type":"object","properties":{"webhooks":{"type":"array","items":{"title":"Webhook","required":["id","userid","team_id","endpoint","client_id","events","task_id","list_id","folder_id","space_id","health","secret"],"type":"object","properties":{"id":{"type":"string"},"userid":{"type":"integer","contentEncoding":"int32"},"team_id":{"type":"integer","contentEncoding":"int32"},"endpoint":{"type":"string"},"client_id":{"type":"string"},"events":{"type":"array","items":{"type":"string"},"description":""},"task_id":{"type":["string","null"]},"list_id":{"type":["string","null"]},"folder_id":{"type":["string","null"]},"space_id":{"type":["string","null"]},"health":{"title":"Health","required":["status","fail_count"],"type":"object","properties":{"status":{"type":"string"},"fail_count":{"type":"integer","contentEncoding":"int32"}}},"secret":{"type":"string"}}},"description":""}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetWorkspaceplan = {"metadata":{"allOf":[{"type":"object","properties":{"team_id":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Workspace ID"}},"required":["team_id"]}]},"response":{"200":{"title":"GetWorkspaceplanresponse","type":"object","properties":{"plan_name":{"type":"string"},"plan_id":{"type":"integer"}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const GetWorkspaceseats = {"metadata":{"allOf":[{"type":"object","properties":{"team_id":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Workspace ID"}},"required":["team_id"]}]},"response":{"200":{"title":"GetWorkspaceseatsresponse","required":["members","guests"],"type":"object","properties":{"members":{"title":"Members","required":["filled_members_seats","total_member_seats","empty_member_seats"],"type":"object","properties":{"filled_members_seats":{"type":"integer","contentEncoding":"int32"},"total_member_seats":{"type":"integer","contentEncoding":"int32"},"empty_member_seats":{"type":"integer","contentEncoding":"int32"}}},"guests":{"title":"Guests","required":["filled_guest_seats","total_guest_seats","empty_guest_seats"],"type":"object","properties":{"filled_guest_seats":{"type":"integer","contentEncoding":"int32"},"total_guest_seats":{"type":"integer","contentEncoding":"int32"},"empty_guest_seats":{"type":"integer","contentEncoding":"int32"}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const Getalltagsfromtimeentries = {"metadata":{"allOf":[{"type":"object","properties":{"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Workspace ID"}},"required":["team_id"]},{"type":"object","properties":{"Content-Type":{"const":"application/json","type":"string","examples":["application/json"],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["Content-Type"]}]},"response":{"200":{"title":"Getalltagsfromtimeentriesresponse","required":["data"],"type":"object","properties":{"data":{"type":"array","items":{"title":"Data1","required":["name","creator","tag_bg","tag_fg"],"type":"object","properties":{"name":{"type":"string"},"creator":{"type":"integer","contentEncoding":"int32"},"tag_bg":{"type":"string"},"tag_fg":{"type":"string"}}},"description":""}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const Getrunningtimeentry = {"metadata":{"allOf":[{"type":"object","properties":{"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Workspace ID"}},"required":["team_id"]},{"type":"object","properties":{"assignee":{"type":"number","contentEncoding":"double","$schema":"https://json-schema.org/draft/2020-12/schema","description":"user id"}},"required":[]},{"type":"object","properties":{"Content-Type":{"const":"application/json","type":"string","examples":["application/json"],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["Content-Type"]}]},"response":{"200":{"title":"Getrunningtimeentryresponse","required":["data"],"type":"object","properties":{"data":{"title":"Data","required":["id","task","wid","user","billable","start","duration","description","tags","at"],"type":"object","properties":{"id":{"type":"string"},"task":{"title":"Task5","required":["id","name","status"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"status":{"title":"Status","required":["status","color","orderindex","type"],"type":"object","properties":{"status":{"type":"string"},"color":{"type":"string"},"orderindex":{"type":"integer","contentEncoding":"int32"},"type":{"type":"string"}}}}},"wid":{"type":"string"},"user":{"title":"User2","required":["id","username","initials","email","color","profilePicture"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"initials":{"type":"string"},"email":{"type":"string"},"color":{"type":"string"},"profilePicture":{"type":"string"}}},"billable":{"type":"boolean"},"start":{"type":"string"},"duration":{"type":"integer","contentEncoding":"int32"},"description":{"type":"string"},"tags":{"type":"array","items":{"type":"string"},"description":""},"at":{"type":"string"}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const Getsingulartimeentry = {"metadata":{"allOf":[{"type":"object","properties":{"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Workspace ID"},"timer_id":{"type":"string","examples":["1963465985517105840"],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of a time entry. \\\n \\\nThis can be found using the [Get Time Entries Within a Date Range](ref:gettimeentrieswithinadaterange) endpoint."}},"required":["team_id","timer_id"]},{"type":"object","properties":{"include_task_tags":{"type":"boolean","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Include task tags in the response for time entries associated with tasks."},"include_location_names":{"type":"boolean","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Include the names of the List, Folder, and Space along with `list_id`,`folder_id`, and `space_id`."}},"required":[]},{"type":"object","properties":{"Content-Type":{"const":"application/json","type":"string","examples":["application/json"],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["Content-Type"]}]},"response":{"200":{"title":"Getsingulartimeentryresponse","required":["data"],"type":"object","properties":{"data":{"type":"array","items":{"title":"Datum2","required":["id","wid","user","billable","start","end","duration","description","tags","source","at","task_location","task_tags","task_url"],"type":"object","properties":{"id":{"type":"string"},"wid":{"type":"string"},"user":{"title":"User2","required":["id","username","initials","email","color","profilePicture"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"initials":{"type":"string"},"email":{"type":"string"},"color":{"type":"string"},"profilePicture":{"type":"string"}}},"billable":{"type":"boolean"},"start":{"type":"string"},"end":{"type":"string"},"duration":{"type":"string"},"description":{"type":"string"},"tags":{"type":"array","items":{"type":"string"},"description":""},"source":{"type":"string"},"at":{"type":"string"},"task_location":{"title":"TaskLocation","required":["list_id","folder_id","space_id","list_name","folder_name","space_name"],"type":"object","properties":{"list_id":{"type":"integer","contentEncoding":"int32"},"folder_id":{"type":"integer","contentEncoding":"int32"},"space_id":{"type":"integer","contentEncoding":"int32"},"list_name":{"type":"string"},"folder_name":{"type":"string"},"space_name":{"type":"string"}}},"task_tags":{"type":"array","items":{"title":"TaskTag","required":["name","tag_fg","tag_bg","creator"],"type":"object","properties":{"name":{"type":"string"},"tag_fg":{"type":"string"},"tag_bg":{"type":"string"},"creator":{"type":"integer","contentEncoding":"int32"}}},"description":""},"task_url":{"type":"string"}}},"description":""}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const Gettimeentrieswithinadaterange = {"metadata":{"allOf":[{"type":"object","properties":{"team_Id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Workspace ID"}},"required":["team_Id"]},{"type":"object","properties":{"start_date":{"type":"number","contentEncoding":"double","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Unix time in milliseconds"},"end_date":{"type":"number","contentEncoding":"double","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Unix time in milliseconds"},"assignee":{"type":"number","contentEncoding":"double","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Filter by `user_id`. For multiple assignees, separate `user_id` using commas.\\\n \\\n **Example:** `assignee=1234,9876`\\\n \\\n***Note:** Only Workspace Owners/Admins have access to do this.*"},"include_task_tags":{"type":"boolean","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Include task tags in the response for time entries associated with tasks."},"include_location_names":{"type":"boolean","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Include the names of the List, Folder, and Space along with the `list_id`,`folder_id`, and `space_id`."},"space_id":{"type":"number","contentEncoding":"double","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Only include time entries associated with tasks in a specific Space."},"folder_id":{"type":"number","contentEncoding":"double","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Only include time entries associated with tasks in a specific Folder."},"list_id":{"type":"number","contentEncoding":"double","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Only include time entries associated with tasks in a specific List."},"task_id":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Only include time entries associated with a specific task."},"custom_task_ids":{"type":"boolean","examples":[true],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"If you want to reference a task by it's custom task id, this value must be `true`."},"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."},"is_billable":{"type":"boolean","examples":[true],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Include only billable time entries by using a value of `true` or only non-billable time entries by using a value of `false`.\\\n \\\nFor example: `?is_billable=true`."}},"required":[]},{"type":"object","properties":{"Content-Type":{"const":"application/json","type":"string","examples":["application/json"],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["Content-Type"]}]},"response":{"200":{"title":"Gettimeentrieswithinadaterangeresponse","required":["data"],"type":"object","properties":{"data":{"type":"array","items":{"title":"Datum1","required":["id","task","wid","user","billable","start","end","duration","description","tags","source","at","task_location","task_tags","task_url"],"type":"object","properties":{"id":{"type":"string"},"task":{"title":"Task4","required":["id","custom_id","name","status","custom_type"],"type":"object","properties":{"id":{"type":"string"},"custom_id":{"type":"string"},"name":{"type":"string"},"status":{"title":"Status","required":["status","color","orderindex","type"],"type":"object","properties":{"status":{"type":"string"},"color":{"type":"string"},"orderindex":{"type":"integer","contentEncoding":"int32"},"type":{"type":"string"}}},"custom_type":{"type":["string","null"]}}},"wid":{"type":"string"},"user":{"title":"User2","required":["id","username","initials","email","color","profilePicture"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"initials":{"type":"string"},"email":{"type":"string"},"color":{"type":"string"},"profilePicture":{"type":"string"}}},"billable":{"type":"boolean"},"start":{"type":"string"},"end":{"type":"string"},"duration":{"type":"string"},"description":{"type":"string"},"tags":{"type":"array","items":{"type":"string"},"description":""},"source":{"type":"string"},"at":{"type":"string"},"task_location":{"title":"TaskLocation","required":["list_id","folder_id","space_id","list_name","folder_name","space_name"],"type":"object","properties":{"list_id":{"type":"integer","contentEncoding":"int32"},"folder_id":{"type":"integer","contentEncoding":"int32"},"space_id":{"type":"integer","contentEncoding":"int32"},"list_name":{"type":"string"},"folder_name":{"type":"string"},"space_name":{"type":"string"}}},"task_tags":{"type":"array","items":{"title":"TaskTag","required":["name","tag_fg","tag_bg","creator"],"type":"object","properties":{"name":{"type":"string"},"tag_fg":{"type":"string"},"tag_bg":{"type":"string"},"creator":{"type":"integer","contentEncoding":"int32"}}},"description":""},"task_url":{"type":"string"}}},"description":""}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const Gettimeentryhistory = {"metadata":{"allOf":[{"type":"object","properties":{"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Workspace ID"},"timer_id":{"type":"string","examples":["1963465985517105840"],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of a time entry. \\\n \\\nThis can be found using the [Get Time Entries Within a Date Range](ref:gettimeentrieswithinadaterange) endpoint."}},"required":["team_id","timer_id"]},{"type":"object","properties":{"Content-Type":{"const":"application/json","type":"string","examples":["application/json"],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["Content-Type"]}]},"response":{"200":{"type":"object","contentMediaType":"application/json","additionalProperties":true,"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const Gettrackedtime = {"metadata":{"allOf":[{"type":"object","properties":{"task_id":{"type":"string","examples":["9hv"],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["task_id"]},{"type":"object","properties":{"custom_task_ids":{"type":"boolean","examples":[true],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"If you want to reference a task by it's custom task id, this value must be `true`."},"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."}},"required":[]},{"type":"object","properties":{"Content-Type":{"const":"application/json","type":"string","examples":["application/json"],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["Content-Type"]}]},"response":{"200":{"title":"Gettrackedtimeresponse","required":["data"],"type":"object","properties":{"data":{"type":"array","items":{"title":"Datum","required":["user","time","intervals"],"type":"object","properties":{"user":{"title":"User13","required":["id","username","email","color","initials","profilePicture"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"email":{"type":"string"},"color":{"type":"string"},"initials":{"type":"string"},"profilePicture":{"type":["string","null"]}}},"time":{"type":"integer","contentEncoding":"int32"},"intervals":{"type":"array","items":{"title":"Interval","required":["id","start","end","time","source","date_added"],"type":"object","properties":{"id":{"type":"string"},"start":{"type":["string","null"]},"end":{"type":["string","null"]},"time":{"type":"string"},"source":{"type":"string"},"date_added":{"type":"string"}}},"description":""}}},"description":""}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const InviteGuestToWorkspace = {"body":{"title":"InviteGuestToWorkspacerequest","required":["email","can_edit_tags","can_see_time_spent","can_see_time_estimated","can_create_views","custom_role_id"],"type":"object","properties":{"email":{"type":"string","examples":["guest@example.com"]},"can_edit_tags":{"type":"boolean","examples":[true]},"can_see_time_spent":{"type":"boolean","examples":[true]},"can_see_time_estimated":{"type":"boolean","examples":[true]},"can_create_views":{"type":"boolean","examples":[true]},"custom_role_id":{"type":"integer","contentEncoding":"int32","examples":[12345]}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Workspace ID"}},"required":["team_id"]}]},"response":{"200":{"title":"InviteGuestToWorkspaceresponse","required":["team"],"type":"object","properties":{"team":{"title":"Team1","required":["id","name","color","avatar","members","roles"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"color":{"type":"string"},"avatar":{"type":["string","null"]},"members":{"type":"array","items":{"title":"Member4","required":["user","invited_by","can_see_time_spent","can_see_time_estimated","can_edit_tags","can_create_views"],"type":"object","properties":{"user":{"title":"User5","required":["id","username","email","color","profilePicture","initials","role","custom_role","last_active","date_joined","date_invited"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":["string","null"]},"email":{"type":"string"},"color":{"type":["string","null"]},"profilePicture":{"type":["string","null"]},"initials":{"type":"string"},"role":{"type":"integer","contentEncoding":"int32"},"custom_role":{"title":"CustomRole","required":["id","name"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"name":{"type":"string"}}},"last_active":{"type":["string","null"]},"date_joined":{"type":["string","null"]},"date_invited":{"type":"string"}}},"invited_by":{"title":"InvitedBy","type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"color":{"type":"string"},"username":{"type":"string"},"email":{"type":"string"},"initials":{"type":"string"},"profilePicture":{"type":"string"}}},"can_see_time_spent":{"type":"boolean"},"can_see_time_estimated":{"type":"boolean"},"can_edit_tags":{"type":"boolean"},"can_create_views":{"type":"boolean"}}},"description":""},"roles":{"type":"array","items":{"title":"Role","required":["id","name","custom"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"name":{"type":"string"},"custom":{"type":"boolean"},"inherited_role":{"type":"integer","contentEncoding":"int32"}}},"description":""}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const InviteUserToWorkspace = {"body":{"title":"InviteUserToWorkspacerequest","required":["email","admin"],"type":"object","properties":{"email":{"type":"string","examples":["user@example.com"]},"admin":{"type":"boolean","examples":[true]},"custom_role_id":{"type":"integer","contentEncoding":"int32"}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Workspace ID"}},"required":["team_id"]}]},"response":{"200":{"title":"InviteUserToWorkspaceresponse","required":["team"],"type":"object","properties":{"team":{"title":"Team3","required":["id","name","color","avatar","members","roles"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"color":{"type":"string"},"avatar":{"type":["string","null"]},"members":{"type":"array","items":{"title":"Members5","required":["user","invited_by"],"type":"object","properties":{"user":{"title":"User5","required":["id","username","email","color","profilePicture","initials","role","custom_role","last_active","date_joined","date_invited"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":["string","null"]},"email":{"type":"string"},"color":{"type":["string","null"]},"profilePicture":{"type":["string","null"]},"initials":{"type":"string"},"role":{"type":"integer","contentEncoding":"int32"},"custom_role":{"title":"CustomRole","required":["id","name"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"name":{"type":"string"}}},"last_active":{"type":["string","null"]},"date_joined":{"type":["string","null"]},"date_invited":{"type":"string"}}},"invited_by":{"title":"InvitedBy","type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"color":{"type":"string"},"username":{"type":"string"},"email":{"type":"string"},"initials":{"type":"string"},"profilePicture":{"type":"string"}}}}},"description":""},"roles":{"type":"array","items":{"title":"Role","required":["id","name","custom"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"name":{"type":"string"},"custom":{"type":"boolean"},"inherited_role":{"type":"integer","contentEncoding":"int32"}}},"description":""}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const PatchChatMessage = {"body":{"type":"object","properties":{"assignee":{"type":"string","description":"The possible assignee of the message."},"group_assignee":{"type":"string","description":"The possible group assignee of the message."},"content":{"type":"string","description":"The full content of the message to be created","format":"RichText","maxLength":980},"content_format":{"type":"string","description":"The format of the message content (Default: text/md)","default":"text/md","enum":["text/md","text/plain"]},"post_data":{"description":"The data of the post message.","type":"object","properties":{"subtype":{"description":"The subtype of the Chat Post.","type":"object","required":["id"],"properties":{"id":{"type":"string","description":"The subtype ID of the Chat Post."}}},"title":{"type":"string","description":"The title of the Chat Post.","maxLength":255}}},"resolved":{"type":"boolean","description":"The resolved status of the message."}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"workspace_id":{"type":"integer","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of the Workspace."},"message_id":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of the specified message"}},"required":["workspace_id","message_id"]}]},"response":{"200":{"type":"object","properties":{"post_data":{"description":"The data of the post message.","type":"object","required":["title","subtype"],"properties":{"title":{"type":"string","description":"The title of the Chat Post.","maxLength":255},"subtype":{"description":"The subtype of the Chat Post.","type":"object","required":["id"],"properties":{"id":{"type":"string","description":"The subtype ID of the Chat Post."}}}}},"assignee":{"type":"string","description":"The possible assignee of the message."},"assigned_by":{"type":"string","description":"The user who assigned the message."},"content":{"type":"string","description":"The full content of the message.","format":"RichText"},"date":{"type":"number","description":"The date & time the message was created (Unix epoch milliseconds timestamp)."},"date_assigned":{"type":"number","description":"The date & time the message was assigned (Unix epoch milliseconds timestamp)."},"date_resolved":{"type":"number","description":"The date & time the message was resolved (Unix epoch milliseconds timestamp)."},"date_updated":{"type":"number","description":"The date & time the message was updated (Unix epoch milliseconds timestamp)."},"group_assignee":{"type":"string","description":"The possible group assignee of the message."},"id":{"type":"string","description":"The ID of the message."},"parent_channel":{"type":"string","description":"The ID of the chat this message belongs to."},"parent_message":{"type":"string","description":"The ID of the message this message is a reply to."},"resolved":{"type":"boolean","description":"The resolved status of the message."},"resolved_by":{"type":"string","description":"The user who resolved the message."},"triaged_action":{"type":"number","description":"The triaged action applied to the message.\n\n`1` `2`","enum":[1,2]},"triaged_object_id":{"type":"string","description":"The message triaged action object id."},"triaged_object_type":{"type":"number","description":"The message triaged action object type."},"type":{"type":"string","description":"The type of message.\n\n`message` `post`","enum":["message","post"]},"user_id":{"type":"string","description":"The ID of the user who created the message."},"replies_count":{"type":"number","description":"The number of replies to the message."},"links":{"description":"The links to elements of the message.","oneOf":[{"type":"object","required":["replies","tagged_users","reactions"],"properties":{"reactions":{"type":"string","description":"The link to the reactions of this message."},"replies":{"type":"string","description":"The link to the replies of this message."},"tagged_users":{"type":"string","description":"The link to the tagged users of this message."}}},{"type":"object","required":["tagged_users","reactions"],"properties":{"reactions":{"type":"string","description":"The link to the reactions of this message."},"tagged_users":{"type":"string","description":"The link to the tagged users of this message."}}}]}},"required":["content","date","id","parent_channel","resolved","type","user_id","replies_count","links"],"$schema":"https://json-schema.org/draft/2020-12/schema"},"400":{"type":"object","properties":{"status":{"type":"integer","description":"The HTTP Status code for the error"},"message":{"type":"string","description":"The message describing the error","examples":["Generic error message"]},"trace_id":{"type":"integer","description":"Unique trace ID for tracking the request. Used for troubleshooting errors","examples":[123456789]},"timestamp":{"type":"integer","description":"The time of the error (Unix epoch milliseconds timestamp).","examples":[1671534256138]}},"required":["status","message","trace_id","timestamp"],"$schema":"https://json-schema.org/draft/2020-12/schema"},"404":{"type":"object","properties":{"status":{"type":"integer","description":"The HTTP Status code for the error"},"message":{"type":"string","description":"The message describing the error","examples":["Generic error message"]},"trace_id":{"type":"integer","description":"Unique trace ID for tracking the request. Used for troubleshooting errors","examples":[123456789]},"timestamp":{"type":"integer","description":"The time of the error (Unix epoch milliseconds timestamp).","examples":[1671534256138]}},"required":["status","message","trace_id","timestamp"],"$schema":"https://json-schema.org/draft/2020-12/schema"},"default":{"type":"object","properties":{"status":{"type":"integer","description":"The HTTP Status code for the error"},"message":{"type":"string","description":"The message describing the error","examples":["Generic error message"]},"trace_id":{"type":"integer","description":"Unique trace ID for tracking the request. Used for troubleshooting errors","examples":[123456789]},"timestamp":{"type":"integer","description":"The time of the error (Unix epoch milliseconds timestamp).","examples":[1671534256138]}},"required":["status","message","trace_id","timestamp"],"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const RemoveCustomFieldValue = {"metadata":{"allOf":[{"type":"object","properties":{"task_id":{"type":"string","examples":["9hv"],"$schema":"https://json-schema.org/draft/2020-12/schema"},"field_id":{"type":"string","examples":["b955c4dc"],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"b8a8-48d8-a0c6-b4200788a683 (uuid)"}},"required":["task_id","field_id"]},{"type":"object","properties":{"custom_task_ids":{"type":"boolean","examples":[true],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"If you want to reference a task by it's custom task id, this value must be `true`."},"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."}},"required":[]}]},"response":{"200":{"type":"object","contentMediaType":"application/json","additionalProperties":true,"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const RemoveGuestFromFolder = {"metadata":{"allOf":[{"type":"object","properties":{"folder_id":{"type":"number","contentEncoding":"double","examples":[1057],"$schema":"https://json-schema.org/draft/2020-12/schema"},"guest_id":{"type":"number","contentEncoding":"double","examples":[403],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["folder_id","guest_id"]},{"type":"object","properties":{"include_shared":{"type":"boolean","examples":[false],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Exclude details of items shared with the guest by setting this parameter to `false`. By default this parameter is set to `true`."}},"required":[]}]},"response":{"200":{"title":"RemoveGuestFromFolderresponse","required":["guest"],"type":"object","properties":{"guest":{"title":"Guest2","required":["user","invited_by","can_see_time_spent","can_see_time_estimated","can_edit_tags","shared"],"type":"object","properties":{"user":{"title":"User7","required":["id","username","email","color","profilePicture","initials","role","last_active","date_joined","date_invited"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":["string","null"]},"email":{"type":"string"},"color":{"type":["string","null"]},"profilePicture":{"type":["string","null"]},"initials":{"type":"string"},"role":{"type":"integer","contentEncoding":"int32"},"last_active":{"type":["string","null"]},"date_joined":{"type":["string","null"]},"date_invited":{"type":"string"}}},"invited_by":{"title":"InvitedBy","type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"color":{"type":"string"},"username":{"type":"string"},"email":{"type":"string"},"initials":{"type":"string"},"profilePicture":{"type":"string"}}},"can_see_time_spent":{"type":"boolean"},"can_see_time_estimated":{"type":"boolean"},"can_edit_tags":{"type":"boolean"},"shared":{"title":"Shared","type":"object","properties":{"tasks":{"type":"array","items":{"type":"string"},"description":""},"lists":{"type":"array","items":{"type":"string"},"description":""},"folders":{"type":"array","items":{"type":"string"},"description":""}}}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const RemoveGuestFromList = {"metadata":{"allOf":[{"type":"object","properties":{"list_id":{"type":"number","contentEncoding":"double","examples":[1427],"$schema":"https://json-schema.org/draft/2020-12/schema"},"guest_id":{"type":"number","contentEncoding":"double","examples":[403],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["list_id","guest_id"]},{"type":"object","properties":{"include_shared":{"type":"boolean","examples":[false],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Exclude details of items shared with the guest by setting this parameter to `false`. By default this parameter is set to `true`."}},"required":[]}]},"response":{"200":{"title":"RemoveGuestFromListresponse","required":["guest"],"type":"object","properties":{"guest":{"title":"Guest2","required":["user","invited_by","can_see_time_spent","can_see_time_estimated","can_edit_tags","shared"],"type":"object","properties":{"user":{"title":"User7","required":["id","username","email","color","profilePicture","initials","role","last_active","date_joined","date_invited"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":["string","null"]},"email":{"type":"string"},"color":{"type":["string","null"]},"profilePicture":{"type":["string","null"]},"initials":{"type":"string"},"role":{"type":"integer","contentEncoding":"int32"},"last_active":{"type":["string","null"]},"date_joined":{"type":["string","null"]},"date_invited":{"type":"string"}}},"invited_by":{"title":"InvitedBy","type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"color":{"type":"string"},"username":{"type":"string"},"email":{"type":"string"},"initials":{"type":"string"},"profilePicture":{"type":"string"}}},"can_see_time_spent":{"type":"boolean"},"can_see_time_estimated":{"type":"boolean"},"can_edit_tags":{"type":"boolean"},"shared":{"title":"Shared","type":"object","properties":{"tasks":{"type":"array","items":{"type":"string"},"description":""},"lists":{"type":"array","items":{"type":"string"},"description":""},"folders":{"type":"array","items":{"type":"string"},"description":""}}}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const RemoveGuestFromTask = {"metadata":{"allOf":[{"type":"object","properties":{"task_id":{"type":"string","examples":["c04"],"$schema":"https://json-schema.org/draft/2020-12/schema"},"guest_id":{"type":"number","contentEncoding":"double","examples":[403],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["task_id","guest_id"]},{"type":"object","properties":{"include_shared":{"type":"boolean","examples":[false],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Exclude details of items shared with the guest by setting this parameter to `false`. By default this parameter is set to `true`."},"custom_task_ids":{"type":"boolean","examples":[true],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"If you want to reference a task by it's custom task id, this value must be `true`."},"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."}},"required":[]}]},"response":{"200":{"title":"RemoveGuestFromTaskresponse","required":["guest"],"type":"object","properties":{"guest":{"title":"Guest2","required":["user","invited_by","can_see_time_spent","can_see_time_estimated","can_edit_tags","shared"],"type":"object","properties":{"user":{"title":"User7","required":["id","username","email","color","profilePicture","initials","role","last_active","date_joined","date_invited"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":["string","null"]},"email":{"type":"string"},"color":{"type":["string","null"]},"profilePicture":{"type":["string","null"]},"initials":{"type":"string"},"role":{"type":"integer","contentEncoding":"int32"},"last_active":{"type":["string","null"]},"date_joined":{"type":["string","null"]},"date_invited":{"type":"string"}}},"invited_by":{"title":"InvitedBy","type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"color":{"type":"string"},"username":{"type":"string"},"email":{"type":"string"},"initials":{"type":"string"},"profilePicture":{"type":"string"}}},"can_see_time_spent":{"type":"boolean"},"can_see_time_estimated":{"type":"boolean"},"can_edit_tags":{"type":"boolean"},"shared":{"title":"Shared","type":"object","properties":{"tasks":{"type":"array","items":{"type":"string"},"description":""},"lists":{"type":"array","items":{"type":"string"},"description":""},"folders":{"type":"array","items":{"type":"string"},"description":""}}}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const RemoveGuestFromWorkspace = {"metadata":{"allOf":[{"type":"object","properties":{"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Workspace ID"},"guest_id":{"type":"number","contentEncoding":"double","examples":[403],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["team_id","guest_id"]}]},"response":{"200":{"title":"RemoveGuestFromWorkspaceresponse","required":["team"],"type":"object","properties":{"team":{"title":"Team2","required":["id","name","color","avatar","members"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"color":{"type":"string"},"avatar":{"type":["string","null"]},"members":{"type":"array","items":{"type":"string"},"description":""}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const RemoveTagFromTask = {"metadata":{"allOf":[{"type":"object","properties":{"task_id":{"type":"string","examples":["abc"],"$schema":"https://json-schema.org/draft/2020-12/schema"},"tag_name":{"type":"string","examples":["name"],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["task_id","tag_name"]},{"type":"object","properties":{"custom_task_ids":{"type":"boolean","examples":[true],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"If you want to reference a task by it's custom task id, this value must be `true`."},"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."}},"required":[]},{"type":"object","properties":{"Content-Type":{"const":"application/json","type":"string","examples":["application/json"],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["Content-Type"]}]},"response":{"200":{"type":"object","contentMediaType":"application/json","additionalProperties":true,"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const RemoveTaskFromList = {"metadata":{"allOf":[{"type":"object","properties":{"list_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema"},"task_id":{"type":"string","examples":["9hz"],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["list_id","task_id"]}]},"response":{"200":{"type":"object","contentMediaType":"application/json","additionalProperties":true,"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const RemoveUserFromWorkspace = {"metadata":{"allOf":[{"type":"object","properties":{"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Workspace ID"},"user_id":{"type":"number","contentEncoding":"double","examples":[403],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["team_id","user_id"]}]},"response":{"200":{"title":"RemoveUserFromWorkspaceresponse","required":["team"],"type":"object","properties":{"team":{"title":"Team2","required":["id","name","color","avatar","members"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"color":{"type":"string"},"avatar":{"type":["string","null"]},"members":{"type":"array","items":{"type":"string"},"description":""}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const Removetagsfromtimeentries = {"body":{"title":"Removetagsfromtimeentriesrequest","required":["time_entry_ids","tags"],"type":"object","properties":{"time_entry_ids":{"type":"array","items":{"type":"string","examples":["timer_id"]},"description":""},"tags":{"type":"array","items":{"title":"Tags10","required":["name"],"type":"object","properties":{"name":{"type":"string","examples":["name of tag"]}}},"description":""}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Workspace ID"}},"required":["team_id"]}]},"response":{"200":{"type":"object","contentMediaType":"application/json","additionalProperties":true,"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const SearchDocs = {"metadata":{"allOf":[{"type":"object","properties":{"workspaceId":{"type":"number","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of your Workspace."}},"required":["workspaceId"]},{"type":"object","properties":{"id":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Filter results to a single Doc with the given Doc ID."},"creator":{"type":"number","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Filter results to Docs created by the user with the given user ID."},"deleted":{"default":"false","type":"boolean","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Filter results to return deleted Docs."},"archived":{"default":"false","type":"boolean","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Filter results to return archived Docs."},"parent_id":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Filter results to children of a parent Doc with the given parent Doc ID."},"parent_type":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Filter results to children of the given parent Doc type. For example, `SPACE`, `FOLDER`, `LIST`, `EVERYTHING`, `WORKSPACE`."},"limit":{"minimum":10,"maximum":100,"default":50,"type":"number","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The maximum number of results to retrieve for each page."},"next_cursor":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The cursor to use to get the next page of results."}},"required":[]}]},"response":{"200":{"type":"object","properties":{"docs":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string"},"date_created":{"type":"number"},"date_updated":{"type":"number"},"name":{"type":"string"},"type":{"type":"number","enum":[]},"parent":{"type":"object","properties":{"id":{"type":"string"},"type":{"type":"number","description":"The parent Doc type. Use `4` for Space, `5` for Folder, `6` for List, `7` for Everything, and `12` for Workspace."}},"required":["id","type"]},"public":{"type":"boolean"},"workspace_id":{"type":"number"},"creator":{"type":"number"},"deleted":{"type":"boolean"},"date_deleted":{"type":"number"},"deleted_by":{"type":"number"},"archived":{"type":"boolean"},"archived_by":{"type":"number"},"date_archived":{"type":"number"}},"required":["id","date_created","name","type","parent","public","workspace_id","creator","deleted","archived"]}},"next_cursor":{"type":"string"}},"required":["docs"],"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const SetCustomFieldValue = {"body":{"title":"SetCustomFieldValuerequest","anyOf":[{"type":"object","title":"URL Custom Field","description":"The `value` must be a string with a valid URL.","required":["value"],"properties":{"value":{"type":"string","examples":["https://clickup.com/api"]}}},{"type":"object","title":"Dropdown Custom Field","description":"Enter the universal unique identifier (UUID) of the dropdown menu option you want to set. You can find the UUIDs available for each Dropdown Custom Field using [Get Accessible Custom Fields.](ref:getaccessiblecustomfields) New Dropdown Custom Field options cannot be created from this request.","required":["value"],"properties":{"value":{"type":"string","examples":["uuid1234"]}}},{"type":"object","title":"Email Custom Field","description":"The `value` must be a string with a valid email address.","required":["value"],"properties":{"value":{"type":"string","examples":["user@company.com"]}}},{"type":"object","title":"Phone Custom Field","description":"The `value` must be a string with a valid country code.","required":["value"],"properties":{"value":{"type":"string","examples":["+1 123 456 7890"]}}},{"type":"object","title":"Date Custom Field","description":"The `value` must be Unix time in milliseconds. To display the time in a Date Custom Field in ClickUp, you must include `time: true` in the `value_options` property.","properties":{"value":{"type":"integer","format":"int32","examples":[1667367645000],"minimum":-2147483648,"maximum":2147483647},"value_options":{"type":"object","required":["time"],"properties":{"time":{"type":"boolean","examples":[true]}}}}},{"type":"object","title":"Short or Long Text Custom Field","description":"Enter a string of text.","required":["value"],"properties":{"value":{"type":"string","examples":["This is short or long text in a Custom Field."]}}},{"type":"object","title":"Number Custom Field","description":"Enter a number.","required":["value"],"properties":{"value":{"type":"number","examples":[-28]}}},{"type":"object","title":"Money Custom Field","description":"You can set an amount, but not the currency of a Money Custom Field via the API. You can check the currency of a Money Custom Field using [Get Accessible Custom Fields.](ref:getaccessiblecustomfields)","required":["value"],"properties":{"value":{"type":"number","examples":[8000]}}},{"type":"object","title":"Task Relationship Custom Field","description":"Enter an array of task ids in the `add` property to add them to a Task Relationship Custom Field. Enter them into the `rem` property to remove tasks from the Relationship.","required":["value"],"properties":{"value":{"type":"object","properties":{"add":{"type":"array","items":{"type":"string"}},"rem":{"type":"array","items":{"type":"string"}}}}}},{"type":"object","title":"People Custom Field","description":"Enter an array of user ids or a Team id in the `add` property to add them to a People Custom Field. Enter them into the `rem` property to remove users from a People Custom Field. You can get a list of people in the Workspace using [Get Authorized Teams (Workspaces).](ref:getauthorizedteams)","required":["value"],"properties":{"value":{"type":"object","properties":{"add":{"type":"array","items":{"type":"number"}},"rem":{"type":"array","items":{"type":"number"}}}}}},{"type":"object","title":"Emoji (Rating) Custom Field","description":"Enter an integer that is greater than or equal to zero and where the `count` property is greater than or equal to the `value`. You can find the `count` property for each Emoji (Rating) Custom Field using [Get Accessible Custom Fields.](ref:getaccessiblecustomfields)","required":["value"],"properties":{"value":{"type":"integer","format":"int32","examples":[4],"minimum":-2147483648,"maximum":2147483647}}},{"type":"object","title":"Manual Progress Custom Field","description":"Enter a number between the `start` and `end` values of each Manual Progress Custom Field. For example, for a field with `start: 10` and `end: 30`, sending `current: 20` will be displayed as 50% complete in ClickUp. You can find the `start` and `end` values for each Manual Progress Custom Field using [Get Accessible Custom Fields.](ref:getaccessiblecustomfields)","required":["value"],"properties":{"value":{"type":"object","required":["current"],"properties":{"current":{"type":"number","examples":[20]}}}}},{"type":"object","title":"Label Custom Field","description":"Enter an array of the universal unique identifiers (UUIDs) of the labels you want to apply. You can find the UUIDs available for each Label Custom Field using [Get Accessible Custom Fields.](ref:getaccessiblecustomfields)","required":["value"],"properties":{"value":{"type":"array","items":{"type":"string","examples":["uuid1234","uuid9876"]}}}},{"type":"object","title":"Location Custom Field","description":"Include the latitude, longitude, and formatted address as defined in the [Google Maps Geocoding API.](https://developers.google.com/maps/documentation/geocoding/overview)","required":["value"],"properties":{"value":{"type":"object","properties":{"location":{"type":"object","properties":{"lat":{"type":"number"},"lng":{"type":"number"}}},"formatted_address":{"type":"string"}}}}}],"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"task_id":{"type":"string","examples":["9hv"],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Enter the task ID of the task you want to update."},"field_id":{"type":"string","examples":["b955c4dc"],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Enter the universal unique identifier (UUID) of the Custom Field you want to set."}},"required":["task_id","field_id"]},{"type":"object","properties":{"custom_task_ids":{"type":"boolean","examples":[true],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"If you want to reference a task by its Custom Task ID, this value must be `true`."},"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n\n \\\nFor example: `custom_task_ids=true&team_id=123`."}},"required":[]}]},"response":{"200":{"type":"object","contentMediaType":"application/json","additionalProperties":true,"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const SharedHierarchy = {"metadata":{"allOf":[{"type":"object","properties":{"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Workspace ID"}},"required":["team_id"]}]},"response":{"200":{"title":"SharedHierarchyresponse","required":["shared"],"type":"object","properties":{"shared":{"title":"Shared7","required":["tasks","lists","folders"],"type":"object","properties":{"tasks":{"type":"array","items":{"type":"string"},"description":""},"lists":{"type":"array","items":{"title":"List6","required":["id","name","orderindex","content","status","priority","assignee","task_count","due_date","start_date","archived"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"orderindex":{"type":"integer","contentEncoding":"int32"},"content":{"type":["string","null"]},"status":{"type":["string","null"]},"priority":{"type":["string","null"]},"assignee":{"type":["string","null"]},"task_count":{"type":"string"},"due_date":{"type":["string","null"]},"start_date":{"type":["string","null"]},"archived":{"type":"boolean"}}},"description":""},"folders":{"type":"array","items":{"title":"Folder11","required":["id","name","orderindex","content","task_count","due_date","archived"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"orderindex":{"type":"integer","contentEncoding":"int32"},"content":{"type":["string","null"]},"task_count":{"type":"string"},"due_date":{"type":["string","null"]},"archived":{"type":"boolean"}}},"description":""}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const StartatimeEntry = {"body":{"title":"StartatimeEntryrequest","type":"object","properties":{"description":{"type":"string","examples":["from api"]},"tags":{"description":"Users on the Business Plan and above can include a time tracking label.","type":"array","items":{"title":"Tags10","required":["name"],"type":"object","properties":{"name":{"type":"string","examples":["tag1"]}}}},"tid":{"type":"string","examples":["task_id"]},"billable":{"type":"boolean"}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"team_Id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Workspace ID"}},"required":["team_Id"]},{"type":"object","properties":{"custom_task_ids":{"type":"boolean","examples":[true],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"If you want to reference a task by it's custom task id, this value must be `true`."},"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."}},"required":[]}]},"response":{"200":{"title":"StartatimeEntryresponse","required":["data"],"type":"object","properties":{"data":{"title":"Data2","required":["id","task","wid","user","billable","start","duration","description","tags","at"],"type":"object","properties":{"id":{"type":"string"},"task":{"title":"Task6","required":["id","name","status","custom_type"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"status":{"title":"Status","required":["status","color","orderindex","type"],"type":"object","properties":{"status":{"type":"string"},"color":{"type":"string"},"orderindex":{"type":"integer","contentEncoding":"int32"},"type":{"type":"string"}}},"custom_type":{"type":["string","null"]}}},"wid":{"type":"string"},"user":{"title":"User2","required":["id","username","initials","email","color","profilePicture"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"initials":{"type":"string"},"email":{"type":"string"},"color":{"type":"string"},"profilePicture":{"type":"string"}}},"billable":{"type":"boolean"},"start":{"type":"string"},"duration":{"type":"integer","contentEncoding":"int32"},"description":{"type":"string"},"tags":{"type":"array","items":{"type":"string"},"description":""},"at":{"type":"integer","contentEncoding":"int64"}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const StopatimeEntry = {"metadata":{"allOf":[{"type":"object","properties":{"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Workspace ID"}},"required":["team_id"]},{"type":"object","properties":{"Content-Type":{"const":"application/json","type":"string","examples":["application/json"],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["Content-Type"]}]},"response":{"200":{"title":"StopatimeEntryresponse","required":["data"],"type":"object","properties":{"data":{"title":"Data3","required":["id","task","wid","user","billable","start","end","duration","description","tags","source","at"],"type":"object","properties":{"id":{"type":"string"},"task":{"title":"Task6","required":["id","name","status","custom_type"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"status":{"title":"Status","required":["status","color","orderindex","type"],"type":"object","properties":{"status":{"type":"string"},"color":{"type":"string"},"orderindex":{"type":"integer","contentEncoding":"int32"},"type":{"type":"string"}}},"custom_type":{"type":["string","null"]}}},"wid":{"type":"string"},"user":{"title":"User2","required":["id","username","initials","email","color","profilePicture"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"initials":{"type":"string"},"email":{"type":"string"},"color":{"type":"string"},"profilePicture":{"type":"string"}}},"billable":{"type":"boolean"},"start":{"type":"string"},"end":{"type":"integer","contentEncoding":"int64"},"duration":{"type":"integer","contentEncoding":"int32"},"description":{"type":"string"},"tags":{"type":"array","items":{"type":"string"},"description":""},"source":{"type":"string"},"at":{"type":"integer","contentEncoding":"int64"}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const Tracktime = {"body":{"title":"Tracktimerequest","required":["start","end","time"],"type":"object","properties":{"start":{"type":"integer","contentEncoding":"int64","examples":[1567780450202]},"end":{"type":"integer","contentEncoding":"int64","examples":[1508369194377]},"time":{"type":"integer","contentEncoding":"int32","examples":[8640000]}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"task_id":{"type":"string","examples":["9hv"],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["task_id"]},{"type":"object","properties":{"custom_task_ids":{"type":"boolean","examples":[true],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"If you want to reference a task by it's custom task id, this value must be `true`."},"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."}},"required":[]}]},"response":{"200":{"title":"Tracktimeresponse","required":["id"],"type":"object","properties":{"id":{"type":"string"}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const UpdateChatChannel = {"body":{"type":"object","properties":{"content_format":{"type":"string","description":"The format of content field values (Default: text/md)","default":"text/md","enum":["text/md","text/plain"]},"description":{"type":"string","description":"The updated description of the Channel."},"location":{"description":"The updated location of the Channel: Space, Folder, or List","type":"object","required":["id","type"],"properties":{"id":{"type":"string","description":"The ID of the hierarchy entity where the Channel is to be located"},"type":{"type":"string","description":"The type of the location. Must be a Space, Folder, or List.","enum":["folder","list","space"]}}},"name":{"type":"string","description":"The updated name of the Channel."},"topic":{"type":"string","description":"The updated topic of the Channel."},"visibility":{"type":"string","description":"The updated visibility of the Channel.","enum":["PUBLIC","PRIVATE"]}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"workspace_id":{"type":"integer","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of the Workspace."},"channel_id":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of the specified Channel."}},"required":["workspace_id","channel_id"]}]},"response":{"200":{"type":"object","description":"The Channel was successfully updated.","properties":{"data":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"description":{"type":"string","description":"The full Description of the Channel.","format":"RichText"},"topic":{"type":"string"},"type":{"type":"string","description":"The type of the Channel\n\n`CHANNEL` `DM` `GROUP_DM`","enum":["CHANNEL","DM","GROUP_DM"]},"visibility":{"type":"string","description":"The visibility of the Channel\n\n`PUBLIC` `PRIVATE`","enum":["PUBLIC","PRIVATE"]},"parent":{"description":"Parent information","type":"object","required":["id","type"],"properties":{"id":{"type":"string"},"type":{"type":"number"}}},"creator":{"type":"string","description":"ID of the user who created this Channel"},"created_at":{"type":"string","description":"Timestamp of when this Channel was created"},"updated_at":{"type":"string","description":"Timestamp of the last update in this Channel - Deprecated in favor of latest_comment_at","deprecated":true},"workspace_id":{"type":"string","description":"Workspace ID of the Channel"},"archived":{"type":"boolean"},"latest_comment_at":{"type":"string","description":"Timestamp of the last comment in this Channel. Optional in the case of a new Channel with no comments yet"},"is_canonical_channel":{"type":"boolean","description":"Is this the canonical channel for the parent location?"},"is_hidden":{"type":"boolean","description":"Has the user hidden this Channel from their sidebar? Currently only an option for DM/Group DM."},"default_view":{"description":"Data about the default view that the Channel should open in","type":"object","required":["type","view_id","standard"],"properties":{"type":{"type":"number"},"view_id":{"type":"string"},"standard":{"type":"boolean"}}},"channel_type":{"type":"number","description":"Type of channel (chat, project, etc.) aka subcategory_type\n\n`1` `2` `3`","enum":[1,2,3]},"counts":{"description":"Counts relevant to the user requesting the Channel","type":"object","required":["parent_id","parent_type","root_parent_id","root_parent_type","date","_version_vector"],"properties":{"parent_id":{"type":"string"},"parent_type":{"type":"string","enum":["attachment","attachmentAccess","approval","banWorkspace","checklist","checklistItem","checklistTemplateAccess","comment","commentsLastReadAt","customField","customFieldAccess","customItem","dashboard","dashboardAccess","doc","docAccess","folder","folderDescendantsSet","folderTemplateAccess","form","formulaValue","foundationalJob","goal","goalAccess","goalFolder","goalFolderAccess","hierarchy","list","listDescendantsSet","listDescendantsPoints","listDescendantsTimeEstimates","listTemplateAccess","notepad","page","pageAccess","post","reminder","reminderAccess","rolledUpFieldValue","space","spaceDescendantsSet","spaceTemplateAccess","task","taskAccess","taskHistory","taskTemplateAccess","template","user","userAccess","userGroup","userHierarchy","view","viewAccess","viewTemplateAccess","whiteboard","whiteboardAccess","widget","workspace","workspaceDescendantsSet"],"description":"`attachment` `attachmentAccess` `approval` `banWorkspace` `checklist` `checklistItem` `checklistTemplateAccess` `comment` `commentsLastReadAt` `customField` `customFieldAccess` `customItem` `dashboard` `dashboardAccess` `doc` `docAccess` `folder` `folderDescendantsSet` `folderTemplateAccess` `form` `formulaValue` `foundationalJob` `goal` `goalAccess` `goalFolder` `goalFolderAccess` `hierarchy` `list` `listDescendantsSet` `listDescendantsPoints` `listDescendantsTimeEstimates` `listTemplateAccess` `notepad` `page` `pageAccess` `post` `reminder` `reminderAccess` `rolledUpFieldValue` `space` `spaceDescendantsSet` `spaceTemplateAccess` `task` `taskAccess` `taskHistory` `taskTemplateAccess` `template` `user` `userAccess` `userGroup` `userHierarchy` `view` `viewAccess` `viewTemplateAccess` `whiteboard` `whiteboardAccess` `widget` `workspace` `workspaceDescendantsSet`"},"root_parent_id":{"type":"string"},"root_parent_type":{"type":"string","enum":["attachment","attachmentAccess","approval","banWorkspace","checklist","checklistItem","checklistTemplateAccess","comment","commentsLastReadAt","customField","customFieldAccess","customItem","dashboard","dashboardAccess","doc","docAccess","folder","folderDescendantsSet","folderTemplateAccess","form","formulaValue","foundationalJob","goal","goalAccess","goalFolder","goalFolderAccess","hierarchy","list","listDescendantsSet","listDescendantsPoints","listDescendantsTimeEstimates","listTemplateAccess","notepad","page","pageAccess","post","reminder","reminderAccess","rolledUpFieldValue","space","spaceDescendantsSet","spaceTemplateAccess","task","taskAccess","taskHistory","taskTemplateAccess","template","user","userAccess","userGroup","userHierarchy","view","viewAccess","viewTemplateAccess","whiteboard","whiteboardAccess","widget","workspace","workspaceDescendantsSet"],"description":"`attachment` `attachmentAccess` `approval` `banWorkspace` `checklist` `checklistItem` `checklistTemplateAccess` `comment` `commentsLastReadAt` `customField` `customFieldAccess` `customItem` `dashboard` `dashboardAccess` `doc` `docAccess` `folder` `folderDescendantsSet` `folderTemplateAccess` `form` `formulaValue` `foundationalJob` `goal` `goalAccess` `goalFolder` `goalFolderAccess` `hierarchy` `list` `listDescendantsSet` `listDescendantsPoints` `listDescendantsTimeEstimates` `listTemplateAccess` `notepad` `page` `pageAccess` `post` `reminder` `reminderAccess` `rolledUpFieldValue` `space` `spaceDescendantsSet` `spaceTemplateAccess` `task` `taskAccess` `taskHistory` `taskTemplateAccess` `template` `user` `userAccess` `userGroup` `userHierarchy` `view` `viewAccess` `viewTemplateAccess` `whiteboard` `whiteboardAccess` `widget` `workspace` `workspaceDescendantsSet`"},"date":{"type":"number","description":"When the user last read comments to this object, set in the past to mark comments as unread. Should be a timestamp in milliseconds."},"_version_vector":{"deprecated":true,"type":"object","required":["object_id","object_type","vector","workspace_id"],"properties":{"object_id":{"type":"string"},"object_type":{"type":"string"},"vector":{"type":"array","items":{"type":"object","required":["master_id","version","deleted"],"properties":{"master_id":{"type":"number"},"version":{"type":"number"},"deleted":{"type":"boolean"}}}},"workspace_id":{"type":"number"}}},"version":{"type":"number","description":"The version of the object when the last read at object was last updated."},"has_unread":{"type":"boolean","description":"Whether the user has unread comments on this object. (Optional)"},"num_unread":{"type":"number","description":"How many unread comments there are on this object. (Optional)"},"latest_comment_at":{"type":"number","description":"The date of the latest comment on this object. (Optional)"},"badge_count":{"type":"number","description":"The badge count for this object. (Optional)"},"thread_count":{"type":"number","description":"The number of unread threads on this object. (Optional)"},"mention_count":{"type":"number","description":"The number of mentions on this object. (Optional)"}}},"chat_room_category":{"type":"string","description":"The category of the Channel, e.g. a welcome channel, (in the future, maybe) a ClickBot channel, etc.\n\n`WELCOME_CHANNEL`","enum":["WELCOME_CHANNEL"]},"links":{"description":"The links to elements of the Channel.","type":"object","required":["members","followers"],"properties":{"members":{"type":"string","description":"The link to the members of the Channel."},"followers":{"type":"string","description":"The link to the followers of the Channel."}}}},"required":["id","name","type","visibility","parent","creator","created_at","updated_at","workspace_id","archived","links"]}},"required":["data"],"$schema":"https://json-schema.org/draft/2020-12/schema"},"400":{"type":"object","properties":{"status":{"type":"integer","description":"The HTTP Status code for the error"},"message":{"type":"string","description":"The message describing the error","examples":["Generic error message"]},"trace_id":{"type":"integer","description":"Unique trace ID for tracking the request. Used for troubleshooting errors","examples":[123456789]},"timestamp":{"type":"integer","description":"The time of the error (Unix epoch milliseconds timestamp).","examples":[1671534256138]}},"required":["status","message","trace_id","timestamp"],"$schema":"https://json-schema.org/draft/2020-12/schema"},"404":{"type":"object","properties":{"status":{"type":"integer","description":"The HTTP Status code for the error"},"message":{"type":"string","description":"The message describing the error","examples":["Generic error message"]},"trace_id":{"type":"integer","description":"Unique trace ID for tracking the request. Used for troubleshooting errors","examples":[123456789]},"timestamp":{"type":"integer","description":"The time of the error (Unix epoch milliseconds timestamp).","examples":[1671534256138]}},"required":["status","message","trace_id","timestamp"],"$schema":"https://json-schema.org/draft/2020-12/schema"},"default":{"type":"object","properties":{"status":{"type":"integer","description":"The HTTP Status code for the error"},"message":{"type":"string","description":"The message describing the error","examples":["Generic error message"]},"trace_id":{"type":"integer","description":"Unique trace ID for tracking the request. Used for troubleshooting errors","examples":[123456789]},"timestamp":{"type":"integer","description":"The time of the error (Unix epoch milliseconds timestamp).","examples":[1671534256138]}},"required":["status","message","trace_id","timestamp"],"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const UpdateComment = {"body":{"title":"UpdateCommentrequest","required":["comment_text","assignee","resolved"],"type":"object","properties":{"comment_text":{"type":"string","examples":["Updated comment content"]},"assignee":{"type":"integer","contentEncoding":"int32","examples":[183]},"group_assignee":{"type":"integer","contentEncoding":"int32","description":"","examples":["dd01f92f-48ca-446d-88a1-0beb0e8f5f14"]},"resolved":{"description":"","type":"boolean","examples":[true]}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"comment_id":{"type":"number","contentEncoding":"double","examples":[456],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["comment_id"]}]},"response":{"200":{"type":"object","contentMediaType":"application/json","additionalProperties":true,"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const UpdateFolder = {"body":{"title":"UpdateFolderrequest","required":["name"],"type":"object","properties":{"name":{"type":"string","examples":["Updated Folder Name"]}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"folder_id":{"type":"number","contentEncoding":"double","examples":[457],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["folder_id"]}]},"response":{"200":{"title":"UpdateFolderresponse","required":["id","name","orderindex","override_statuses","hidden","space","task_count"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"orderindex":{"type":"integer","contentEncoding":"int32"},"override_statuses":{"type":"boolean"},"hidden":{"type":"boolean"},"space":{"title":"Space2","required":["id","name","access"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"access":{"type":"boolean"}}},"task_count":{"type":"string"}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const UpdateGoal = {"body":{"title":"UpdateGoalrequest","required":["name","due_date","description","rem_owners","add_owners","color"],"type":"object","properties":{"name":{"type":"string","examples":["Updated Goal Name"]},"due_date":{"type":"integer","contentEncoding":"int64","examples":[1568036964079]},"description":{"type":"string","examples":["Updated Goal Description"]},"rem_owners":{"type":"array","items":{"type":"integer","contentEncoding":"int32","examples":[183]},"description":"Array of user IDs."},"add_owners":{"type":"array","items":{"type":"integer","contentEncoding":"int32","examples":[184]},"description":"Array of user IDs."},"color":{"type":"string","examples":["#32a852"]}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"goal_id":{"type":"string","examples":["e53a033c"],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"900e-462d-a849-4a216b06d930 (uuid)"}},"required":["goal_id"]}]},"response":{"200":{"title":"UpdateGoalresponse","required":["goal"],"type":"object","properties":{"goal":{"title":"Goal","required":["id","name","team_id","date_created","start_date","due_date","description","private","archived","creator","color","pretty_id","multiple_owners","folder_id","members","owners","key_results","percent_completed","history","pretty_url"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"team_id":{"type":"string"},"date_created":{"type":"string"},"start_date":{"type":["string","null"]},"due_date":{"type":"string"},"description":{"type":"string"},"private":{"type":"boolean"},"archived":{"type":"boolean"},"creator":{"type":"integer","contentEncoding":"int32"},"color":{"type":"string"},"pretty_id":{"type":"string"},"multiple_owners":{"type":"boolean"},"folder_id":{"type":["string","null"]},"members":{"type":"array","items":{"type":"string"},"description":""},"owners":{"type":"array","items":{"title":"Owner","required":["id","username","initials","email","color","profilePicture"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"initials":{"type":"string"},"email":{"type":"string"},"color":{"type":"string"},"profilePicture":{"type":"string"}}},"description":""},"key_results":{"type":"array","items":{"type":"string"},"description":""},"percent_completed":{"type":"integer","contentEncoding":"int32"},"history":{"type":"array","items":{"type":"string"},"description":""},"pretty_url":{"type":"string"}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const UpdateList = {"body":{"title":"UpdateListrequest","required":["name","content","due_date","due_date_time","priority","assignee","status","unset_status"],"type":"object","properties":{"name":{"type":"string","examples":["Updated List Name"]},"content":{"type":"string","examples":["Updated List Content"]},"due_date":{"type":"integer","contentEncoding":"int64","examples":[1567780450202]},"due_date_time":{"type":"boolean","examples":[true]},"priority":{"type":"integer","contentEncoding":"int32","examples":[2]},"assignee":{"type":"string","examples":["none"]},"status":{"description":"**Status** refers to the List color rather than the task Statuses available in the List.","type":"string","examples":["red"]},"unset_status":{"description":"By default, this is `false.` To remove the List color use `unset_status: true`.","type":"boolean","examples":[true]},"include_markdown_description":{"description":"To return List descriptions in Markdown format, use `?include_markdown_description=true`.","type":"boolean"}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"list_id":{"type":"string","examples":["124"],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["list_id"]}]},"response":{"200":{"title":"UpdateListresponse","required":["id","name","orderindex","content","status","priority","assignee","task_count","due_date","due_date_time","start_date","start_date_time","folder","space","statuses","inbound_address"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"orderindex":{"type":"integer","contentEncoding":"int32"},"content":{"type":"string"},"status":{"title":"Status5","required":["status","color","hide_label"],"type":"object","properties":{"status":{"type":"string"},"color":{"type":"string"},"hide_label":{"type":"boolean"}}},"priority":{"title":"Priority1","required":["priority","color"],"type":"object","properties":{"priority":{"type":"string"},"color":{"type":"string"}}},"assignee":{"type":["string","null"]},"task_count":{"type":["string","null"]},"due_date":{"type":"string"},"due_date_time":{"type":"boolean"},"start_date":{"type":["string","null"]},"start_date_time":{"type":["string","null"]},"folder":{"title":"Folder3","required":["id","name","hidden","access"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"hidden":{"type":"boolean"},"access":{"type":"boolean"}}},"space":{"title":"Space2","required":["id","name","access"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"access":{"type":"boolean"}}},"statuses":{"type":"array","items":{"title":"Status","required":["status","color","orderindex","type"],"type":"object","properties":{"status":{"type":"string"},"color":{"type":"string"},"orderindex":{"type":"integer","contentEncoding":"int32"},"type":{"type":"string"}}},"description":""},"inbound_address":{"type":"string"}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const UpdatePrivacyAndAccess = {"body":{"type":"object","properties":{"entries":{"description":"The user or user group (Team) you wish to give, remove, or edit permissions.","type":"array","items":{"type":"object","properties":{"id":{"description":"The ID of user or user group (Team) you wish to give, remove, or edit permissions.","type":"string"},"kind":{"description":"The type of ID. Options are `user` or `group`.","type":"string"},"permission_level":{"description":"The permission level you wish to give to user or user group (Team). `1`=read, `3`=comment, `4`=edit, `5`=create, and `null`=remove access.","type":"number"}}}},"private":{"description":"The privacy of an object or location.","type":"boolean"}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"workspace_id":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of the Workspace."},"object_type":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"Any object that can be shared in a Workspace. For example, `customField`, `dashboard`, `folder`, `goal`, `goalFolder`,`list`, `space`, `task`, and `view`."},"object_id":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema","description":"The ID of the object to share."}},"required":["workspace_id","object_type","object_id"]}]},"response":{"200":{"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const UpdateSpace = {"body":{"title":"UpdateSpacerequest","required":["name","color","private","admin_can_manage","multiple_assignees","features"],"type":"object","properties":{"name":{"type":"string","examples":["Updated Space Name"]},"color":{"type":"string","examples":["#7B68EE"]},"private":{"type":"boolean"},"admin_can_manage":{"description":"***Note:** Allowing or restricting admins from managing private Spaces using `\"admin_can_manage\"` is an [Enterprise Plan](https://clickup.com/pricing) feature.*","type":"boolean"},"multiple_assignees":{"type":"boolean"},"features":{"title":"Features","required":["due_dates","time_tracking","tags","time_estimates","checklists","custom_fields","remap_dependencies","dependency_warning","portfolios"],"type":"object","properties":{"due_dates":{"title":"DueDates","required":["enabled","start_date","remap_due_dates","remap_closed_due_date"],"type":"object","properties":{"enabled":{"type":"boolean"},"start_date":{"type":"boolean"},"remap_due_dates":{"type":"boolean"},"remap_closed_due_date":{"type":"boolean"}}},"time_tracking":{"title":"TimeTracking","required":["enabled"],"type":"object","properties":{"enabled":{"type":"boolean"}}},"tags":{"title":"Tags","required":["enabled"],"type":"object","properties":{"enabled":{"type":"boolean"}}},"time_estimates":{"title":"TimeEstimates","required":["enabled"],"type":"object","properties":{"enabled":{"type":"boolean"}}},"checklists":{"title":"Checklists","required":["enabled"],"type":"object","properties":{"enabled":{"type":"boolean","examples":[true]}}},"custom_fields":{"title":"CustomFields","required":["enabled"],"type":"object","properties":{"enabled":{"type":"boolean","examples":[true]}}},"remap_dependencies":{"title":"RemapDependencies","required":["enabled"],"type":"object","properties":{"enabled":{"type":"boolean"}}},"dependency_warning":{"title":"DependencyWarning","required":["enabled"],"type":"object","properties":{"enabled":{"type":"boolean"}}},"portfolios":{"title":"Portfolios","required":["enabled"],"type":"object","properties":{"enabled":{"type":"boolean"}}}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"space_id":{"type":"number","contentEncoding":"double","examples":[790],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["space_id"]}]},"response":{"200":{"title":"UpdateSpaceresponse","required":["id","name","private","statuses","multiple_assignees","features"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"private":{"type":"boolean"},"statuses":{"type":"array","items":{"title":"Status","required":["status","color","orderindex","type"],"type":"object","properties":{"status":{"type":"string"},"color":{"type":"string"},"orderindex":{"type":"integer","contentEncoding":"int32"},"type":{"type":"string"}}},"description":""},"multiple_assignees":{"type":"boolean"},"features":{"title":"Features","required":["due_dates","time_tracking","tags","time_estimates","checklists","custom_fields","remap_dependencies","dependency_warning","portfolios"],"type":"object","properties":{"due_dates":{"title":"DueDates","required":["enabled","start_date","remap_due_dates","remap_closed_due_date"],"type":"object","properties":{"enabled":{"type":"boolean"},"start_date":{"type":"boolean"},"remap_due_dates":{"type":"boolean"},"remap_closed_due_date":{"type":"boolean"}}},"time_tracking":{"title":"TimeTracking","required":["enabled"],"type":"object","properties":{"enabled":{"type":"boolean"}}},"tags":{"title":"Tags","required":["enabled"],"type":"object","properties":{"enabled":{"type":"boolean"}}},"time_estimates":{"title":"TimeEstimates","required":["enabled"],"type":"object","properties":{"enabled":{"type":"boolean"}}},"checklists":{"title":"Checklists","required":["enabled"],"type":"object","properties":{"enabled":{"type":"boolean"}}},"custom_fields":{"title":"CustomFields","required":["enabled"],"type":"object","properties":{"enabled":{"type":"boolean"}}},"remap_dependencies":{"title":"RemapDependencies","required":["enabled"],"type":"object","properties":{"enabled":{"type":"boolean"}}},"dependency_warning":{"title":"DependencyWarning","required":["enabled"],"type":"object","properties":{"enabled":{"type":"boolean"}}},"portfolios":{"title":"Portfolios","required":["enabled"],"type":"object","properties":{"enabled":{"type":"boolean"}}}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const UpdateTask = {"body":{"title":"UpdateTaskrequest","type":"object","properties":{"custom_item_id":{"type":["number","null"],"description":"The custom task type ID for this task. A value of `null` (default) sets the task type to type \"Task\".\\\n \\\nTo get a list of available custom task type IDs for your Workspace, use the [Get Custom Task Types endpoint](ref:getcustomitems)."},"name":{"type":"string","examples":["Updated Task Name"]},"description":{"description":"To clear the task description, include `Description` with `\" \"`.","type":"string","examples":["Updated Task Content"]},"markdown_content":{"type":"string","description":"Markdown formatted description for the task. If both `markdown_content` and `description` are provided, `markdown_content` will be used instead of `description`."},"status":{"type":"string","examples":["in progress"]},"priority":{"type":"integer","contentEncoding":"int32","examples":[1]},"due_date":{"type":"integer","contentEncoding":"int64","examples":[1508369194377]},"due_date_time":{"type":"boolean"},"parent":{"description":"You can move a subtask to another parent task by including `\"parent\"` with a valid `task id`.\\\n \\\nYou cannot convert a subtask to a task by setting `\"parent\"` to `null`.","type":"string","examples":["abc1234"]},"time_estimate":{"type":"integer","contentEncoding":"int32","examples":[8640000]},"start_date":{"type":"integer","contentEncoding":"int64","examples":[1567780450202]},"start_date_time":{"type":"boolean"},"points":{"type":"number","description":"Update the task's Sprint Points.","examples":[3]},"assignees":{"title":"Assignees","required":["add","rem"],"type":"object","properties":{"add":{"type":"array","items":{"type":"integer","contentEncoding":"int32","examples":[182]},"description":""},"rem":{"type":"array","items":{"type":"integer","contentEncoding":"int32","examples":[183]},"description":""}}},"group_assignees":{"type":"object","properties":{"add":{"type":"array","items":{"type":"integer","contentEncoding":"int32","examples":["dd01f92f-48ca-446d-88a1-0beb0e8f5f14"]},"description":""},"rem":{"type":"array","items":{"type":"integer","contentEncoding":"int32","examples":["dd01f92f-48ca-446d-88a1-0beb0e8f5f13"]},"description":""}}},"watchers":{"title":"Watchers","required":["add","rem"],"type":"object","properties":{"add":{"type":"array","items":{"type":"integer","contentEncoding":"int32"},"description":""},"rem":{"type":"array","items":{"type":"integer","contentEncoding":"int32"},"description":""}}},"archived":{"type":"boolean"}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"task_id":{"type":"string","examples":["9hx"],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["task_id"]},{"type":"object","properties":{"custom_task_ids":{"type":"boolean","examples":[true],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"If you want to reference a task by its custom task id, this value must be `true`."},"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."}},"required":[]}]},"response":{"200":{"title":"UpdateTaskresponse","type":"object","properties":{"id":{"type":"string"},"custom_id":{"type":["string","null"]},"custom_item_id":{"type":["number","null"]},"name":{"type":"string"},"text_content":{"type":"string"},"description":{"type":"string"},"status":{"title":"Status","required":["status","color","orderindex","type"],"type":"object","properties":{"status":{"type":"string"},"color":{"type":"string"},"orderindex":{"type":"integer","contentEncoding":"int32"},"type":{"type":"string"}}},"archived":{"type":"boolean"},"orderindex":{"type":"string"},"date_created":{"type":"string"},"date_updated":{"type":"string"},"date_closed":{"type":["string","null"]},"creator":{"title":"Creator","required":["id","username","color","profilePicture"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"color":{"type":"string"},"profilePicture":{"type":"string"}}},"assignees":{"type":"array","items":{"type":"string"},"description":""},"group_assignees":{"type":"array","items":{"type":"string"},"description":""},"checklists":{"type":"array","items":{"type":"string"},"description":""},"tags":{"type":"array","items":{"type":"string"},"description":""},"parent":{"type":"string"},"priority":{"type":["string","null"]},"due_date":{"type":["string","null"]},"start_date":{"type":["string","null"]},"points":{"type":["number"]},"time_estimate":{"type":["string","null"]},"time_spent":{"type":["string","null"]},"custom_fields":{"type":"array","items":{"title":"CustomFields7","required":["id","name","type","type_config","date_created","hide_from_guests","required"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string"},"type_config":{"title":"TypeConfig1","type":"object","properties":{"single_user":{"type":"boolean"},"include_groups":{"type":"boolean"},"include_guests":{"type":"boolean"},"include_team_members":{"type":"boolean"}}},"date_created":{"type":"string"},"hide_from_guests":{"type":"boolean"},"value":{"type":"string"},"required":{"type":"boolean"}}},"description":""},"list":{"title":"List","required":["id"],"type":"object","properties":{"id":{"type":"string"}}},"folder":{"title":"Folder","required":["id"],"type":"object","properties":{"id":{"type":"string"}}},"space":{"title":"Space","required":["id"],"type":"object","properties":{"id":{"type":"string"}}},"url":{"type":"string"}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const UpdateTeam = {"body":{"title":"UpdateTeamrequest","type":"object","properties":{"name":{"type":"string","examples":["New User Group Name"]},"handle":{"type":"string","examples":["newusergroupname"]},"members":{"title":"Members2","required":["add","rem"],"type":"object","properties":{"add":{"type":"array","items":{"type":"integer","contentEncoding":"int32","examples":[123456]},"description":""},"rem":{"type":"array","items":{"type":"integer","contentEncoding":"int32","examples":[159753]},"description":""}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"group_id":{"type":"string","examples":["C9C58BE9"],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"User Group ID"}},"required":["group_id"]}]},"response":{"200":{"title":"UpdateTeamresponse","required":["id","team_id","userid","name","handle","date_created","initials","members","avatar"],"type":"object","properties":{"id":{"type":"string"},"team_id":{"type":"string"},"userid":{"type":"integer","contentEncoding":"int32"},"name":{"type":"string"},"handle":{"type":"string"},"date_created":{"type":"string"},"initials":{"type":"string"},"members":{"type":"array","items":{"title":"Members3","required":["id","username","email","color","initials","profilePicture"],"type":"object","properties":{"id":{"type":"integer","contentEncoding":"int32"},"username":{"type":"string"},"email":{"type":"string"},"color":{"type":"string"},"initials":{"type":"string"},"profilePicture":{"type":["string","null"]}}},"description":""},"avatar":{"title":"Avatar","required":["attachment_id","color","source","icon"],"type":"object","properties":{"attachment_id":{"type":["string","null"]},"color":{"type":["string","null"]},"source":{"type":["string","null"]},"icon":{"type":["string","null"]}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const UpdateView = {"body":{"title":"UpdateViewrequest","required":["name","type","parent","grouping","divide","sorting","filters","columns","team_sidebar","settings"],"type":"object","properties":{"name":{"type":"string","examples":["New View Name"]},"type":{"type":"string","examples":["list"]},"parent":{"title":"Parent","description":"The parent parameter specifies where the view is located in the ClickUp Hierarchy. Both `id` and `type` are required. \\\n \\\nThe `id` is the id of the Workspace, Space, Folder, or List where the view is located. \\\n \\\nThe `type` value indciates the level of the Hierarchy where the view is located.","required":["id","type"],"type":"object","properties":{"id":{"type":"string","description":"The id of the Workspace, Space, Folder, or List where the view is located.","examples":["512"]},"type":{"type":"integer","description":"The level of the Hierarchy where the view is created. \\\n \\\nOptions include: \\\n \\\nWorkspace (Everything Level): `7` \\\n \\\nSpace: `4` \\\n \\\nFolder: `5` \\\n \\\nList: `6`","contentEncoding":"int32","examples":["list"]}}},"grouping":{"title":"Grouping","required":["field","dir","collapsed","ignore"],"type":"object","properties":{"field":{"type":"string","description":"Set the field to group by.\\\n \\\nOptions include: `none`, `status`, `priority`, `assignee`, `tag`, or `dueDate`.","examples":["status"]},"dir":{"description":"Set a group sort order using `1` or `-1`.\\\n \\\nFor example, use `1`show tasks with urgent priority at the top of your view, and tasks with no priority at the bottom.\\\n \\\nUse `-1` to reverse the order to show tasks with no priority at the top of your view.","type":"integer","contentEncoding":"int32","examples":[1]},"collapsed":{"type":"array","items":{"type":"string"},"description":""},"ignore":{"type":"boolean"}}},"divide":{"title":"Divide","required":["collapsed"],"type":"object","properties":{"field":{"type":["null"]},"dir":{"type":["null"]},"collapsed":{"type":["boolean"]}}},"sorting":{"title":"Sorting","required":["fields"],"type":"object","properties":{"fields":{"type":"array","items":{"type":"string"},"description":"Include an array of fields to sort by.\\\n \\\n You can sort by the same fields available when [filtering a view](doc:filter-views)."}}},"filters":{"title":"Filters","required":["op","fields","search","show_closed"],"type":"object","properties":{"op":{"type":"string","description":"The available operator (`op``) values are `AND`` and `OR``.","examples":["AND"]},"fields":{"type":"array","items":{"type":"string"},"description":"View the list of [fields available](doc:filter-views) to filter by."},"search":{"type":"string"},"show_closed":{"type":"boolean"}}},"columns":{"title":"Columns","description":"Custom Fields added to a view at the Everything level will be added to all tasks in your Workspace. Once Custom Fields are added to one of these views, you cannot move it to another level of the Hierarchy.","required":["fields"],"type":"object","properties":{"fields":{"description":"Custom Fields require the `_cf` prefix and must be formatted as a JSON object.","type":"array","items":{"type":"string"}}}},"team_sidebar":{"title":"TeamSidebar","required":["assignees","assigned_comments","unassigned_tasks"],"type":"object","properties":{"assignees":{"type":"array","items":{"type":"string"},"description":""},"assigned_comments":{"type":"boolean"},"unassigned_tasks":{"type":"boolean"}}},"settings":{"title":"Settings","required":["show_task_locations","show_subtasks","show_subtask_parent_names","show_closed_subtasks","show_assignees","show_images","collapse_empty_columns","me_comments","me_subtasks","me_checklists"],"type":"object","properties":{"show_task_locations":{"type":"boolean"},"show_subtasks":{"description":"Acceptable values are `1`, `2`, or `3`, which show subtasks separate, expanded, or collapsed.","type":"integer","contentEncoding":"int32","examples":[3]},"show_subtask_parent_names":{"type":"boolean"},"show_closed_subtasks":{"type":"boolean"},"show_assignees":{"type":"boolean","examples":[true]},"show_images":{"type":"boolean","examples":[true]},"collapse_empty_columns":{"type":["string","null"]},"me_comments":{"type":"boolean","examples":[true]},"me_subtasks":{"type":"boolean","examples":[true]},"me_checklists":{"type":"boolean","examples":[true]}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"view_id":{"type":"string","examples":["3c"],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["view_id"]}]},"response":{"200":{"title":"UpdateViewresponse","required":["view"],"type":"object","properties":{"view":{"title":"View","required":["id","name","type","parent","grouping","divide","sorting","filters","columns","team_sidebar","settings"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string"},"parent":{"title":"Parent","description":"The parent parameter specifies where the view is located in the ClickUp Hierarchy. Both `id` and `type` are required. \\\n \\\nThe `id` is the id of the Workspace, Space, Folder, or List where the view is located. \\\n \\\nThe `type` value indciates the level of the Hierarchy where the view is located.","required":["id","type"],"type":"object","properties":{"id":{"type":"string","description":"The id of the Workspace, Space, Folder, or List where the view is located."},"type":{"type":"integer","description":"The level of the Hierarchy where the view is created. \\\n \\\nOptions include: \\\n \\\nWorkspace (Everything Level): `7` \\\n \\\nSpace: `4` \\\n \\\nFolder: `5` \\\n \\\nList: `6`","contentEncoding":"int32"}}},"grouping":{"title":"Grouping","required":["field","dir","collapsed","ignore"],"type":"object","properties":{"field":{"type":"string","description":"Set the field to group by.\\\n \\\nOptions include: `none`, `status`, `priority`, `assignee`, `tag`, or `dueDate`."},"dir":{"description":"Set a group sort order using `1` or `-1`.\\\n \\\nFor example, use `1`show tasks with urgent priority at the top of your view, and tasks with no priority at the bottom.\\\n \\\nUse `-1` to reverse the order to show tasks with no priority at the top of your view.","type":"integer","contentEncoding":"int32"},"collapsed":{"type":"array","items":{"type":"string"},"description":""},"ignore":{"type":"boolean"}}},"divide":{"title":"Divide","required":["collapsed"],"type":"object","properties":{"field":{"type":["null"]},"dir":{"type":["null"]},"collapsed":{"type":["boolean"]}}},"sorting":{"title":"Sorting","required":["fields"],"type":"object","properties":{"fields":{"type":"array","items":{"type":"string"},"description":"Include an array of fields to sort by.\\\n \\\n You can sort by the same fields available when [filtering a view](doc:filter-views)."}}},"filters":{"title":"Filters","required":["op","fields","search","show_closed"],"type":"object","properties":{"op":{"type":"string","description":"The available operator (`op``) values are `AND`` and `OR``."},"fields":{"type":"array","items":{"type":"string"},"description":"View the list of [fields available](doc:filter-views) to filter by."},"search":{"type":"string"},"show_closed":{"type":"boolean"}}},"columns":{"title":"Columns","description":"Custom Fields added to a view at the Everything level will be added to all tasks in your Workspace. Once Custom Fields are added to one of these views, you cannot move it to another level of the Hierarchy.","required":["fields"],"type":"object","properties":{"fields":{"description":"Custom Fields require the `_cf` prefix and must be formatted as a JSON object.","type":"array","items":{"type":"string"}}}},"team_sidebar":{"title":"TeamSidebar","required":["assignees","assigned_comments","unassigned_tasks"],"type":"object","properties":{"assignees":{"type":"array","items":{"type":"string"},"description":""},"assigned_comments":{"type":"boolean"},"unassigned_tasks":{"type":"boolean"}}},"settings":{"title":"Settings","required":["show_task_locations","show_subtasks","show_subtask_parent_names","show_closed_subtasks","show_assignees","show_images","collapse_empty_columns","me_comments","me_subtasks","me_checklists"],"type":"object","properties":{"show_task_locations":{"type":"boolean"},"show_subtasks":{"description":"Acceptable values are `1`, `2`, or `3`, which show subtasks separate, expanded, or collapsed.","type":"integer","contentEncoding":"int32"},"show_subtask_parent_names":{"type":"boolean"},"show_closed_subtasks":{"type":"boolean"},"show_assignees":{"type":"boolean"},"show_images":{"type":"boolean"},"collapse_empty_columns":{"type":["string","null"]},"me_comments":{"type":"boolean"},"me_subtasks":{"type":"boolean"},"me_checklists":{"type":"boolean"}}}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const UpdateWebhook = {"body":{"title":"UpdateWebhookrequest","required":["endpoint","events","status"],"type":"object","properties":{"endpoint":{"type":"string","examples":["https://yourdomain.com/webhook"]},"events":{"type":"string","examples":["*"]},"status":{"type":"string","examples":["active"]}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"webhook_id":{"type":"string","examples":["4b67ac88"],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"e506-4a29-9d42-26e504e3435e (uuid)"}},"required":["webhook_id"]}]},"response":{"200":{"title":"UpdateWebhookresponse","required":["id","webhook"],"type":"object","properties":{"id":{"type":"string"},"webhook":{"title":"Webhook","required":["id","userid","team_id","endpoint","client_id","events","task_id","list_id","folder_id","space_id","health","secret"],"type":"object","properties":{"id":{"type":"string"},"userid":{"type":"integer","contentEncoding":"int32"},"team_id":{"type":"integer","contentEncoding":"int32"},"endpoint":{"type":"string"},"client_id":{"type":"string"},"events":{"type":"array","items":{"type":"string"},"description":""},"task_id":{"type":["string","null"]},"list_id":{"type":["string","null"]},"folder_id":{"type":["string","null"]},"space_id":{"type":["string","null"]},"health":{"title":"Health","required":["status","fail_count"],"type":"object","properties":{"status":{"type":"string"},"fail_count":{"type":"integer","contentEncoding":"int32"}}},"secret":{"type":"string"}}}},"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
const UpdateatimeEntry = {"body":{"title":"UpdateatimeEntryrequest","required":["tags","tid"],"type":"object","properties":{"description":{"type":"string"},"tags":{"description":"Users on the Business Plan and above can include a time tracking label.","type":"array","items":{"title":"Tags6","required":["name","tag_fg","tag_bg"],"type":"object","properties":{"name":{"type":"string","examples":["name of tag"]},"tag_fg":{"type":"string","examples":["#FFFFFF"]},"tag_bg":{"type":"string","examples":["#BF55EC"]}}}},"tag_action":{"type":"string","examples":["add"]},"start":{"type":"integer","contentEncoding":"int64","description":"When providing `start`, you must also provide `end`.","examples":[1595289395842]},"end":{"type":"integer","contentEncoding":"int64","description":"When providing `end`, you must also provide `start`.","examples":[1595289495842]},"tid":{"type":"string","examples":["task_id"]},"billable":{"type":"boolean","examples":[true]},"duration":{"type":"integer","contentEncoding":"int32","examples":[100000]}},"$schema":"https://json-schema.org/draft/2020-12/schema"},"metadata":{"allOf":[{"type":"object","properties":{"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"Workspace ID"},"timer_id":{"type":"number","contentEncoding":"double","examples":[2004673344540003600],"$schema":"https://json-schema.org/draft/2020-12/schema"}},"required":["team_id","timer_id"]},{"type":"object","properties":{"custom_task_ids":{"type":"boolean","examples":[true],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"If you want to reference a task by it's custom task id, this value must be `true`."},"team_id":{"type":"number","contentEncoding":"double","examples":[123],"$schema":"https://json-schema.org/draft/2020-12/schema","description":"When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`"}},"required":[]}]},"response":{"200":{"type":"object","contentMediaType":"application/json","additionalProperties":true,"$schema":"https://json-schema.org/draft/2020-12/schema"}}} as const
;
export { AddDependency, AddGuestToFolder, AddGuestToList, AddGuestToTask, AddTagToTask, AddTaskLink, AddTaskToList, Addtagsfromtimeentries, Changetagnamesfromtimeentries, CreateChatChannel, CreateChatMessage, CreateChatReaction, CreateChatViewComment, CreateChecklist, CreateChecklistItem, CreateDirectMessageChatChannel, CreateDoc, CreateFolder, CreateFolderFromTemplate, CreateFolderListFromTemplate, CreateFolderView, CreateFolderlessList, CreateGoal, CreateKeyResult, CreateList, CreateListComment, CreateListView, CreateLocationChatChannel, CreatePage, CreateReplyMessage, CreateSpace, CreateSpaceListFromTemplate, CreateSpaceTag, CreateSpaceView, CreateTask, CreateTaskAttachment, CreateTaskComment, CreateTaskFromTemplate, CreateTeamView, CreateThreadedComment, CreateUserGroup, CreateWebhook, CreateWorkspaceAuditLog, Createatimeentry, DeleteChatChannel, DeleteChatMessage, DeleteChatReaction, DeleteChecklist, DeleteChecklistItem, DeleteComment, DeleteDependency, DeleteFolder, DeleteGoal, DeleteKeyResult, DeleteList, DeleteSpace, DeleteSpaceTag, DeleteTask, DeleteTaskLink, DeleteTeam, DeleteView, DeleteWebhook, DeleteatimeEntry, Deletetimetracked, EditChecklist, EditChecklistItem, EditGuestOnWorkspace, EditKeyResult, EditPage, EditSpaceTag, EditUserOnWorkspace, Edittimetracked, GetAccessToken, GetAccessibleCustomFields, GetAuthorizedTeams, GetAuthorizedUser, GetBulkTasksTimeinStatus, GetChatChannel, GetChatChannelFollowers, GetChatChannelMembers, GetChatChannels, GetChatMessageReactions, GetChatMessageReplies, GetChatMessageTaggedUsers, GetChatMessages, GetChatViewComments, GetCustomItems, GetCustomRoles, GetDoc, GetDocPageListing, GetDocPages, GetFilteredTeamTasks, GetFolder, GetFolderAvailableFields, GetFolderViews, GetFolderlessLists, GetFolders, GetGoal, GetGoals, GetGuest, GetList, GetListComments, GetListMembers, GetListViews, GetLists, GetPage, GetSpace, GetSpaceAvailableFields, GetSpaceTags, GetSpaceViews, GetSpaces, GetTask, GetTaskComments, GetTaskMembers, GetTaskSTimeinStatus, GetTaskTemplates, GetTasks, GetTeamAvailableFields, GetTeamViews, GetTeams1, GetThreadedComments, GetUser, GetView, GetViewTasks, GetWebhooks, GetWorkspaceplan, GetWorkspaceseats, Getalltagsfromtimeentries, Getrunningtimeentry, Getsingulartimeentry, Gettimeentrieswithinadaterange, Gettimeentryhistory, Gettrackedtime, InviteGuestToWorkspace, InviteUserToWorkspace, PatchChatMessage, RemoveCustomFieldValue, RemoveGuestFromFolder, RemoveGuestFromList, RemoveGuestFromTask, RemoveGuestFromWorkspace, RemoveTagFromTask, RemoveTaskFromList, RemoveUserFromWorkspace, Removetagsfromtimeentries, SearchDocs, SetCustomFieldValue, SharedHierarchy, StartatimeEntry, StopatimeEntry, Tracktime, UpdateChatChannel, UpdateComment, UpdateFolder, UpdateGoal, UpdateList, UpdatePrivacyAndAccess, UpdateSpace, UpdateTask, UpdateTeam, UpdateView, UpdateWebhook, UpdateatimeEntry }
